{"version":3,"sources":["components/util.js","components/dropzone/dropzone.js","components/textArea/textArea.js","components/previewPane/previewPane.js","components/fileDisplay/fileDisplay.js","services/primerCheck.js","pages/upload/uploadPage.js","components/dropdown/dropdown.js","components/mutGraphs/mutGraphs.js","components/primerMap/primerMap.js","components/VisualizationDisplay/visualizationDisplay.js","components/tableDisplay/filter.js","components/tableDisplay/tableDisplay.js","pages/results/resultsPage.js","App.js","serviceWorker.js","index.js"],"names":["validateFormat","content","exec","DropZone","selectedFiles","setSelectedFiles","setErrorMessage","filesSelected","e","a","files","target","checkFiles","to_store","file","handleFile","concat","readFile","to_return","console","warn","message","reader","FileReader","log","Promise","resolve","reject","onload","event","result","name","onerror","abort","DOMException","readAsText","Form","Group","controlId","htmlFor","id","Container","className","onDragOver","preventDefault","onDragEnter","onDragLeave","onDrop","dataTransfer","type","onChange","multiple","TextArea","setTextFieldFasta","useState","errorMessage","textAreaValue","setTextAreaValue","inputSample","useEffect","Row","Col","Label","Button","variant","size","onClick","Control","as","placeholder","value","aria-describedby","Text","muted","split","map","i","key","Feedback","PreviewPane","show","handleClose","Modal","onHide","Header","closeButton","Title","Body","newline_matches","matchAll","length","slice","index","formatContent","Footer","FileDisplay","preview","setPreview","previewOpen","setPreviewOpen","removeFile","fileName","prevFiles","filter","fileType","substring","lastIndexOf","lg","md","invalid","openPreview","Math","floor","parseFloat","pow","toFixed","fileSize","baseURL","to_send","data","axios","post","UploadPage","setResults","showSubmit","setShowSubmit","displayedFiles","setDisplayedFiles","validFiles","setValidFiles","textFieldFasta","fileErrorMessage","setFileErrorMessage","open","setOpen","isLoading","setIsLoading","history","useHistory","openId","filteredFiles","reduce","current","find","Collapse","in","noValidate","Fade","aria-controls","aria-expanded","setTimeout","primerCheckService","then","response","push","catch","disabled","Spinner","animation","role","aria-hidden","CustomMenu","React","forwardRef","ref","children","style","labeledBy","setValue","aria-labelledby","FormControl","autoFocus","Children","toArray","child","props","toLowerCase","startsWith","DropdownMenu","displayOptions","resultToDisplay","location","useLocation","match","useRouteMatch","handleClick","newLabel","innerText","items","url","includes","newItems","item","join","pathname","Dropdown","Toggle","Menu","Item","active","Divider","displayOption","vl","require","memo","toDisplay","combinedOverview","timeFrameBrush","setTimeFrameBrush","lookBack","setLookBack","parentRef","useRef","toPlot","chartSpec","horSize","width","smooth_mut","smooth_mut3","brush","undefined","selectInterval","encodings","init","x","time","weightedAverageCalculation","window","mean","frame","fieldT","title","y","color","fieldN","scale","scheme","legend","orient","columns","navChart","markLine","select","transform","encode","fieldQ","height","baseChart","point","domain","tooltip","field","overviewChart","currData","vconcat","layer","buildGraph","offsetWidth","intervalSignal","vegaEmbed","toJSON","patch","spec","signals","signal","view","addSignalListener","func","wait","immediate","timeout","context","this","args","arguments","later","apply","callNow","clearTimeout","debounce","start_end_date","date","min","max","step","colorScale","scaleLinear","range","setTooltipContent","db","downloadData","setDownloadData","getDateString","Date","getTime","getTimezoneOffset","toISOString","countryMisses","count","has","ISO_A3","set","get","Map","getCountryMissCounts","Object","keys","getDates","startDate","endDate","countryMissesPct","Array","from","accumulated","country","values","maxPctMiss","headers","label","filename","toDownload","countryISO","absMiss","element","country_name","country_total","missed_pct","abs_miss","downloadDataClick","data-tip","projectionConfig","geography","geographies","geo","missCount","properties","pctMiss","rsmKey","onMouseEnter","NAME","onMouseLeave","countryISO3","timeFrame","extent","dates","nextDay","prevDay","setHours","getHours","default","fill","parseInt","outline","hover","cursor","VisualizationDisplay","overviewData","mapData","dbCount","tooltipContent","html","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","useAsyncDebounce","column","DefaultNumberRangeColumnFilter","filterValue","preFilteredRows","setFilter","useMemo","forEach","row","val","old","CountryColumnFilter","SelectColumnFilter","options","Set","add","option","TableDisplay","accessor","Filter","disableFilters","header","filterTypes","text","rows","rowValue","String","defaultColumn","useTable","initialState","pageIndex","useFilters","useGlobalFilter","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageSize","responsive","striped","bordered","headerGroup","getHeaderGroupProps","getHeaderProps","render","canFilter","getRowProps","cells","cell","display_str","idx","getCellProps","sm","InputGroup","Prepend","defaultValue","Number","aria-label","InputData","ResultPage","results","useParams","display","getDBAndPrimerNames","rawData","primerNames","primerName","primerDetails","mutation_pct","total","mutation3_pct","misses3","makeOverview","tableData","addName","primer","primers","dataForDisplay","intersection","findIntersection","accession_id","findListIntersection","virus","makeTableData","total_mut_pct","total_mut3_pct","makeCombinedOverview","filteredTableData","dataFilter","list1","list2","union","currDate","isWithinTimeFrame","App","basename","to","textDecoration","exact","path","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.bcc68ce6.chunk.js","sourcesContent":["export const validateFormat = (content) => {\r\n  let format = /^>fwd[\\s\\S]{2}[ACGTacgt]+[\\s\\S]{1,2}>rev[\\s\\S]{1,2}[ACGTacgt]+[\\s\\S]{1,2}>prb[\\s\\S]{1,2}[ACGTacgt]+[\\s\\S]{1,2}$/;\r\n  let correct_format = format.exec(content);\r\n  return correct_format !== null;\r\n};\r\n\r\nexport const getRandomInt = (min, max) => {\r\n  const lower_r = Math.floor(min);\r\n  const upper_r = Math.floor(max);\r\n  return Math.floor(lower_r + Math.random() * (upper_r - lower_r));\r\n};\r\n\r\n// credit: https://davidwalsh.name/function-debounce\r\n// Returns a function, that, as long as it continues to be invoked, will not\r\n// be triggered. The function will be called after it stops being called for\r\n// N milliseconds. If `immediate` is passed, trigger the function on the\r\n// leading edge, instead of the trailing.\r\nexport function debounce(func, wait, immediate) {\r\n  var timeout;\r\n  return function () {\r\n    var context = this,\r\n      args = arguments;\r\n    var later = function () {\r\n      timeout = null;\r\n      if (!immediate) func.apply(context, args);\r\n    };\r\n    var callNow = immediate && !timeout;\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(later, wait);\r\n    if (callNow) func.apply(context, args);\r\n  };\r\n}\r\n","import React from 'react';\r\nimport './dropzone.css';\r\nimport { validateFormat } from '../util';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\n\r\nconst DropZone = ({ selectedFiles, setSelectedFiles, setErrorMessage }) => {\r\n\r\n    const dragOver = (e) => {\r\n        e.preventDefault();\r\n    }\r\n    const dragEnter = (e) => {\r\n        e.preventDefault();\r\n    }\r\n    const dragLeave = (e) => {\r\n        e.preventDefault();\r\n    }\r\n    const fileDrop = (e) => {\r\n        e.preventDefault();\r\n        const data = e.dataTransfer\r\n        const files = data.files;\r\n        checkFiles(files)\r\n    }\r\n\r\n    const filesSelected = async (e) => {\r\n        const files = e.target.files;\r\n        await checkFiles(files)\r\n    }\r\n    const checkFiles = async (files) => {\r\n        let to_store = []\r\n        for (let file of files) {\r\n            to_store = to_store.concat(await handleFile(file))\r\n        }\r\n        setSelectedFiles(selectedFiles.concat(...to_store))\r\n    }\r\n    const handleFile = async (file) => {\r\n        try {\r\n            const to_return = await readFile(file)\r\n            return to_return\r\n        } catch (e) {\r\n            console.warn(e.message)\r\n        }\r\n    }\r\n\r\n    const readFile = (file) => {\r\n        const reader = new FileReader();\r\n        console.log(file)\r\n        return new Promise((resolve, reject) => {\r\n            reader.onload = function (event) {\r\n                if (validateFormat(event.target.result)) {\r\n                    file['invalid'] = false\r\n                    file['content'] = event.target.result\r\n                    file['id'] = file.name\r\n                } else {\r\n                    console.log('file loaded but invalid format');\r\n                    setErrorMessage('File not a recognized format. Please check')\r\n                    file['invalid'] = true\r\n                }\r\n                resolve(file);\r\n            }\r\n            reader.onerror = function () {\r\n                reader.abort()\r\n                reject(new DOMException(\"Problem parsing input file.\"));\r\n            }\r\n\r\n            reader.readAsText(file, \"UTF-8\");\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Form.Group controlId='fasta-sequence'>\r\n            <label htmlFor='fasta-input' id='fasta-input-label'>\r\n                <Container className='drop-container' onDragOver={dragOver}\r\n                    onDragEnter={dragEnter}\r\n                    onDragLeave={dragLeave}\r\n                    onDrop={fileDrop}>\r\n                    <div className=\"drop-message\">\r\n                        <div className=\"upload-icon\"></div>\r\n                        Drag & Drop files here or click to upload\r\n                    </div>\r\n                    <input\r\n                        className=\"file-input\"\r\n                        id=\"fasta-input\"\r\n                        type=\"file\"\r\n                        onChange={filesSelected}\r\n                        multiple\r\n                    />\r\n                </Container>\r\n            </label>\r\n        </Form.Group>\r\n    );\r\n}\r\n\r\nexport default DropZone;","\r\nimport React, { useState, useEffect } from 'react'\r\nimport './textArea.css'\r\nimport Form from 'react-bootstrap/Form'\r\nimport { validateFormat } from '../util'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nconst TextArea = ({ setTextFieldFasta }) => {\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n    const [textAreaValue, setTextAreaValue] = useState('')\r\n    // const [fileAttached, setFileAttached] = useState(false)\r\n    const inputSample = `>fwd\\nGTGAAATGGTCATGTGTGGCGG\\n>rev\\nTATGCTAATAGTGTTTTTAACATTTG\\n>prb\\nCAGGTGGAACCTCATCAGGAGATGC`\r\n\r\n    useEffect(() => {\r\n        if (validateFormat(textAreaValue)) {\r\n            console.log('sequence oKAY!', textAreaValue);\r\n            // const lastMod = Date.now()\r\n            // const tempDate = new Date(lastMod)\r\n            // const file = {\r\n            //     \"content\": textAreaValue,\r\n            //     \"invalid\": false,\r\n            //     \"lastModified\": lastMod,\r\n            //     \"lastModifiedDate\": tempDate,\r\n            //     \"name\": `fasta${lastMod}`,\r\n            //     'size': getRandomInt(80, 90)\r\n            // }\r\n            setTextFieldFasta([{\r\n                \"invalid\": false,\r\n                \"content\": textAreaValue,\r\n                \"id\": \"text_input_fasta\",\r\n            }])\r\n        } else {\r\n            console.log('Nope');\r\n            setTextFieldFasta([])\r\n            setErrorMessage('Sequence not recognized! Please check.')\r\n        }\r\n    }, [textAreaValue, setTextFieldFasta])\r\n\r\n    const handleChange = (e) => {\r\n        const content = e.target.value\r\n        setTextAreaValue(content)\r\n    }\r\n    const enterSample = () => {\r\n        setTextAreaValue(inputSample)\r\n    }\r\n    return (\r\n        <Form.Group controlId='fasta-sequence'>\r\n            <Row className='fasta-input-header'>\r\n                <Col>\r\n                    <Form.Label className='fasta-input-title'>\r\n                        Fasta Sequence\r\n                    </Form.Label>\r\n                </Col>\r\n                <Col className=\"sample-fasta\">\r\n                    <Button variant='secondary' size='sm' onClick={enterSample}>Sample Input</Button>\r\n                </Col>\r\n            </Row>\r\n            <Form.Control\r\n                as='textarea'\r\n                placeholder=\"Input Fasta Seq here.\"\r\n                onChange={handleChange}\r\n                type=\"text\"\r\n                value={textAreaValue}\r\n                className='mx-sm-lg-auto'\r\n                aria-describedby=\"fastaSequenceHelpBlock\"\r\n            />\r\n            <Form.Text id=\"fastaSequenceHelpBlock\" muted>\r\n                Format for the primer sequence should be as follows:{<br />}\r\n                <strong>\r\n                    {inputSample\r\n                        .split('\\n')\r\n                        .map((value, i) => <p key={i}>{value}</p>)}\r\n                </strong>\r\n            </Form.Text>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n                {errorMessage}\r\n            </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n    )\r\n}\r\n\r\nexport default TextArea","import './previewPane.css'\r\nimport React from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\nconst PreviewPane = ({ show, handleClose, content }) => {\r\n    const formatContent = (content) => {\r\n        const regex = /\\s+/g;\r\n        const newline_matches = [...content.matchAll(regex)]\r\n        let result = []\r\n        for (let i = 0; i < newline_matches.length; i++) {\r\n            if (i === 0) {\r\n                result = result.concat(content.slice(0, newline_matches[0].index))\r\n            }\r\n            else {\r\n\r\n                result = result.concat(content.slice(newline_matches[i - 1].index + 1, newline_matches[i].index))\r\n            }\r\n        }\r\n        return result\r\n    }\r\n    return (\r\n        <Modal show={show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Fasta Primer Preview</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>{formatContent(content).map((value, index) => <p key={index}>{value}</p>)}</Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"primary\" onClick={handleClose}>\r\n                    Close\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>)\r\n}\r\n\r\nexport default PreviewPane","import './fileDisplay.css';\r\nimport React, { useState } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport PreviewPane from '../previewPane/previewPane';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst FileDisplay = ({ file, errorMessage, setSelectedFiles }) => {\r\n    const [preview, setPreview] = useState('')\r\n    const [previewOpen, setPreviewOpen] = useState(false)\r\n    const fileSize = (size) => {\r\n        if (size === 0) return '0 Bytes';\r\n        const k = 1024;\r\n        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n        const i = Math.floor(Math.log(size) / Math.log(k));\r\n        return parseFloat((size / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n    }\r\n\r\n    const fileType = (fileName) => {\r\n        const fileType = fileName.substring(fileName.lastIndexOf('.') + 1, fileName.length)\r\n        if (fileType.length === fileName.length) {\r\n            return 'Fasta'\r\n        }\r\n        else {\r\n            return fileType\r\n        }\r\n    }\r\n\r\n    const removeFile = (fileName) => {\r\n        setSelectedFiles(prevFiles => prevFiles.filter(file => file.name !== fileName))\r\n    }\r\n    const openPreview = (file) => {\r\n        setPreview(file.content)\r\n        setPreviewOpen(true)\r\n    }\r\n\r\n    return <Container className=\"file-status-bar\">\r\n        <Row>\r\n            <div className=\"file-type-logo\"></div>\r\n            <div className=\"file-type\">{fileType(file.name)}</div>\r\n            <Col lg={5} md={12} className='file-info'>\r\n                <div className={`file-name ${file.invalid ? 'file-error' : ''}`} onClick={file.invalid ? () => removeFile(file.name) : () => openPreview(file)}>{file.name}</div>\r\n                <div className=\"file-size\">({fileSize(file.size)})</div>\r\n            </Col>\r\n            <Col lg={4} md={8} className='file-error-message'>\r\n                {file.invalid\r\n                    ? <div className='file-error-message-text'>({errorMessage})</div>\r\n                    : null}\r\n            </Col>\r\n            <Col lg={2} md={2} className=\"file-remove\" >\r\n                <Button onClick={() => removeFile(file.name)} variant='danger' size='sm'>Remove</Button>\r\n            </Col>\r\n        </Row>\r\n        <PreviewPane show={previewOpen} handleClose={() => setPreviewOpen(false)} content={preview} />\r\n    </Container >\r\n}\r\n\r\nexport default FileDisplay;","import axios from \"axios\";\r\n\r\nconst baseURL =\r\n  \"https://mendel2.bii.a-star.edu.sg/METHODS/corona/gamma/cgi-bin/cgi_scripts/primerMVP.py\";\r\n// const baseURL = \"http://localhost:3001\";\r\n\r\nconst checkFile = (file) => {\r\n  return axios.post(`${baseURL}`, file);\r\n};\r\n\r\nconst checkFiles = (files) => {\r\n  const to_send = { data: files };\r\n  return axios.post(`${baseURL}`, to_send);\r\n  // return axios.post(`${baseURL}/check_primers`, to_send);\r\n};\r\n\r\nexport default { checkFile, checkFiles };\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Collapse from \"react-bootstrap/Collapse\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport Fade from \"react-bootstrap/Fade\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport DropZone from \"../../components/dropzone/dropzone\";\r\nimport TextArea from \"../../components/textArea/textArea\";\r\nimport FileDisplay from \"../../components/fileDisplay/fileDisplay\";\r\nimport primerCheckService from \"../..//services/primerCheck\";\r\nimport \"./uploadPage.css\";\r\n\r\nconst UploadPage = ({ setResults }) => {\r\n  const [showSubmit, setShowSubmit] = useState(false);\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n  const [displayedFiles, setDisplayedFiles] = useState([]);\r\n  const [validFiles, setValidFiles] = useState([]);\r\n  const [textFieldFasta, setTextFieldFasta] = useState([]);\r\n  const [fileErrorMessage, setFileErrorMessage] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [open, setOpen] = useState(true);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const openId = \"open-containers\";\r\n\r\n  useEffect(() => {\r\n    const filteredFiles = selectedFiles.reduce((files, current) => {\r\n      const match = files.find((file) => file.name === current.name);\r\n      if (match) {\r\n        return files;\r\n      } else {\r\n        return files.concat(current);\r\n      }\r\n    }, []);\r\n    setDisplayedFiles([...filteredFiles]);\r\n  }, [selectedFiles]);\r\n\r\n  useEffect(() => {\r\n    const filteredFiles = displayedFiles.reduce((files, current) => {\r\n      return current.invalid ? files : files.concat(current);\r\n    }, []);\r\n    setValidFiles(filteredFiles);\r\n  }, [displayedFiles]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      (validFiles.length === displayedFiles.length &&\r\n        validFiles.length !== 0 &&\r\n        textFieldFasta.length === 0) ||\r\n      (textFieldFasta.length !== 0 && validFiles.length === 0)\r\n    ) {\r\n      console.log(validFiles);\r\n      setErrorMessage(\"\");\r\n      return setShowSubmit(true);\r\n    } else if (textFieldFasta.length !== 0 && validFiles.length !== 0) {\r\n      setShowSubmit(false);\r\n      setErrorMessage(\r\n        \"Either upload a single sequence through input or select files to upload! Not Both!\"\r\n      );\r\n    }\r\n    setShowSubmit(false);\r\n  }, [validFiles, displayedFiles, textFieldFasta]);\r\n\r\n  const resetStates = () => {\r\n    setShowSubmit(false);\r\n    setSelectedFiles([]);\r\n    setTextFieldFasta([]);\r\n    setFileErrorMessage(\"\");\r\n    setErrorMessage(\"\");\r\n  };\r\n  const submitForm = () => {\r\n    console.log(validFiles, textFieldFasta);\r\n    setOpen(!open);\r\n    setIsLoading(true);\r\n    setTimeout(() => {\r\n      primerCheckService\r\n        .checkFiles(validFiles.length === 0 ? textFieldFasta : validFiles)\r\n        .then((response) => {\r\n          resetStates();\r\n          setIsLoading(false);\r\n          console.log(\"response is\", response);\r\n          console.log(\"data from is: \", response.data);\r\n          setResults(response.data[0]);\r\n          history.push(\"/results/Overview\");\r\n        })\r\n        .catch((e) => console.log(e));\r\n    }, 500);\r\n  };\r\n  return (\r\n    <div>\r\n      <Collapse id={openId} in={open}>\r\n        <div className=\"collapse-container\">\r\n          <Container>\r\n            <Form noValidate>\r\n              <TextArea setTextFieldFasta={setTextFieldFasta} />\r\n              <p className=\"alternative-upload\">OR</p>\r\n              <DropZone\r\n                selectedFiles={selectedFiles}\r\n                setSelectedFiles={setSelectedFiles}\r\n                setErrorMessage={setFileErrorMessage}\r\n              />\r\n            </Form>\r\n            <Container className=\"file-display-container\">\r\n              {displayedFiles.map((file, index) => (\r\n                <FileDisplay\r\n                  file={file}\r\n                  errorMessage={fileErrorMessage}\r\n                  setSelectedFiles={setSelectedFiles}\r\n                  key={index}\r\n                />\r\n              ))}\r\n            </Container>\r\n          </Container>\r\n        </div>\r\n      </Collapse>\r\n      <Container>\r\n        <Row className=\"upload-error-message\">{errorMessage}</Row>\r\n        {showSubmit ? (\r\n          <Fade in={open}>\r\n            <Button\r\n              id={openId}\r\n              aria-controls={openId}\r\n              aria-expanded={open}\r\n              onClick={submitForm}\r\n              disabled={isLoading}\r\n            >\r\n              {isLoading ? (\r\n                <Spinner\r\n                  as=\"span\"\r\n                  className=\"loader\"\r\n                  animation=\"border\"\r\n                  size=\"sm\"\r\n                  role=\"status\"\r\n                  aria-hidden=\"true\"\r\n                />\r\n              ) : null}\r\n              {isLoading ? \"Loading...\" : \"Submit\"}\r\n            </Button>\r\n          </Fade>\r\n        ) : null}\r\n        {isLoading ? (\r\n          <Fade in={!open}>\r\n            <Container className=\"loading-container\">\r\n              <Spinner\r\n                id={openId}\r\n                as=\"span\"\r\n                animation=\"border\"\r\n                role=\"status\"\r\n                variant=\"dark\"\r\n              />\r\n            </Container>\r\n          </Fade>\r\n        ) : null}\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadPage;\r\n","import React, { useState } from \"react\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport { useHistory, useLocation, useRouteMatch } from \"react-router-dom\";\r\nimport \"./dropdown.css\";\r\n\r\nconst CustomMenu = React.forwardRef(\r\n  ({ children, style, className, \"aria-labelledby\": labeledBy }, ref) => {\r\n    const [value, setValue] = useState(\"\");\r\n\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={style}\r\n        className={className}\r\n        aria-labelledby={labeledBy}\r\n      >\r\n        <FormControl\r\n          autoFocus\r\n          className=\"mx-3 my-2 w-auto\"\r\n          placeholder=\"Type to filter...\"\r\n          onChange={(e) => setValue(e.target.value)}\r\n          value={value}\r\n        />\r\n        <ul className=\"list-unstyled\">\r\n          {React.Children.toArray(children).filter(\r\n            (child) =>\r\n              !value || child.props.children.toLowerCase().startsWith(value)\r\n          )}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nconst DropdownMenu = ({ displayOptions, resultToDisplay }) => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const match = useRouteMatch();\r\n  const handleClick = (event) => {\r\n    const newLabel = event.target.innerText;\r\n\r\n    const viewing = match.url.split(\"/\")[2];\r\n    const items = viewing.split(\"&\");\r\n    if (items.includes(\"Overview\") || newLabel === \"Overview\") {\r\n      history.push(`/results/${newLabel}`);\r\n    } else if (items.includes(newLabel)) {\r\n      let newItems = items;\r\n      if (items.length > 1) {\r\n        newItems = items.filter((item) => item !== newLabel);\r\n      }\r\n      history.push(`/results/${newItems.join(\"&\")}`);\r\n    } else {\r\n      history.push(`${location.pathname}&${newLabel}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <p className=\"display-tag\">Displaying</p>\r\n      <Dropdown className=\"dropdown\">\r\n        <Dropdown.Toggle variant=\"light\" id=\"dropdown-custom-components\">\r\n          {resultToDisplay.join(\", \")}\r\n        </Dropdown.Toggle>\r\n\r\n        <Dropdown.Menu as={CustomMenu}>\r\n          <Dropdown.Item\r\n            as=\"button\"\r\n            onClick={handleClick}\r\n            active={resultToDisplay[0] === \"Overview\"}\r\n          >\r\n            Overview\r\n          </Dropdown.Item>\r\n          <Dropdown.Divider>overview</Dropdown.Divider>\r\n\r\n          {displayOptions.map((displayOption, index) => {\r\n            return displayOption !== \"databaseCount\" ? (\r\n              <Dropdown.Item\r\n                key={index}\r\n                onClick={handleClick}\r\n                active={resultToDisplay.find(\r\n                  (result) => result === displayOption\r\n                )}\r\n              >\r\n                {displayOption}\r\n              </Dropdown.Item>\r\n            ) : null;\r\n          })}\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DropdownMenu;\r\n","import React, { useEffect, useState, memo } from \"react\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport vegaEmbed from \"vega-embed\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport { debounce } from \"../util\";\r\nimport \"./mutGraphs.css\";\r\n\r\nconst vl = require(\"vega-lite-api\");\r\n\r\nfunction buildGraph(\r\n  lookBack,\r\n  toPlot,\r\n  combinedOverview,\r\n  horSize,\r\n  timeFrameBrush\r\n) {\r\n  const width = horSize * (4 / 5);\r\n  const total_mut_pct = \"total_mut_pct\";\r\n  const total_mut3_pct = \"total_mut3_pct\";\r\n  const total_smooth_mut = \"total_smooth_mut_pct\";\r\n  const total_smooth_mut3 = \"total_smooth_mut3_pct\";\r\n  const mutation_pct = \"mutation_pct\";\r\n  const mutation3_pct = \"mutation3_pct\";\r\n  const smooth_mut = \"smooth_mutation_pct\";\r\n  const smooth_mut3 = \"smooth_mutation3_pct\";\r\n  const brush =\r\n    timeFrameBrush === undefined || timeFrameBrush.length === 0\r\n      ? vl.selectInterval().encodings(\"x\")\r\n      : vl\r\n          .selectInterval()\r\n          .encodings(\"x\")\r\n          .init({ x: timeFrameBrush.map((time) => time / 1) });\r\n  const weightedAverageCalculation = [\r\n    vl\r\n      .window(vl.mean(total_mut_pct).as(total_smooth_mut))\r\n      .frame([-lookBack, 0]),\r\n    vl\r\n      .window(vl.mean(total_mut3_pct).as(total_smooth_mut3))\r\n      .frame([-lookBack, 0]),\r\n    vl.window(vl.mean(mutation_pct).as(smooth_mut)).frame([-lookBack, 0]),\r\n    vl.window(vl.mean(mutation3_pct).as(smooth_mut3)).frame([-lookBack, 0]),\r\n  ];\r\n\r\n  const x = vl.x().fieldT(\"date\").title(null);\r\n  const y = vl.y();\r\n  const color = vl\r\n    .color()\r\n    .fieldN(\"name\")\r\n    .scale({ scheme: \"tableau20\" })\r\n    .legend({ type: \"symbol\", orient: \"top\", columns: 3 });\r\n\r\n  const navChart = vl\r\n    .markLine()\r\n    .select(brush)\r\n    .transform(...weightedAverageCalculation)\r\n    .encode(x, y.fieldQ(smooth_mut), color)\r\n    .width(width)\r\n    .height(60)\r\n    .title(\"TimeFrame Selection\");\r\n\r\n  const baseChart = vl\r\n    .markLine({ point: true })\r\n    .transform(...weightedAverageCalculation)\r\n    .encode(\r\n      x.scale({ domain: brush }).title(\"Date\"),\r\n      y,\r\n      color,\r\n      vl.tooltip([\r\n        { field: \"name\", type: \"  nominal\" },\r\n        { field: \"date\", type: \"temporal\" },\r\n        { field: smooth_mut, type: \"quantitative\" },\r\n        { field: smooth_mut3, type: \"quantitative\" },\r\n        { field: mutation_pct, type: \"quantitative\" },\r\n        { field: mutation3_pct, type: \"quantitative\" },\r\n      ])\r\n    )\r\n    .width(width);\r\n\r\n  const overviewChart = baseChart.data(combinedOverview).encode(\r\n    vl.tooltip([\r\n      { field: \"name\", type: \"  nominal\" },\r\n      { field: \"date\", type: \"temporal\" },\r\n      { field: total_mut_pct, type: \"quantitative\" },\r\n      { field: total_smooth_mut, type: \"quantitative\" },\r\n      { field: total_mut3_pct, type: \"quantitative\" },\r\n      { field: total_smooth_mut3, type: \"quantitative\" },\r\n    ])\r\n  );\r\n\r\n  const names = toPlot.reduce((data, currData) => {\r\n    if (data.includes(currData.name)) {\r\n      return data;\r\n    } else {\r\n      data.push(currData.name);\r\n      return data;\r\n    }\r\n  }, []);\r\n  if (names.length === 1) {\r\n    const chartSpec = vl\r\n      .data(toPlot)\r\n      .vconcat(\r\n        navChart,\r\n        baseChart.encode(y.fieldQ(smooth_mut)).title(\"Mutation Percentage\"),\r\n        baseChart\r\n          .encode(y.fieldQ(smooth_mut3))\r\n          .title(\"Mutation Percentage 3' end\")\r\n      );\r\n    return chartSpec;\r\n  } else {\r\n    const chartSpec = vl\r\n      .data(toPlot)\r\n      .vconcat(\r\n        navChart,\r\n        vl\r\n          .layer(\r\n            overviewChart.encode(\r\n              y.fieldQ(total_smooth_mut),\r\n              vl.color({ value: \"#aaee99\" })\r\n            ),\r\n            overviewChart.encode(\r\n              y.fieldQ(total_smooth_mut3),\r\n              vl.color({ value: \"#ff99aa\" })\r\n            )\r\n          )\r\n          .title(\"Combined Mutation Percentage\"),\r\n        baseChart.encode(y.fieldQ(smooth_mut)).title(\"Mutation Percentage\"),\r\n        baseChart\r\n          .encode(y.fieldQ(smooth_mut3))\r\n          .title(\"Mutation Percentage 3' end\")\r\n      );\r\n    return chartSpec;\r\n  }\r\n}\r\n\r\nconst MutGraphs = ({\r\n  toDisplay,\r\n  data,\r\n  combinedOverview,\r\n  timeFrameBrush,\r\n  setTimeFrameBrush,\r\n}) => {\r\n  const [lookBack, setLookBack] = useState(6);\r\n  const parentRef = React.useRef(null);\r\n\r\n  function handleChange(e) {\r\n    setLookBack(e.target.value);\r\n  }\r\n\r\n  const toPlot = data.filter((data) => {\r\n    if (toDisplay[0] !== \"Overview\") {\r\n      return toDisplay.includes(data.name);\r\n    }\r\n    return data;\r\n  });\r\n\r\n  useEffect(() => {\r\n    const chartSpec = buildGraph(\r\n      lookBack,\r\n      toPlot,\r\n      combinedOverview,\r\n      parentRef.current.offsetWidth,\r\n      timeFrameBrush\r\n    );\r\n\r\n    let intervalSignal = \"\";\r\n    vegaEmbed(\"#chart\", chartSpec.toJSON(), {\r\n      patch: (spec) => {\r\n        console.log(spec);\r\n        const signals = spec.signals;\r\n        for (const signal of signals) {\r\n          if (signal.name.startsWith(\"sel\")) {\r\n            intervalSignal = signal.name;\r\n          }\r\n        }\r\n        // spec.signals.push({\r\n        //   name: \"barClick\",\r\n        //   value: \"datum\",\r\n        //   on: [{ events: \"*:mousedown\", update: \"datum\" }],\r\n        // });\r\n        // spec.signals.push({\r\n        //   name: \"hover\",\r\n        //   on: [{ events: \"*:mouseover\", update: \"datum\" }],\r\n        // });\r\n\r\n        return spec;\r\n      },\r\n    })\r\n      .then((result) => {\r\n        // result.view.addSignalListener(\"barClick\", console.log);\r\n        // result.view.addSignalListener(\"hover\", console.log);\r\n        result.view.addSignalListener(\r\n          intervalSignal,\r\n          debounce(function (name, value) {\r\n            const start_end_date = value.date;\r\n            // console.log(name, value);\r\n            if (start_end_date === undefined) {\r\n              setTimeFrameBrush([]);\r\n            } else {\r\n              setTimeFrameBrush(start_end_date);\r\n            }\r\n          }, 200)\r\n        );\r\n\r\n        // let parentWidth = 120;\r\n        // console.log(parentWidth);\r\n        // if (parentRef.current) {\r\n        //   parentWidth = parentRef.current.offsetWidth / 2 - 100;\r\n        //   console.log(\"inside\", parentWidth);\r\n        // }\r\n\r\n        // result.view.signal(\"concat_1_childWidth\", parentWidth).run();\r\n      })\r\n      .catch(console.warn);\r\n  }, [lookBack, toPlot, combinedOverview, timeFrameBrush, setTimeFrameBrush]);\r\n\r\n  return (\r\n    <>\r\n      <Form>\r\n        <Form.Group controlId=\"formBasicRange\">\r\n          <Form.Label>Look back period: {lookBack}</Form.Label>\r\n          <Form.Control\r\n            type=\"range\"\r\n            onChange={handleChange}\r\n            min={0}\r\n            max={30}\r\n            step={1}\r\n            value={lookBack}\r\n          />\r\n        </Form.Group>\r\n      </Form>\r\n      <Container id=\"chart\" ref={parentRef}></Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(MutGraphs);\r\n","import React, { memo } from \"react\";\r\nimport { scaleLinear } from \"d3-scale\";\r\nimport { extent } from \"d3-array\";\r\nimport {\r\n  ZoomableGroup,\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n} from \"react-simple-maps\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nimport \"./primerMap.css\";\r\n\r\nconst geoUrl =\r\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\r\n\r\nconst colorScale = scaleLinear().domain([0, 1]).range([\"#ffedea\", \"#ff5233\"]);\r\n\r\nconst PrimerMap = ({\r\n  setTooltipContent,\r\n  data,\r\n  db,\r\n  timeFrameBrush,\r\n  setTimeFrameBrush,\r\n}) => {\r\n  const [downloadData, setDownloadData] = React.useState([]);\r\n  const headers = [\r\n    {\r\n      label: \"Country\",\r\n      key: \"country\",\r\n    },\r\n    {\r\n      label: \"ISO A3\",\r\n      key: \"ISO_A3\",\r\n    },\r\n    {\r\n      label: \"Missed %\",\r\n      key: \"missed_pct\",\r\n    },\r\n    {\r\n      label: \"Absolute Misses\",\r\n      key: \"abs_miss\",\r\n    },\r\n    {\r\n      label: \"Submitted Virus\",\r\n      key: \"country_total\",\r\n    },\r\n\r\n    {\r\n      label: \"Start Date\",\r\n      key: \"startDate\",\r\n    },\r\n    {\r\n      label: \"End Date\",\r\n      key: \"endDate\",\r\n    },\r\n  ];\r\n\r\n  function getCountryMissCounts(data) {\r\n    const missByCountry = data.reduce((count, data) => {\r\n      if (count.has(data.ISO_A3)) {\r\n        count.set(data.ISO_A3, count.get(data.ISO_A3) + 1);\r\n      } else {\r\n        count.set(data.ISO_A3, 1);\r\n      }\r\n      return count;\r\n    }, new Map());\r\n    return missByCountry;\r\n  }\r\n\r\n  function handleClick(countryISO3, data) {\r\n    const timeFrame = extent(\r\n      data.reduce((dates, data) => {\r\n        if (data.ISO_A3 === countryISO3) {\r\n          dates.push(new Date(data.date));\r\n          return dates;\r\n        } else {\r\n          return dates;\r\n        }\r\n      }, [])\r\n    );\r\n    if (timeFrame[0] === undefined) {\r\n      return;\r\n    }\r\n\r\n    // If on a single day, expand the time frame +- 1 day\r\n    if (timeFrame[0] === timeFrame[1]) {\r\n      const nextDay = new Date(timeFrame[1]);\r\n      const prevDay = new Date(timeFrame[1]);\r\n      nextDay.setHours(nextDay.getHours() + 23);\r\n      prevDay.setHours(prevDay.getHours() - 23);\r\n      setTimeFrameBrush([prevDay, nextDay]);\r\n    } else {\r\n      setTimeFrameBrush(timeFrame);\r\n    }\r\n  }\r\n\r\n  function getDates(timeFrameBrush, db) {\r\n    return timeFrameBrush.length === 0\r\n      ? [Object.keys(db)[0], Object.keys(db)[Object.keys(db).length - 1]]\r\n      : [getDateString(timeFrameBrush[0]), getDateString(timeFrameBrush[1])];\r\n  }\r\n\r\n  function getDateString(time) {\r\n    var date = new Date(time);\r\n    return new Date(date.getTime() - date.getTimezoneOffset() * 60000)\r\n      .toISOString()\r\n      .split(\"T\")[0];\r\n  }\r\n\r\n  function downloadDataClick(\r\n    countryMisses,\r\n    countryMissesPct,\r\n    startDate,\r\n    endDate,\r\n    data\r\n  ) {\r\n    return () => {\r\n      const toDownload = [];\r\n      for (const [countryISO, absMiss] of countryMisses) {\r\n        toDownload.push({\r\n          country: data.find((element) => element.ISO_A3 === countryISO)\r\n            .country_name,\r\n          ISO_A3: countryISO,\r\n          country_total: absMiss / (countryMissesPct.get(countryISO) / 100),\r\n          missed_pct: countryMissesPct.get(countryISO),\r\n          abs_miss: absMiss,\r\n          startDate: startDate,\r\n          endDate: endDate,\r\n        });\r\n      }\r\n      console.log(\"fired\", toDownload);\r\n      setDownloadData(toDownload);\r\n    };\r\n  }\r\n\r\n  const countryMisses = getCountryMissCounts(data);\r\n  const [startDate, endDate] = getDates(timeFrameBrush, db);\r\n  const countryMissesPct = Array.from(countryMisses.keys()).reduce(\r\n    (accumulated, country) => {\r\n      accumulated.set(\r\n        country,\r\n        (\r\n          (countryMisses.get(country) / (db[endDate][country] || 100)) *\r\n          100\r\n        ).toFixed(2)\r\n      );\r\n      return accumulated;\r\n    },\r\n    new Map()\r\n  );\r\n  console.log(\"countryMissesPct :>> \", countryMissesPct);\r\n  console.log(\"countryMissesPct.values() :>> \", countryMissesPct.values());\r\n  const maxPctMiss = Math.max(...Array.from(countryMissesPct.values()));\r\n  console.log(\"maxPctMiss :>> \", maxPctMiss);\r\n  return (\r\n    <Container>\r\n      <h2>Map of viruses mutations</h2>\r\n      <CSVLink\r\n        data={downloadData}\r\n        headers={headers}\r\n        filename={\"geo_misses.csv\"}\r\n        className=\"btn btn-dark\"\r\n        target=\"_blank\"\r\n        onClick={downloadDataClick(\r\n          countryMisses,\r\n          countryMissesPct,\r\n          startDate,\r\n          endDate,\r\n          data\r\n        )}\r\n      >\r\n        Download Map Data\r\n      </CSVLink>\r\n      <ComposableMap data-tip=\"\" projectionConfig={{ scale: 200 }}>\r\n        <ZoomableGroup>\r\n          <Geographies geography={geoUrl}>\r\n            {({ geographies }) =>\r\n              geographies.map((geo) => {\r\n                const missCount = countryMisses.has(geo.properties.ISO_A3)\r\n                  ? countryMisses.get(geo.properties.ISO_A3)\r\n                  : 0;\r\n                const pctMiss =\r\n                  countryMissesPct.get(geo.properties.ISO_A3) || 0;\r\n                return (\r\n                  <Geography\r\n                    key={geo.rsmKey}\r\n                    geography={geo}\r\n                    onMouseEnter={() => {\r\n                      const { NAME } = geo.properties;\r\n                      setTooltipContent(\r\n                        `${NAME}: <br/> \r\n                        ${missCount} Absolute Misses.<br/> \r\n                        ${pctMiss}% Miss: `\r\n                      );\r\n                    }}\r\n                    onMouseLeave={() => {\r\n                      setTooltipContent(\"\");\r\n                    }}\r\n                    onClick={() => {\r\n                      handleClick(geo.properties.ISO_A3, data);\r\n                    }}\r\n                    style={{\r\n                      default: {\r\n                        fill:\r\n                          parseInt(pctMiss) !== 0\r\n                            ? colorScale(pctMiss / maxPctMiss)\r\n                            : \"#949494\",\r\n                        outline: \"none\",\r\n                      },\r\n                      // default: {\r\n                      //     fill: \"#D6D6DA\",\r\n                      //     outline: \"none\"\r\n                      // },\r\n                      hover: {\r\n                        fill: \"#afca9d\",\r\n                        cursor: \"pointer\",\r\n                        // TODO (EB): make pointer only if there is missed sequence here.\r\n                        outline: \"none\",\r\n                      },\r\n                      // pressed: {\r\n                      //   fill: \"#E42\",\r\n                      //   outline: \"none\",\r\n                      // },\r\n                    }}\r\n                  />\r\n                );\r\n              })\r\n            }\r\n          </Geographies>\r\n        </ZoomableGroup>\r\n      </ComposableMap>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default memo(PrimerMap);\r\n\r\n// function filterData(data, timeFrameBrush, toDisplay) {\r\n//   const filteredTime = filterByTime(data, timeFrameBrush);\r\n//   const to_return = filterByPrimers(filteredTime, toDisplay);\r\n//   return to_return;\r\n// }\r\n// function filterByPrimers(toFilter, toDisplay) {\r\n//   if (toDisplay[0] !== \"Overview\") {\r\n//     const filtered = {};\r\n//     for (const country in toFilter) {\r\n//       filtered[country] = {};\r\n//       for (const date of Object.keys(toFilter[country])) {\r\n//         const primerDetails = toFilter[country][date];\r\n//         filtered[country][date] = Object.keys(primerDetails)\r\n//           .filter((primer) => {\r\n//             return (\r\n//               toDisplay.filter((display) => {\r\n//                 return display === primer;\r\n//               }).length !== 0\r\n//             );\r\n//           })\r\n//           .reduce((filtered, currPrimer) => {\r\n//             filtered[currPrimer] = primerDetails[currPrimer];\r\n//             return filtered;\r\n//           }, {});\r\n//       }\r\n//     }\r\n//     return filtered;\r\n//   }\r\n//   return toFilter;\r\n// }\r\n// function filterByTime(data, timeFrameBrush) {\r\n//   if (timeFrameBrush.length !== 0) {\r\n//     const filtered = {};\r\n//     for (const country in data) {\r\n//       const countryVirus = data[country];\r\n//       filtered[country] = Object.keys(countryVirus)\r\n//         .filter((date) => {\r\n//           const [startDate, endDate] = timeFrameBrush;\r\n//           const currDate = new Date(date);\r\n//           return (\r\n//             currDate >= new Date(startDate) && currDate <= new Date(endDate)\r\n//           );\r\n//         })\r\n//         .reduce((filtered, currDate) => {\r\n//           filtered[currDate] = countryVirus[currDate];\r\n//           return filtered;\r\n//         }, {});\r\n//     }\r\n//     return filtered;\r\n//   }\r\n//   return data;\r\n// }\r\n","import React, { useState } from \"react\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nimport MutGraphs from \"../mutGraphs/mutGraphs\";\r\nimport PrimerMap from \"../primerMap/primerMap\";\r\n\r\nimport \"./visualizationDisplay.css\";\r\n\r\nconst VisualizationDisplay = ({\r\n  toDisplay,\r\n  overviewData,\r\n  combinedOverview,\r\n  mapData,\r\n  dbCount,\r\n  timeFrameBrush,\r\n  setTimeFrameBrush,\r\n}) => {\r\n  const [tooltipContent, setTooltipContent] = useState(\"\");\r\n\r\n  return (\r\n    <div className=\"result-display-container\">\r\n      <MutGraphs\r\n        toDisplay={toDisplay}\r\n        data={overviewData}\r\n        combinedOverview={combinedOverview}\r\n        timeFrameBrush={timeFrameBrush}\r\n        setTimeFrameBrush={setTimeFrameBrush}\r\n      />\r\n      <div>\r\n        <PrimerMap\r\n          setTooltipContent={setTooltipContent}\r\n          data={mapData}\r\n          db={dbCount}\r\n          toDisplay={toDisplay}\r\n          timeFrameBrush={timeFrameBrush}\r\n          setTimeFrameBrush={setTimeFrameBrush}\r\n        />\r\n\r\n        <ReactTooltip html={true}>{tooltipContent}</ReactTooltip>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  // return (\r\n  //   <div className=\"result-display-container\">\r\n  //     {Object.keys(data).length !== 0 ? (\r\n  //       <MutGraphs toDisplay={toDisplay} data={make_overview(data)} />\r\n  //     ) : (\r\n  //       <InputData />\r\n  //     )}\r\n  //   </div>\r\n  // );\r\n\r\n  // function getDefaultTimeFrame(data) {\r\n  //   if (Object.keys(data).length !== 0) {\r\n  //     const keys = Object.keys(data);\r\n  //     const dates = Object.keys(data[[keys[keys.length - 1]]]);\r\n\r\n  //     return [new Date(dates[0]), new Date(dates[dates.length - 1])];\r\n  //   }\r\n  //   return [];\r\n  // }\r\n\r\n  // function getMapListInfo(data) {\r\n  //   const virusCountries = {};\r\n  //   for (const date in data) {\r\n  //     for (const virusId in data[date]) {\r\n  //       const virus = data[date][virusId];\r\n  //       virus.date_submitted = date;\r\n  //       const virusCountry = data[date][virusId].ISO_A3;\r\n  //       const virusList = virusCountries[virusCountry];\r\n  //       if (virusList === undefined) {\r\n  //         virusCountries[virusCountry] = {};\r\n  //         virusCountries[virusCountry][virusId] = virus;\r\n  //       } else {\r\n  //         virusList[virusId] = virus;\r\n  //         virusCountries[virusCountry] = virusList;\r\n  //       }\r\n  //     }\r\n  //   }\r\n  //   return virusCountries;\r\n  // }\r\n\r\n  // function get3Mut(viruses) {\r\n  //   let count = 0;\r\n  //   for (const detail of Object.values(viruses)) {\r\n  //     if (detail.misses_3 !== 0) {\r\n  //       count++;\r\n  //     }\r\n  //   }\r\n  //   return count;\r\n  // }\r\n\r\n  // function makeMapData(data) {\r\n  //   const mapData = {};\r\n\r\n  //   const primerNames = getDBAndPrimerNames(data)[1];\r\n  //   const [countries, countryDateRange] = getCountries(primerNames, data);\r\n\r\n  //   for (const country of countries) {\r\n  //     mapData[country] = {};\r\n  //     for (const date of countryDateRange[country]) {\r\n  //       mapData[country][new Date(date)] = getPrimerVirusList(\r\n  //         primerNames,\r\n  //         country,\r\n  //         date,\r\n  //         data\r\n  //       );\r\n  //     }\r\n  //   }\r\n\r\n  //   return mapData;\r\n  // }\r\n\r\n  // function getPrimerVirusList(primerNames, country, date, data) {\r\n  //   const primerVirusList = {};\r\n  //   for (const primer of primerNames) {\r\n  //     primerVirusList[primer] = {};\r\n  //     for (const virusId of Object.keys(data[primer][date])) {\r\n  //       const virus = data[primer][date][virusId];\r\n  //       if (virus.ISO_A3 === country) {\r\n  //         primerVirusList[primer][virusId] = virus;\r\n  //       }\r\n  //     }\r\n  //   }\r\n  //   return primerVirusList;\r\n  // }\r\n\r\n  // function getCountries(primerNames, data) {\r\n  //   const countries = new Set();\r\n  //   const countryDateRange = {};\r\n  //   for (const primer of primerNames) {\r\n  //     for (const date in data[primer]) {\r\n  //       const viruses = data[primer][date];\r\n\r\n  //       for (const virus of Object.values(viruses)) {\r\n  //         countries.add(virus.ISO_A3);\r\n  //         countryDateRange[virus.ISO_A3] = calculateDateRange(\r\n  //           countryDateRange[virus.ISO_A3],\r\n  //           date\r\n  //         );\r\n  //       }\r\n  //     }\r\n  //   }\r\n  //   return [countries, countryDateRange];\r\n  // }\r\n\r\n  // function calculateDateRange(currentRange, date) {\r\n  //   if (currentRange === undefined) {\r\n  //     return [date];\r\n  //   }\r\n  //   currentRange.push(date);\r\n  //   return currentRange;\r\n  // }\r\n};\r\n\r\nexport default VisualizationDisplay;\r\n","import React from \"react\";\r\nimport { useAsyncDebounce } from \"react-table\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\n// Define a default UI for filtering\r\nexport function GlobalFilter({\r\n  preGlobalFilteredRows,\r\n  globalFilter,\r\n  setGlobalFilter,\r\n}) {\r\n  const count = preGlobalFilteredRows.length;\r\n  const [value, setValue] = React.useState(globalFilter);\r\n  const onChange = useAsyncDebounce((value) => {\r\n    setGlobalFilter(value || undefined);\r\n  }, 200);\r\n\r\n  return (\r\n    <>\r\n      <Form.Row>\r\n        <Form.Label column lg={2}>\r\n          General Search\r\n        </Form.Label>\r\n        <Col>\r\n          <Form.Control\r\n            type=\"text\"\r\n            value={value || \"\"}\r\n            onChange={(e) => {\r\n              setValue(e.target.value);\r\n              onChange(e.target.value);\r\n            }}\r\n            placeholder={`Search the ${count} entries`}\r\n          />\r\n        </Col>\r\n      </Form.Row>\r\n      <Form.Row>\r\n        <Form.Label column lg={2}></Form.Label>\r\n        <Col>\r\n          <Form.Text className=\"text-muted\">\r\n            This does not affect plot data. If you want to set filters, use the\r\n            filter options under specific headers\r\n          </Form.Text>\r\n        </Col>\r\n      </Form.Row>\r\n    </>\r\n  );\r\n}\r\n\r\n// This is a custom UI for our 'between' or number range\r\n// filter. It uses two number boxes and filters rows to\r\n// ones that have values between the two\r\nexport function DefaultNumberRangeColumnFilter({\r\n  column: { filterValue = [], preFilteredRows, setFilter, id },\r\n}) {\r\n  const [min, max] = React.useMemo(() => {\r\n    let min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\r\n    let max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\r\n    preFilteredRows.forEach((row) => {\r\n      min = Math.min(row.values[id], min);\r\n      max = Math.max(row.values[id], max);\r\n    });\r\n    return [min, max];\r\n  }, [id, preFilteredRows]);\r\n\r\n  return (\r\n    <Form>\r\n      <Form.Row>\r\n        <Col>\r\n          <Form.Control\r\n            value={filterValue[0] || \"\"}\r\n            type=\"number\"\r\n            onChange={(e) => {\r\n              const val = e.target.value;\r\n              setFilter((old = []) => [\r\n                val ? parseInt(val, 10) : undefined,\r\n                old[1],\r\n              ]);\r\n            }}\r\n            placeholder={`Min (${min})`}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <Form.Control\r\n            value={filterValue[1] || \"\"}\r\n            type=\"number\"\r\n            onChange={(e) => {\r\n              const val = e.target.value;\r\n              setFilter((old = []) => [\r\n                old[0],\r\n                val ? parseInt(val, 10) : undefined,\r\n              ]);\r\n            }}\r\n            placeholder={`Max (${max})`}\r\n          />\r\n        </Col>\r\n      </Form.Row>\r\n    </Form>\r\n  );\r\n}\r\n\r\n// Define a default UI for filtering\r\nexport function CountryColumnFilter({\r\n  column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n  //   const count = preFilteredRows.length;\r\n\r\n  return (\r\n    <Form.Control\r\n      value={filterValue || \"\"}\r\n      onChange={(e) => {\r\n        setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\r\n      }}\r\n      placeholder={`Filter Country`}\r\n    />\r\n  );\r\n}\r\n\r\n// This is a custom filter UI for selecting\r\n// a unique option from a list\r\nexport function SelectColumnFilter({\r\n  column: { filterValue, setFilter, preFilteredRows, id },\r\n}) {\r\n  // Calculate the options for filtering\r\n  // using the preFilteredRows\r\n  const options = React.useMemo(() => {\r\n    const options = new Set();\r\n    preFilteredRows.forEach((row) => {\r\n      options.add(row.values[id]);\r\n    });\r\n    return [...options.values()];\r\n  }, [id, preFilteredRows]);\r\n\r\n  // Render a multi-select box\r\n  return (\r\n    <select\r\n      value={filterValue}\r\n      onChange={(e) => {\r\n        setFilter(e.target.value || undefined);\r\n      }}\r\n    >\r\n      <option value=\"\">All</option>\r\n      {options.map((option, i) => (\r\n        <option key={i} value={option}>\r\n          {option}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n}\r\n\r\n// This is a custom filter UI that uses a\r\n// slider to set the filter value between a column's\r\n// min and max values\r\nfunction SliderColumnFilter({\r\n  column: { filterValue, setFilter, preFilteredRows, id },\r\n}) {\r\n  // Calculate the min and max\r\n  // using the preFilteredRows\r\n\r\n  const [min, max] = React.useMemo(() => {\r\n    let min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\r\n    let max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\r\n    preFilteredRows.forEach((row) => {\r\n      min = Math.min(row.values[id], min);\r\n      max = Math.max(row.values[id], max);\r\n    });\r\n    return [min, max];\r\n  }, [id, preFilteredRows]);\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type=\"range\"\r\n        min={min}\r\n        max={max}\r\n        value={filterValue || min}\r\n        onChange={(e) => {\r\n          setFilter(parseInt(e.target.value, 10));\r\n        }}\r\n      />\r\n      <button onClick={() => setFilter(undefined)}>Off</button>\r\n    </>\r\n  );\r\n}\r\n\r\n// Define a custom filter filter function!\r\nfunction filterGreaterThan(rows, id, filterValue) {\r\n  return rows.filter((row) => {\r\n    const rowValue = row.values[id];\r\n    return rowValue >= filterValue;\r\n  });\r\n}\r\n\r\n// This is an autoRemove method on the filter function that\r\n// when given the new filter value and returns true, the filter\r\n// will be automatically removed. Normally this is just an undefined\r\n// check, but here, we want to remove the filter if it's not a number\r\nfilterGreaterThan.autoRemove = (val) => typeof val !== \"number\";\r\n\r\n// function App() {\r\n//   const columns = React.useMemo(\r\n//     () => [\r\n//       {\r\n//         Header: \"Name\",\r\n//         columns: [\r\n//           {\r\n//             Header: \"First Name\",\r\n//             accessor: \"firstName\",\r\n//           },\r\n//           {\r\n//             Header: \"Last Name\",\r\n//             accessor: \"lastName\",\r\n//             // Use our custom `fuzzyText` filter on this column\r\n//             filter: \"fuzzyText\",\r\n//           },\r\n//         ],\r\n//       },\r\n//       {\r\n//         Header: \"Info\",\r\n//         columns: [\r\n//           {\r\n//             Header: \"Age\",\r\n//             accessor: \"age\",\r\n//             Filter: SliderColumnFilter,\r\n//             filter: \"equals\",\r\n//           },\r\n//           {\r\n//             Header: \"Visits\",\r\n//             accessor: \"visits\",\r\n//             Filter: NumberRangeColumnFilter,\r\n//             filter: \"between\",\r\n//           },\r\n//           {\r\n//             Header: \"Status\",\r\n//             accessor: \"status\",\r\n//             Filter: SelectColumnFilter,\r\n//             filter: \"includes\",\r\n//           },\r\n//           {\r\n//             Header: \"Profile Progress\",\r\n//             accessor: \"progress\",\r\n//             Filter: SliderColumnFilter,\r\n//             filter: filterGreaterThan,\r\n//           },\r\n//         ],\r\n//       },\r\n//     ],\r\n//     []\r\n//   );\r\n\r\n//   return (\r\n//     <div></div>\r\n//   );\r\n// }\r\n","import React from \"react\";\r\nimport {\r\n  usePagination,\r\n  useTable,\r\n  useFilters,\r\n  useGlobalFilter,\r\n} from \"react-table\";\r\nimport BTable from \"react-bootstrap/Table\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nimport \"./tableDisplay.css\";\r\n\r\nimport {\r\n  GlobalFilter,\r\n  DefaultNumberRangeColumnFilter,\r\n  CountryColumnFilter,\r\n  SelectColumnFilter,\r\n} from \"./filter.js\";\r\n\r\nfunction TableDisplay({ data }) {\r\n  //   const memoizedData = React.useMemo(() => data);\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Primer\",\r\n        accessor: \"primer\",\r\n        Filter: SelectColumnFilter,\r\n        filter: \"includes\",\r\n      },\r\n      {\r\n        Header: \"Accession ID\",\r\n        accessor: \"accession_id\", // accessor is the \"key\" in the data\r\n        disableFilters: true,\r\n      },\r\n      {\r\n        Header: \"Virus Name\",\r\n        accessor: \"virus_name\",\r\n        disableFilters: true,\r\n      },\r\n      {\r\n        Header: \"Diagram\",\r\n        accessor: \"match_diag\",\r\n        disableFilters: true,\r\n      },\r\n      {\r\n        Header: \"Primer Type\",\r\n        accessor: \"type\",\r\n        Filter: SelectColumnFilter,\r\n        filter: \"includes\",\r\n      },\r\n      {\r\n        Header: \"Homology %\",\r\n        accessor: \"match_pct\",\r\n      },\r\n      {\r\n        Header: \"Total Miss\",\r\n        accessor: \"misses\",\r\n      },\r\n      {\r\n        Header: \"Misses In 3' End\",\r\n        accessor: \"misses3\",\r\n      },\r\n      {\r\n        Header: \"Date Collected\",\r\n        accessor: \"date\",\r\n        disableFilters: true,\r\n      },\r\n      {\r\n        Header: \"Location\",\r\n        accessor: \"country_name\",\r\n        Filter: CountryColumnFilter,\r\n        filter: \"text\",\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const headers = columns.map((header) => {\r\n    return { label: header.Header, key: header.accessor };\r\n  });\r\n  headers.push(\r\n    ...[\r\n      {\r\n        label: \"ISO A3\",\r\n        key: \"ISO_A3\",\r\n      },\r\n      {\r\n        label: \"Virus Match Index (Start, End)\",\r\n        key: \"virus_match_idx\",\r\n      },\r\n      {\r\n        label: \"Primer Match Index (Start, End)\",\r\n        key: \"query_match_idx\",\r\n      },\r\n    ]\r\n  );\r\n\r\n  const filterTypes = React.useMemo(\r\n    () => ({\r\n      // Or, override the default text filter to use\r\n      // \"startWith\"\r\n      text: (rows, id, filterValue) => {\r\n        return rows.filter((row) => {\r\n          const rowValue = row.values[id];\r\n          return rowValue !== undefined\r\n            ? String(rowValue)\r\n                .toLowerCase()\r\n                .startsWith(String(filterValue).toLowerCase())\r\n            : true;\r\n        });\r\n      },\r\n    }),\r\n    []\r\n  );\r\n\r\n  const defaultColumn = React.useMemo(\r\n    () => ({\r\n      // Let's set up our default Filter UI\r\n      Filter: DefaultNumberRangeColumnFilter,\r\n      filter: \"between\",\r\n    }),\r\n    []\r\n  );\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    page,\r\n\r\n    // pagination details\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize },\r\n\r\n    // filtering details\r\n    state,\r\n    // visibleColumns,\r\n    preGlobalFilteredRows,\r\n    setGlobalFilter,\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      initialState: { pageIndex: 0 },\r\n      defaultColumn,\r\n      filterTypes,\r\n    },\r\n    useFilters, // useFilters!\r\n    useGlobalFilter, // useGlobalFilter!\r\n    usePagination\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <h2 className=\"table-title\">Overview of Missed Viruses</h2>\r\n      <GlobalFilter\r\n        preGlobalFilteredRows={preGlobalFilteredRows}\r\n        globalFilter={state.globalFilter}\r\n        setGlobalFilter={setGlobalFilter}\r\n      />\r\n      <BTable\r\n        {...getTableProps()}\r\n        variant=\"light\"\r\n        //   size=\"lg\"\r\n        responsive\r\n        striped\r\n        bordered\r\n        hover\r\n      >\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps()} className=\"table-header\">\r\n                  {column.render(\"Header\")}\r\n                  <div>{column.canFilter ? column.render(\"Filter\") : null}</div>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  console.log(cell);\r\n\r\n                  if (cell.column.id === \"match_diag\") {\r\n                    const display_str = cell.value\r\n                      .split(\" \")\r\n                      .map((val, idx) => {\r\n                        return val.split(\"\");\r\n                      });\r\n                    return (\r\n                      <td\r\n                        {...cell.getCellProps()}\r\n                        className=\"table-cell match-diag\"\r\n                      >\r\n                        <div>\r\n                          {display_str[0].map((val, idx) => {\r\n                            return (\r\n                              <span key={idx} className={val}>\r\n                                {val}\r\n                              </span>\r\n                            );\r\n                          })}\r\n                        </div>\r\n                        <span>\r\n                          {display_str[1].map((val, idx) => {\r\n                            return (\r\n                              <span key={idx} className={val}>\r\n                                {val}\r\n                              </span>\r\n                            );\r\n                          })}\r\n                        </span>\r\n                        <div>\r\n                          {display_str[2].map((val, idx) => {\r\n                            return (\r\n                              <span key={idx} className={val}>\r\n                                {val}\r\n                              </span>\r\n                            );\r\n                          })}\r\n                        </div>\r\n                      </td>\r\n                    );\r\n                  }\r\n                  return (\r\n                    <td {...cell.getCellProps()} className=\"table-cell\">\r\n                      {cell.render(\"Cell\")}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </BTable>\r\n      <Row className=\"pagination\">\r\n        <Col className=\"page-controls\" sm={12} md={4}>\r\n          <Button\r\n            variant=\"light\"\r\n            onClick={() => gotoPage(0)}\r\n            disabled={!canPreviousPage}\r\n          >\r\n            {\"<<\"}\r\n          </Button>\r\n          <Button\r\n            variant=\"light\"\r\n            onClick={() => previousPage()}\r\n            disabled={!canPreviousPage}\r\n          >\r\n            {\"<\"}\r\n          </Button>\r\n          <Button\r\n            variant=\"light\"\r\n            onClick={() => nextPage()}\r\n            disabled={!canNextPage}\r\n          >\r\n            {\">\"}\r\n          </Button>\r\n          <Button\r\n            variant=\"light\"\r\n            onClick={() => gotoPage(pageCount - 1)}\r\n            disabled={!canNextPage}\r\n          >\r\n            {\">>\"}\r\n          </Button>\r\n          <p>\r\n            {\" \"}\r\n            Page <strong>{pageIndex + 1} </strong> of{\" \"}\r\n            <strong>{pageOptions.length}</strong>\r\n          </p>\r\n        </Col>\r\n        <Col className=\"manual-page-selection\" sm={12} md={4}>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"page-info\">Go to page:</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              type=\"number\"\r\n              defaultValue={pageIndex + 1}\r\n              onChange={(e) => {\r\n                const page = e.target.value ? Number(e.target.value) - 1 : 0;\r\n                gotoPage(page);\r\n              }}\r\n              aria-label=\"Go To Page\"\r\n              aria-describedby=\"page-info\"\r\n            />\r\n          </InputGroup>\r\n        </Col>\r\n        <Col className=\"results-per-page\" sm={12} md={4}>\r\n          <Form.Control\r\n            value={pageSize}\r\n            onChange={(e) => {\r\n              setPageSize(Number(e.target.value));\r\n            }}\r\n            as=\"select\"\r\n          >\r\n            {[10, 20, 30, 40, 50].map((pageSize) => (\r\n              <option key={pageSize} value={pageSize}>\r\n                Show {pageSize}\r\n              </option>\r\n            ))}\r\n          </Form.Control>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <CSVLink\r\n          data={data}\r\n          headers={headers}\r\n          filename={\"sensitivity_miss.csv\"}\r\n          className=\"btn btn-dark\"\r\n          target=\"_blank\"\r\n        >\r\n          Download Table\r\n        </CSVLink>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\nexport default TableDisplay;\r\n","import React from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport DropdownMenu from \"../../components/dropdown/dropdown\";\r\nimport VisualizationDisplay from \"../../components/VisualizationDisplay/visualizationDisplay\";\r\nimport TableDisplay from \"../../components/tableDisplay/tableDisplay\";\r\n\r\nimport \"./resultsPage.css\";\r\n\r\nconst InputData = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <Container>\r\n      <p className=\"no-data\">\r\n        Please make sure that you've uploaded some data first!\r\n      </p>\r\n      <Button onClick={() => history.push(\"/\")}>Upload Data</Button>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst ResultPage = ({ results }) => {\r\n  const [timeFrameBrush, setTimeFrameBrush] = React.useState([]);\r\n  const { display } = useParams();\r\n  const toDisplay = display.split(\"&\");\r\n\r\n  if (Object.keys(results).length !== 0) {\r\n    const dbCount = getDBAndPrimerNames(results)[0];\r\n    const overviewData = makeOverview(results);\r\n    const primerNames = overviewData.reduce((data, currData) => {\r\n      if (data.includes(currData.name)) {\r\n        return data;\r\n      } else {\r\n        data.push(currData.name);\r\n        return data;\r\n      }\r\n    }, []);\r\n    const tableData = makeTableData(results, toDisplay, timeFrameBrush);\r\n    const combinedOverview = makeCombinedOverview(\r\n      dbCount,\r\n      tableData,\r\n      primerNames\r\n    );\r\n    const filteredTableData = tableData.filter(dataFilter(timeFrameBrush));\r\n    return (\r\n      <div className=\"display-page\">\r\n        <Container>\r\n          <DropdownMenu\r\n            displayOptions={Object.keys(results)}\r\n            resultToDisplay={toDisplay}\r\n          />\r\n          <VisualizationDisplay\r\n            toDisplay={toDisplay}\r\n            overviewData={overviewData}\r\n            combinedOverview={combinedOverview}\r\n            mapData={filteredTableData}\r\n            dbCount={dbCount}\r\n            timeFrameBrush={timeFrameBrush}\r\n            setTimeFrameBrush={setTimeFrameBrush}\r\n          />\r\n          <TableDisplay data={filteredTableData} />\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <InputData />;\r\n};\r\n\r\nexport default ResultPage;\r\n\r\nfunction getDBAndPrimerNames(rawData) {\r\n  const keys = Object.keys(rawData);\r\n\r\n  const dbName = keys[keys.length - 1];\r\n  const dbCount = rawData[dbName];\r\n\r\n  const primerNames = keys.slice(0, keys.length - 1);\r\n  return [dbCount, primerNames];\r\n}\r\n\r\nfunction makeOverview(rawData) {\r\n  console.log(\"making overview data\");\r\n  const overviewData = [];\r\n\r\n  const [dbCount, primerNames] = getDBAndPrimerNames(rawData);\r\n\r\n  for (const primerName of primerNames) {\r\n    const primerDetails = rawData[primerName];\r\n\r\n    const dates = Object.keys(dbCount);\r\n\r\n    overviewData.push(\r\n      ...dates.map((date) => {\r\n        return {\r\n          date: new Date(date),\r\n          name: primerName,\r\n          mutation_pct:\r\n            (primerDetails.filter((value) => value.date === date).length /\r\n              dbCount[date].total) *\r\n            100,\r\n          mutation3_pct:\r\n            (primerDetails.filter((value) => {\r\n              return value.date === date && parseInt(value.misses3) !== 0;\r\n            }).length /\r\n              dbCount[date].total) *\r\n            100,\r\n        };\r\n      })\r\n    );\r\n  }\r\n\r\n  return overviewData;\r\n}\r\n\r\nfunction makeCombinedOverview(dbCount, tableData, primerNames) {\r\n  const combinedOverview = [];\r\n\r\n  const dates = Object.keys(dbCount);\r\n\r\n  combinedOverview.push(\r\n    ...dates.map((date) => {\r\n      return {\r\n        date: new Date(date),\r\n        name: primerNames.join(\", \"),\r\n        total_mut_pct:\r\n          (tableData.filter((value) => value.date === date).length /\r\n            dbCount[date].total) *\r\n          100,\r\n        total_mut3_pct:\r\n          (tableData.filter(\r\n            (value) => value.date === date && parseInt(value.misses3) !== 0\r\n          ).length /\r\n            dbCount[date].total) *\r\n          100,\r\n      };\r\n    })\r\n  );\r\n\r\n  return combinedOverview;\r\n}\r\n\r\nfunction findIntersection(list1, list2, union = true) {\r\n  const result = list1.filter(\r\n    ((set) => (item) => {\r\n      return union === set.has(item.accession_id);\r\n    })(new Set(list2.map((item) => item.accession_id)))\r\n  );\r\n  return result;\r\n}\r\n\r\nfunction findListIntersection(rawData, primers) {\r\n  if (primers.length === 1) return new Set();\r\n  let intersection = rawData[primers[0]];\r\n  for (let i = 1; i < primers.length; i++) {\r\n    intersection = findIntersection(intersection, rawData[primers[i]]);\r\n  }\r\n  return new Set(intersection.map((item) => item.accession_id));\r\n}\r\n\r\nconst dataFilter = (timeFrameBrush) => (value) => {\r\n  const currDate = new Date(value.date);\r\n  let isWithinTimeFrame = true;\r\n  // let isToDisplay = true;\r\n  if (timeFrameBrush.length !== 0) {\r\n    const [startDate, endDate] = timeFrameBrush;\r\n    isWithinTimeFrame =\r\n      currDate >= new Date(startDate) && currDate <= new Date(endDate);\r\n  }\r\n  // if (toDisplay[0] !== \"Overview\") {\r\n  //   isToDisplay =\r\n  //     toDisplay.filter((name) => name === value.primer).length !== 0;\r\n  // }\r\n  return isWithinTimeFrame;\r\n};\r\n\r\nfunction makeTableData(rawData, toDisplay, timeFrameBrush) {\r\n  function addName(primer) {\r\n    return (value) => {\r\n      value.primer = primer;\r\n      return value;\r\n    };\r\n  }\r\n  const primers =\r\n    toDisplay[0] !== \"Overview\" ? toDisplay : getDBAndPrimerNames(rawData)[1];\r\n  const dataForDisplay = [];\r\n  const intersection = findListIntersection(rawData, primers);\r\n  for (const primer of primers) {\r\n    dataForDisplay.push(\r\n      ...rawData[primer]\r\n        .filter((virus) => !intersection.has(virus.accession_id))\r\n        .map(addName(primer))\r\n    );\r\n  }\r\n\r\n  return dataForDisplay;\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\n// import Form from 'react-bootstrap/Form'\r\n// import Row from 'react-bootstrap/Row';\r\n// import Button from 'react-bootstrap/Button';\r\n// import Container from 'react-bootstrap/Container';\r\n// import Collapse from 'react-bootstrap/Collapse';\r\n\r\n// import DropZone from \"./components/dropzone/dropzone\";\r\n// import TextArea from './components/textArea/textArea';\r\n// import FileDisplay from './components/fileDisplay/fileDisplay';\r\n// import primerCheckService from './services/primerCheck';\r\nimport UploadPage from \"./pages/upload/uploadPage\";\r\nimport \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport ResultPage from \"./pages/results/resultsPage\";\r\n\r\nfunction App() {\r\n  const [results, setResults] = useState({});\r\n  return (\r\n    <Router basename=\"/METHODS/corona/gamma/primer/build\">\r\n      <Link to=\"/\" style={{ textDecoration: \"none\" }}>\r\n        <h1 className=\"title\">Primer Checker</h1>\r\n      </Link>\r\n\r\n      <Switch>\r\n        <Route exact={true} path=\"/\">\r\n          <UploadPage setResults={setResults} />\r\n        </Route>\r\n        <Route exact={true} path=\"/results/:display\">\r\n          <ResultPage results={results} />\r\n        </Route>\r\n        <Route path=\"/results\">\r\n          <ResultPage results={results} />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <div>404: Page not found</div>\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}