{"version":3,"sources":["components/dropzone/dropzoneResults.js","pages/manual/manualPage.js","components/util.js","components/dropzone/dropzone.js","components/textArea/textArea.js","components/previewPane/previewPane.js","components/fileDisplay/fileDisplay.js","services/primerCheck.js","pages/upload/uploadPage.js","components/selectDropdown/selectDropdown.js","components/ItemFilter/minMaxFilter.js","components/ItemFilter/filterGroup.js","components/ItemFilter/itemFilters.js","components/tableDisplay/filter.js","components/tableDisplay/tableDisplay.js","components/mutGraphs/lineGraph.js","components/mutGraphs/combinedLineGraph.js","components/mutGraphs/barGraph.js","components/mutGraphs/barGraphWrapper.js","components/mutGraphs/inLineGraph.js","components/primerMap/primerMap.js","components/primerMap/mapWithToolTip.js","pages/results/resultsPage.js","App.js","serviceWorker.js","index.js","pages/results/dataFilter.js"],"names":["DropZoneResults","setResults","history","useHistory","filesSelected","e","a","loadFiles","target","files","fr","FileReader","onload","result","JSON","parse","formatted","stringify","push","readAsText","item","Form","Group","controlId","htmlFor","id","Container","className","onDragOver","preventDefault","onDragEnter","onDragLeave","onDrop","dataTransfer","type","onChange","multiple","ManualPage","validateFormat","content","exec","debounce","func","wait","immediate","timeout","context","this","args","arguments","later","apply","callNow","clearTimeout","setTimeout","addName","primer","value","makeBaseGraphData","baseData","toReturn","Object","keys","primerName","details","toAdd","date","DropZone","selectedFiles","setSelectedFiles","setErrorMessage","checkFiles","to_store","file","handleFile","concat","readFile","to_return","console","warn","message","reader","log","Promise","resolve","reject","event","name","onerror","abort","DOMException","TextArea","setTextFieldFasta","useState","errorMessage","textAreaValue","setTextAreaValue","inputSample","useEffect","Row","Col","Label","Button","variant","size","onClick","Control","as","placeholder","aria-describedby","Text","muted","split","map","i","key","Feedback","PreviewPane","show","handleClose","Modal","onHide","Header","closeButton","Title","Body","newline_matches","matchAll","length","slice","index","formatContent","Footer","FileDisplay","preview","setPreview","previewOpen","setPreviewOpen","removeFile","fileName","prevFiles","filter","fileType","substring","lastIndexOf","lg","md","invalid","openPreview","Math","floor","parseFloat","pow","toFixed","fileSize","baseURL","axios","post","UploadPage","setError","showSubmit","setShowSubmit","displayedFiles","setDisplayedFiles","validFiles","setValidFiles","blastAll","setBlastAll","textFieldFasta","fileErrorMessage","setFileErrorMessage","open","setOpen","isLoading","setIsLoading","openId","filteredFiles","reduce","current","find","Collapse","in","Accordion","Card","Toggle","eventKey","xs","Check","label","checked","noValidate","Fade","aria-controls","aria-expanded","primerCheckService","then","response","data","catch","disabled","Spinner","animation","role","aria-hidden","animatedComponents","makeAnimated","SelectDropdown","options","defaultValue","closeMenuOnSelect","components","isMulti","isSearchable","isClearable","NumberRangeFilter","minVal","maxVal","step","setFilter","React","useMemo","combinedList","values","combined","currVal","min","max","forEach","row","debounceFilter","val","isMin","old","sm","isInteger","parseInt","FilterGroup","title","groupId","buttonText","component","isOpen","setShow","help","Switch","ariaControls","ariaExpanded","MissDefinition","miss","setMiss","miss3","setMiss3","match","setMatch","InputGroup","Prepend","data-tip","BarGraphSettings","isBar","setIsBar","daysBetweenComparison","setDaysBetweenComparison","numberOfBars","setNumberOfBars","showAbsDiff","setShowAbsDiff","barCum","setBarCum","prev","toString","LineGraphSettings","countryAsTotal","setCountryAsTotal","useCum","setUseCum","GraphMapSetting","setTimeFrameBrush","timeFrameBrush","dateRange","lookBack","setLookBack","maxDate","Date","minDate","calendarIcon","AdvanceFilters","BasicFilters","setSelectedPrimers","setIsProcessing","isProcessing","setCountries","primers","setPrimers","setPType","selectionChange","setSelection","selection","toFilter","join","unique","Set","countries","virus","has","country_name","add","ISO_A3","ItemFilters","html","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","isHelpOn","count","setValue","useAsyncDebounce","undefined","column","TableDisplay","columns","downloadFileName","csv_headers","header","accessor","filterTypes","text","rows","filterValue","rowValue","String","toLowerCase","startsWith","defaultColumn","minWidth","width","maxWidth","useTable","initialState","pageIndex","hiddenColumns","useGlobalFilter","useSortBy","usePagination","useFlexLayout","useResizeColumns","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageSize","responsive","striped","bordered","hover","headerGroup","getHeaderGroupProps","headers","getHeaderProps","render","getSortByToggleProps","isSorted","isSortedDesc","canResize","getResizerProps","isResizing","getRowProps","cells","cell","display_str","getCellProps","idx","char","Number","aria-label","filename","DataTable","isCollapsable","showTable","setShowTable","isCombined","LineGraph","title2","dates","showModal","setModalInfo","subtitle","subtitle2","getMutationPlot","dataPlot","xIndex","yIndex","plots","hoverAnimation","xAxisIndex","yAxisIndex","encode","x","y","datasetIndex","getDateIndex","findIndex","toISOString","startIndex","endIndex","mutationPlot","mutation3Plot","option","subtext","left","top","tooltip","trigger","axisPointer","backgroundColor","formatter","params","baseDetails","startDate","initDate","setDate","getDate","getStartDate","submissionCount","submission_count","countries_considered","mutation_abs","mutation3_abs","mutation_pct","mutation3_pct","position","pos","el","elRect","obj","viewSize","legend","orient","right","link","dataZoom","realtime","start","end","grid","bottom","xAxis","nameLocation","nameTextStyle","align","verticalAlign","padding","gridIndex","yAxis","nameGap","offset","dataset","datasets","dimensions","source","buildDataSet","series","onEvents","click","country","legendselectchanged","selected","batch","startStringDate","endStringDate","endDate","style","height","notMerge","objEqual","b","entries","sort","memo","combinedBase","combinedName","totalSubmission","setIsProcessingGraphs","pType","instance","useRef","worker","lineData","setLineData","makeData","useCallback","performance","now","getCombinedLineData","next","BarGraph","getBarLabel","toPlot","distance","rotate","difference","fontSize","textBorderColor","rich","p","color","n","zero","buildBarPlot","barMaxWidth","buildDataset","mutation","mutation3","axisLabel","margin","rawData","barData","setBarData","updateBarData","getLineGraphData","makeBarData","graphOverview","submission","total","colorScale","scaleLinear","domain","range","setTooltipContent","db","downloadData","setDownloadData","getDateString","time","getDates","countryMisses","currData","set","get","virus_name","Map","getCountryMissCounts","mapDb","addObject","obj1","obj2","getMapDb","countryMissesPct","Array","from","accumulated","getCountryMissPct","maxPctMiss","projectionConfig","scale","geography","geographies","geo","missCount","properties","pctMiss","rsmKey","onMouseEnter","NAME","onMouseLeave","countryISO3","startDateStr","endDateStr","Difference_In_Days","getTime","handleClick","default","fill","outline","cursor","toDownload","countryISO","absMiss","countryName","element","missed_pct","abs_miss","country_total","downloadDataClick","MapWithToolTip","tooltipContent","InputData","ResultPage","results","baseTableData","primerDetails","tableData","primerNames","makeTableData","baseGraphData","dbCountDaily","parseDb","dbCountCum","useParams","display","dbActual","setDbActual","tableDataset","setTableDataset","setCombinedBase","setCombinedName","tableCombined","setTableCombined","setTimeFrameCb","setShowModal","modalInfo","closeModalCb","showModalCb","isProcessingGraphs","setIsProcessingGraphCb","updateTableData","filterTable","updateCombinedData","prevVal","temp","makeIntersection","getTotalSubmission","dbCum","dbDaily","overviewColumns","disableFilters","combinedCols","modalData","isSameDate","isWithinFrame","isPrimer","isCountry","selectedDate","dialogClassName","aria-labelledby","database","App","error","basename","to","textDecoration","exact","path","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","addMethods","methods","module","exports","w","Worker"],"mappings":"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","file":"static/js/main.fa123a29.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./dropzone.css\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst DropZoneResults = ({ setResults }) => {\r\n  const history = useHistory();\r\n\r\n  const dragOver = (e) => {\r\n    e.preventDefault();\r\n  };\r\n  const dragEnter = (e) => {\r\n    e.preventDefault();\r\n  };\r\n  const dragLeave = (e) => {\r\n    e.preventDefault();\r\n  };\r\n  const fileDrop = (e) => {\r\n    e.preventDefault();\r\n    const data = e.dataTransfer;\r\n    const files = data.files;\r\n    loadFiles(files);\r\n  };\r\n\r\n  const filesSelected = async (e) => {\r\n    const files = e.target.files;\r\n    loadFiles(files);\r\n  };\r\n\r\n  function loadFiles(files) {\r\n    let fr = new FileReader();\r\n\r\n    fr.onload = function (e) {\r\n      const result = JSON.parse(e.target.result);\r\n      const formatted = JSON.stringify(result);\r\n      setResults(formatted);\r\n      history.push(\"/results/Overview\");\r\n    };\r\n\r\n    fr.readAsText(files.item(0));\r\n  }\r\n\r\n  return (\r\n    <Form.Group controlId=\"fasta-sequence\">\r\n      <label htmlFor=\"fasta-input\" id=\"fasta-input-label\">\r\n        <Container\r\n          className=\"drop-container\"\r\n          onDragOver={dragOver}\r\n          onDragEnter={dragEnter}\r\n          onDragLeave={dragLeave}\r\n          onDrop={fileDrop}\r\n        >\r\n          <div className=\"drop-message\">\r\n            <div className=\"upload-icon\"></div>\r\n            Drag & Drop files here or click to upload\r\n          </div>\r\n          <input\r\n            className=\"file-input\"\r\n            id=\"fasta-input\"\r\n            type=\"file\"\r\n            onChange={filesSelected}\r\n            multiple\r\n          />\r\n        </Container>\r\n      </label>\r\n    </Form.Group>\r\n  );\r\n};\r\n\r\nexport default DropZoneResults;\r\n","import React from \"react\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nimport DropZoneResults from \"../../components/dropzone/dropzoneResults\";\r\n\r\nconst ManualPage = ({ setResults }) => {\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <DropZoneResults setResults={setResults} />\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManualPage;\r\n","export const validateFormat = (content) => {\r\n  let format = /^(>fwd|>rev|>prb)[\\s\\S]{1,2}[ACGTacgt]+[\\s\\S]{1,2}(>fwd|>rev|>prb)[\\s\\S]{1,2}[ACGTacgt]+[\\s\\S]{1,2}(>fwd|>rev|>prb)[\\s\\S]{1,2}[ACGTacgt]+[\\s\\S]{1,2}$/;\r\n  let correct_format = format.exec(content);\r\n  return correct_format !== null;\r\n};\r\n\r\nexport const getRandomInt = (min, max) => {\r\n  const lower_r = Math.floor(min);\r\n  const upper_r = Math.floor(max);\r\n  return Math.floor(lower_r + Math.random() * (upper_r - lower_r));\r\n};\r\n\r\n// credit: https://davidwalsh.name/function-debounce\r\n// Returns a function, that, as long as it continues to be invoked, will not\r\n// be triggered. The function will be called after it stops being called for\r\n// N milliseconds. If `immediate` is passed, trigger the function on the\r\n// leading edge, instead of the trailing.\r\nexport function debounce(func, wait, immediate) {\r\n  let timeout;\r\n  return function () {\r\n    let context = this,\r\n      args = arguments;\r\n    let later = function () {\r\n      timeout = null;\r\n      if (!immediate) func.apply(context, args);\r\n    };\r\n    let callNow = immediate && !timeout;\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(later, wait);\r\n    if (callNow) func.apply(context, args);\r\n  };\r\n}\r\n\r\nexport function addName(primer) {\r\n  /**\r\n   * An annealing function that takes an object and adds [primer] to it with key under \"primer\"\r\n   * @param {string} primer: value to be added\r\n   * @returns {function} a function that takes in [value] and returns it after adding [primer] to it.\r\n   */\r\n  return (value) => {\r\n    value.primer = primer;\r\n    return value;\r\n  };\r\n}\r\n\r\nexport function makeBaseGraphData(baseData) {\r\n  /**\r\n   * Converts the incoming {primerName: Missed virus} to\r\n   * {primerName: Date: Missed Virus}\r\n   *\r\n   * @param {Object} baseData: contains the primerDetails\r\n   * @returns {Object}: Mapping from {primerName: Date: Missed Virus}\r\n   */\r\n\r\n  const toReturn = {};\r\n  for (const primerName of Object.keys(baseData)) {\r\n    const result = {};\r\n    for (const details of baseData[primerName]) {\r\n      const toAdd = result[details.date] || [];\r\n      toAdd.push(addName(primerName)(details));\r\n      result[details.date] = toAdd;\r\n    }\r\n    toReturn[primerName] = result;\r\n  }\r\n  return toReturn;\r\n}\r\n","import React from 'react';\r\nimport './dropzone.css';\r\nimport { validateFormat } from '../util';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\n\r\nconst DropZone = ({ selectedFiles, setSelectedFiles, setErrorMessage }) => {\r\n\r\n    const dragOver = (e) => {\r\n        e.preventDefault();\r\n    }\r\n    const dragEnter = (e) => {\r\n        e.preventDefault();\r\n    }\r\n    const dragLeave = (e) => {\r\n        e.preventDefault();\r\n    }\r\n    const fileDrop = (e) => {\r\n        e.preventDefault();\r\n        const data = e.dataTransfer\r\n        const files = data.files;\r\n        checkFiles(files)\r\n    }\r\n\r\n    const filesSelected = async (e) => {\r\n        const files = e.target.files;\r\n        await checkFiles(files)\r\n    }\r\n    const checkFiles = async (files) => {\r\n        let to_store = []\r\n        for (let file of files) {\r\n            to_store = to_store.concat(await handleFile(file))\r\n        }\r\n        setSelectedFiles(selectedFiles.concat(...to_store))\r\n    }\r\n    const handleFile = async (file) => {\r\n        try {\r\n            const to_return = await readFile(file)\r\n            return to_return\r\n        } catch (e) {\r\n            console.warn(e.message)\r\n        }\r\n    }\r\n\r\n    const readFile = (file) => {\r\n        const reader = new FileReader();\r\n        console.log(file)\r\n        return new Promise((resolve, reject) => {\r\n            reader.onload = function (event) {\r\n                if (validateFormat(event.target.result)) {\r\n                    file['invalid'] = false\r\n                    file['content'] = event.target.result\r\n                    file['id'] = file.name\r\n                } else {\r\n                    console.log('file loaded but invalid format');\r\n                    setErrorMessage('File not a recognized format. Please check')\r\n                    file['invalid'] = true\r\n                }\r\n                resolve(file);\r\n            }\r\n            reader.onerror = function () {\r\n                reader.abort()\r\n                reject(new DOMException(\"Problem parsing input file.\"));\r\n            }\r\n\r\n            reader.readAsText(file, \"UTF-8\");\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Form.Group controlId='fasta-sequence'>\r\n            <label htmlFor='fasta-input' id='fasta-input-label'>\r\n                <Container className='drop-container' onDragOver={dragOver}\r\n                    onDragEnter={dragEnter}\r\n                    onDragLeave={dragLeave}\r\n                    onDrop={fileDrop}>\r\n                    <div className=\"drop-message\">\r\n                        <div className=\"upload-icon\"></div>\r\n                        Drag & Drop files here or click to upload\r\n                    </div>\r\n                    <input\r\n                        className=\"file-input\"\r\n                        id=\"fasta-input\"\r\n                        type=\"file\"\r\n                        onChange={filesSelected}\r\n                        multiple\r\n                    />\r\n                </Container>\r\n            </label>\r\n        </Form.Group>\r\n    );\r\n}\r\n\r\nexport default DropZone;","\r\nimport React, { useState, useEffect } from 'react'\r\nimport './textArea.css'\r\nimport Form from 'react-bootstrap/Form'\r\nimport { validateFormat } from '../util'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nconst TextArea = ({ setTextFieldFasta }) => {\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n    const [textAreaValue, setTextAreaValue] = useState('')\r\n    // const [fileAttached, setFileAttached] = useState(false)\r\n    const inputSample = `>fwd\\nGTGAAATGGTCATGTGTGGCGG\\n>rev\\nTATGCTAATAGTGTTTTTAACATTTG\\n>prb\\nCAGGTGGAACCTCATCAGGAGATGC`\r\n\r\n    useEffect(() => {\r\n        if (validateFormat(textAreaValue)) {\r\n            console.log('sequence oKAY!', textAreaValue);\r\n            // const lastMod = Date.now()\r\n            // const tempDate = new Date(lastMod)\r\n            // const file = {\r\n            //     \"content\": textAreaValue,\r\n            //     \"invalid\": false,\r\n            //     \"lastModified\": lastMod,\r\n            //     \"lastModifiedDate\": tempDate,\r\n            //     \"name\": `fasta${lastMod}`,\r\n            //     'size': getRandomInt(80, 90)\r\n            // }\r\n            setTextFieldFasta([{\r\n                \"invalid\": false,\r\n                \"content\": textAreaValue,\r\n                \"id\": \"text_input_fasta\",\r\n            }])\r\n        } else {\r\n            console.log('Nope');\r\n            setTextFieldFasta([])\r\n            setErrorMessage('Sequence not recognized! Please check.')\r\n        }\r\n    }, [textAreaValue, setTextFieldFasta])\r\n\r\n    const handleChange = (e) => {\r\n        const content = e.target.value\r\n        setTextAreaValue(content)\r\n    }\r\n    const enterSample = () => {\r\n        setTextAreaValue(inputSample)\r\n    }\r\n    return (\r\n        <Form.Group controlId='fasta-sequence'>\r\n            <Row className='fasta-input-header'>\r\n                <Col>\r\n                    <Form.Label className='fasta-input-title'>\r\n                        Fasta Sequence\r\n                    </Form.Label>\r\n                </Col>\r\n                <Col className=\"sample-fasta\">\r\n                    <Button variant='secondary' size='sm' onClick={enterSample}>Sample Input</Button>\r\n                </Col>\r\n            </Row>\r\n            <Form.Control\r\n                as='textarea'\r\n                placeholder=\"Input Fasta Seq here.\"\r\n                onChange={handleChange}\r\n                type=\"text\"\r\n                value={textAreaValue}\r\n                className='mx-sm-lg-auto'\r\n                aria-describedby=\"fastaSequenceHelpBlock\"\r\n            />\r\n            <Form.Text id=\"fastaSequenceHelpBlock\" muted>\r\n                Format for the primer sequence should be as follows:{<br />}\r\n                <strong>\r\n                    {inputSample\r\n                        .split('\\n')\r\n                        .map((value, i) => <p key={i}>{value}</p>)}\r\n                </strong>\r\n            </Form.Text>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n                {errorMessage}\r\n            </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n    )\r\n}\r\n\r\nexport default TextArea","import './previewPane.css'\r\nimport React from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\nconst PreviewPane = ({ show, handleClose, content }) => {\r\n    const formatContent = (content) => {\r\n        const regex = /\\s+/g;\r\n        const newline_matches = [...content.matchAll(regex)]\r\n        let result = []\r\n        for (let i = 0; i < newline_matches.length; i++) {\r\n            if (i === 0) {\r\n                result = result.concat(content.slice(0, newline_matches[0].index))\r\n            }\r\n            else {\r\n\r\n                result = result.concat(content.slice(newline_matches[i - 1].index + 1, newline_matches[i].index))\r\n            }\r\n        }\r\n        return result\r\n    }\r\n    return (\r\n        <Modal show={show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Fasta Primer Preview</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>{formatContent(content).map((value, index) => <p key={index}>{value}</p>)}</Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"primary\" onClick={handleClose}>\r\n                    Close\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>)\r\n}\r\n\r\nexport default PreviewPane","import './fileDisplay.css';\r\nimport React, { useState } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport PreviewPane from '../previewPane/previewPane';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst FileDisplay = ({ file, errorMessage, setSelectedFiles }) => {\r\n    const [preview, setPreview] = useState('')\r\n    const [previewOpen, setPreviewOpen] = useState(false)\r\n    const fileSize = (size) => {\r\n        if (size === 0) return '0 Bytes';\r\n        const k = 1024;\r\n        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n        const i = Math.floor(Math.log(size) / Math.log(k));\r\n        return parseFloat((size / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n    }\r\n\r\n    const fileType = (fileName) => {\r\n        const fileType = fileName.substring(fileName.lastIndexOf('.') + 1, fileName.length)\r\n        if (fileType.length === fileName.length) {\r\n            return 'Fasta'\r\n        }\r\n        else {\r\n            return fileType\r\n        }\r\n    }\r\n\r\n    const removeFile = (fileName) => {\r\n        setSelectedFiles(prevFiles => prevFiles.filter(file => file.name !== fileName))\r\n    }\r\n    const openPreview = (file) => {\r\n        setPreview(file.content)\r\n        setPreviewOpen(true)\r\n    }\r\n\r\n    return <Container className=\"file-status-bar\">\r\n        <Row>\r\n            <div className=\"file-type-logo\"></div>\r\n            <div className=\"file-type\">{fileType(file.name)}</div>\r\n            <Col lg={5} md={12} className='file-info'>\r\n                <div className={`file-name ${file.invalid ? 'file-error' : ''}`} onClick={file.invalid ? () => removeFile(file.name) : () => openPreview(file)}>{file.name}</div>\r\n                <div className=\"file-size\">({fileSize(file.size)})</div>\r\n            </Col>\r\n            <Col lg={4} md={8} className='file-error-message'>\r\n                {file.invalid\r\n                    ? <div className='file-error-message-text'>({errorMessage})</div>\r\n                    : null}\r\n            </Col>\r\n            <Col lg={2} md={2} className=\"file-remove\" >\r\n                <Button onClick={() => removeFile(file.name)} variant='danger' size='sm'>Remove</Button>\r\n            </Col>\r\n        </Row>\r\n        <PreviewPane show={previewOpen} handleClose={() => setPreviewOpen(false)} content={preview} />\r\n    </Container >\r\n}\r\n\r\nexport default FileDisplay;","import axios from \"axios\";\r\n\r\nconst baseURL =\r\n  \"https://mendel3.bii.a-star.edu.sg/METHODS/corona/gamma/cgi-bin/cgi_scripts/primerMVP.py\";\r\n// const baseURL = \"http://localhost:3001\";\r\n\r\nconst checkFile = (file) => {\r\n  return axios.post(`${baseURL}`, file);\r\n};\r\n\r\nconst checkFiles = (files) => {\r\n  return axios.post(`${baseURL}`, files);\r\n  // return axios.post(`${baseURL}/check_primers`, files);\r\n};\r\n\r\nexport default { checkFile, checkFiles };\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Accordion from \"react-bootstrap/Accordion\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Collapse from \"react-bootstrap/Collapse\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport Fade from \"react-bootstrap/Fade\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport DropZone from \"../../components/dropzone/dropzone\";\r\nimport TextArea from \"../../components/textArea/textArea\";\r\nimport FileDisplay from \"../../components/fileDisplay/fileDisplay\";\r\nimport primerCheckService from \"../..//services/primerCheck\";\r\nimport \"./uploadPage.css\";\r\n\r\nconst UploadPage = ({ setResults, setError }) => {\r\n  const [showSubmit, setShowSubmit] = useState(false);\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n  const [displayedFiles, setDisplayedFiles] = useState([]);\r\n  const [validFiles, setValidFiles] = useState([]);\r\n  const [blastAll, setBlastAll] = useState(false);\r\n  const [textFieldFasta, setTextFieldFasta] = useState([]);\r\n  const [fileErrorMessage, setFileErrorMessage] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [open, setOpen] = useState(true);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const openId = \"open-containers\";\r\n\r\n  useEffect(() => {\r\n    const filteredFiles = selectedFiles.reduce((files, current) => {\r\n      const match = files.find((file) => file.name === current.name);\r\n      if (match) {\r\n        return files;\r\n      } else {\r\n        return files.concat(current);\r\n      }\r\n    }, []);\r\n    setDisplayedFiles([...filteredFiles]);\r\n  }, [selectedFiles]);\r\n\r\n  useEffect(() => {\r\n    const filteredFiles = displayedFiles.reduce((files, current) => {\r\n      return current.invalid ? files : files.concat(current);\r\n    }, []);\r\n    setValidFiles(filteredFiles);\r\n  }, [displayedFiles]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      (validFiles.length === displayedFiles.length &&\r\n        validFiles.length !== 0 &&\r\n        textFieldFasta.length === 0) ||\r\n      (textFieldFasta.length !== 0 && validFiles.length === 0)\r\n    ) {\r\n      console.log(validFiles);\r\n      setErrorMessage(\"\");\r\n      return setShowSubmit(true);\r\n    } else if (textFieldFasta.length !== 0 && validFiles.length !== 0) {\r\n      setShowSubmit(false);\r\n      setErrorMessage(\r\n        \"Either upload a single sequence through input or select files to upload! Not Both!\"\r\n      );\r\n    }\r\n    setShowSubmit(false);\r\n  }, [validFiles, displayedFiles, textFieldFasta]);\r\n\r\n  const resetStates = () => {\r\n    setShowSubmit(false);\r\n    setSelectedFiles([]);\r\n    setTextFieldFasta([]);\r\n    setFileErrorMessage(\"\");\r\n    setErrorMessage(\"\");\r\n  };\r\n  const submitForm = () => {\r\n    console.log(validFiles, textFieldFasta);\r\n    setOpen(!open);\r\n    setIsLoading(true);\r\n    setTimeout(() => {\r\n      primerCheckService\r\n        .checkFiles(\r\n          validFiles.length === 0\r\n            ? { files: textFieldFasta, blastAll: blastAll }\r\n            : { files: validFiles, blastAll: blastAll }\r\n        )\r\n        .then((response) => {\r\n          resetStates();\r\n          setIsLoading(false);\r\n          console.log(\"response is\", response);\r\n          setResults(JSON.stringify(response.data));\r\n          history.push(\"/results/Overview\");\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n          setError(JSON.stringify(e.data));\r\n          history.push(\"/error\");\r\n        });\r\n    }, 500);\r\n  };\r\n  return (\r\n    <div>\r\n      <Collapse id={openId} in={open}>\r\n        <div className=\"collapse-container\">\r\n          <Container>\r\n            <h2 className=\"mb-3 methodology-title\">Methodology</h2>\r\n            <p className=\"mb-3 methodology-body\">\r\n              Primer Checker blast against all sequences from the past 3 months\r\n              in GISAID database of high quality genomes (defined as &lt;1% Ns\r\n              and &lt;0.05% unique non-synonymous mutations) with one or more\r\n              mutations in either forward, probe or reverse primer region. This\r\n              does not necessarily indicate a primer would not function but\r\n              serves as a guide to variability of the targeted region.\r\n            </p>\r\n            <Accordion className=\"mb-3\">\r\n              <Card>\r\n                <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n                  More Settings\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey=\"0\">\r\n                  <Card.Body>\r\n                    <Row>\r\n                      <Col xs=\"12\" md=\"6\">\r\n                        <Form.Check\r\n                          type=\"checkbox\"\r\n                          label=\"Blast against all database\"\r\n                          onChange={(e) => setBlastAll(e.target.checked)}\r\n                        />\r\n                      </Col>\r\n                      <Col xs=\"12\" md=\"6\" className=\"manual-button\">\r\n                        <Button\r\n                          onClick={() => history.push(\"/manualUpload\")}\r\n                          size=\"sm\"\r\n                          variant=\"light\"\r\n                        >\r\n                          Manual Upload\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </Card.Body>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n            </Accordion>\r\n\r\n            <Form noValidate>\r\n              <TextArea setTextFieldFasta={setTextFieldFasta} />\r\n              <p className=\"alternative-upload\">OR</p>\r\n              <DropZone\r\n                selectedFiles={selectedFiles}\r\n                setSelectedFiles={setSelectedFiles}\r\n                setErrorMessage={setFileErrorMessage}\r\n              />\r\n            </Form>\r\n            <Container className=\"file-display-container\">\r\n              {displayedFiles.map((file, index) => (\r\n                <FileDisplay\r\n                  file={file}\r\n                  errorMessage={fileErrorMessage}\r\n                  setSelectedFiles={setSelectedFiles}\r\n                  key={index}\r\n                />\r\n              ))}\r\n            </Container>\r\n          </Container>\r\n        </div>\r\n      </Collapse>\r\n      <Container>\r\n        <Row className=\"upload-error-message\">{errorMessage}</Row>\r\n        {showSubmit ? (\r\n          <Fade in={open}>\r\n            <Button\r\n              id={openId}\r\n              aria-controls={openId}\r\n              aria-expanded={open}\r\n              onClick={submitForm}\r\n              disabled={isLoading}\r\n            >\r\n              {isLoading ? (\r\n                <Spinner\r\n                  as=\"span\"\r\n                  className=\"loader\"\r\n                  animation=\"border\"\r\n                  size=\"sm\"\r\n                  role=\"status\"\r\n                  aria-hidden=\"true\"\r\n                />\r\n              ) : null}\r\n              {isLoading ? \"Loading...\" : \"Submit\"}\r\n            </Button>\r\n          </Fade>\r\n        ) : null}\r\n        {isLoading ? (\r\n          <Fade in={!open}>\r\n            <Container className=\"loading-container\">\r\n              <Spinner\r\n                id={openId}\r\n                as=\"span\"\r\n                animation=\"border\"\r\n                role=\"status\"\r\n                variant=\"dark\"\r\n              />\r\n              <div className=\"mt-3\">\r\n                Do not click back or refresh while the page is loading!\r\n              </div>\r\n              <div>\r\n                This will take about 4 minutes depending on server loads.\r\n              </div>\r\n              <div>\r\n                If you stop seeing this, chances are, the server timed out.\r\n              </div>\r\n            </Container>\r\n          </Fade>\r\n        ) : null}\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadPage;\r\n","import React from \"react\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\n\r\nconst animatedComponents = makeAnimated();\r\n\r\nfunction SelectDropdown({\r\n  onChange,\r\n  options,\r\n  placeholder,\r\n  // value = [],\r\n  isLoading = false,\r\n  defaultValue = [],\r\n}) {\r\n  /**\r\n   * @param {function} onChange: Takes in Array(Objects) of selected objects, null if nothing is selected\r\n   * @param {Object} Options: Select Options. Should contain a \"value\" and \"label\" key\r\n   * @param {Array} defaultValue: The list of default options\r\n   * @param {bool} isLoading: Indicates if loading animation shows or not\r\n   * @param {string} placeholder: Hint text when there is nothing selected\r\n   * @param {Array} value: list of items that is selected\r\n   */\r\n  return (\r\n    <Select\r\n      closeMenuOnSelect={false}\r\n      components={animatedComponents}\r\n      defaultValue={defaultValue}\r\n      // value={value}\r\n      isMulti\r\n      isSearchable\r\n      isClearable\r\n      isLoading={isLoading}\r\n      placeholder={placeholder}\r\n      onChange={onChange}\r\n      options={options}\r\n    />\r\n  );\r\n}\r\nexport default SelectDropdown;\r\n","import React from \"react\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nfunction NumberRangeFilter({\r\n  data,\r\n  id,\r\n  value,\r\n  minVal,\r\n  maxVal,\r\n  step,\r\n  setFilter,\r\n}) {\r\n  const [min, max] = React.useMemo(() => {\r\n    const primerDetails = Object.values(data);\r\n    const combinedList = primerDetails.reduce((combined, currVal) => {\r\n      combined.push(...currVal);\r\n      return combined;\r\n    }, []);\r\n    let min = combinedList.length ? combinedList[0][id] : 0;\r\n    let max = combinedList.length ? combinedList[0][id] : 0;\r\n    combinedList.forEach((row) => {\r\n      min = Math.min(row[id], min);\r\n      max = Math.max(row[id], max);\r\n    });\r\n    return [min, max];\r\n  }, [data, id]);\r\n\r\n  const debounceFilter = (val, isMin) => {\r\n    isMin\r\n      ? setFilter((old = []) => [val, old[1]])\r\n      : setFilter((old = []) => [old[0], val]);\r\n  };\r\n\r\n  return (\r\n    <Form className=\"filter\">\r\n      <Form.Row>\r\n        <Col className=\"pr-md-0\" sm={12} md={6} lg={12}>\r\n          <Form.Control\r\n            as=\"input\"\r\n            value={value[0] || \"\"}\r\n            type=\"number\"\r\n            onChange={(e) => {\r\n              const val = step.isInteger\r\n                ? parseInt(e.target.value, 10) || 0\r\n                : parseFloat(e.target.value || 0);\r\n              debounceFilter(val, true);\r\n            }}\r\n            placeholder={`Min (${min})`}\r\n            size=\"sm\"\r\n            min={minVal}\r\n            max={maxVal}\r\n            step={step}\r\n          />\r\n        </Col>\r\n        <Col className=\"pr-md-0\" sm={12} md={6} lg={12}>\r\n          <Form.Control\r\n            value={value[1] || \"\"}\r\n            type=\"number\"\r\n            onChange={(e) => {\r\n              const val = step.isInteger\r\n                ? parseInt(e.target.value, 10) || 0\r\n                : parseFloat(e.target.value || 0);\r\n              debounceFilter(val, false);\r\n            }}\r\n            placeholder={`Max (${max})`}\r\n            size=\"sm\"\r\n            min={minVal}\r\n            max={maxVal}\r\n            step={step}\r\n          />\r\n        </Col>\r\n      </Form.Row>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default NumberRangeFilter;\r\n","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Collapse from \"react-bootstrap/Collapse\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { AiFillCaretDown, AiFillCaretRight } from \"react-icons/ai\";\r\nfunction FilterGroup({\r\n  title,\r\n  groupId,\r\n  buttonText,\r\n  component,\r\n  variant = \"light\",\r\n  isOpen = false,\r\n  size = \"sm\",\r\n}) {\r\n  const [show, setShow] = React.useState(isOpen);\r\n  return (\r\n    <Col>\r\n      <Button\r\n        onClick={() => {\r\n          setShow(!show);\r\n        }}\r\n        className=\"show-group mb-3 mt-3\"\r\n        aria-controls={groupId}\r\n        aria-expanded={show}\r\n        variant={variant}\r\n        size={size}\r\n      >\r\n        {show ? <AiFillCaretDown /> : <AiFillCaretRight />}\r\n        {show ? `${buttonText}` : `${buttonText}`}\r\n      </Button>\r\n      <Collapse in={show}>\r\n        <div>{component}</div>\r\n      </Collapse>\r\n    </Col>\r\n  );\r\n}\r\nexport default FilterGroup;\r\n","import React from \"react\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AiOutlineQuestionCircle, AiTwotoneCalendar } from \"react-icons/ai\";\r\nimport DateRangePicker from \"@wojtekmaj/react-daterange-picker\";\r\nimport SelectDropdown from \"../selectDropdown/selectDropdown\";\r\nimport NumberRangeFilter from \"./minMaxFilter\";\r\n\r\nimport FilterGroup from \"./filterGroup\";\r\nimport \"./itemFilter.css\";\r\n\r\nconst help = {\r\n  miss:\r\n    \"Sets the min and max number of mutations in primer region to be consider a mutation\",\r\n  miss3:\r\n    \"Sets the min and max number of mutations in the 3' end (last 5 nucleotides) of the virus sequence to be considered a mutation\",\r\n  match:\r\n    \"Sets the min and max percentage of match for a virus sequence to be considered a mutation\",\r\n  primer: \"Select the primers to display\",\r\n  pType: \"Select which part of the primer to display\",\r\n  country:\r\n    \"Selects the countries to display. Total will be over selected countries then. To change, check extra settings\",\r\n  absDiff:\r\n    \"Show the difference from the current bar and the previous bar if enable (The last bar will be compared against another bar off charts)\",\r\n  daysBetweenCompare: \"Sets the number of days between comparison\",\r\n  numBars: \"Sets the number of bars to be displayed\",\r\n  barCum:\r\n    \"If enabled, uses all visible data to plot bars. Disables Absolute Difference\",\r\n  countryTotal:\r\n    \"Sets whether selected country will be used as total or all submission within said time frame will be used as total\",\r\n  cumulative:\r\n    \"Divides daily mutation count by total number of submissions thus far\",\r\n  lookBack:\r\n    \"Sets the number of days to be used when aggregating the number of submissions and mutations\",\r\n  date: \"Selects the dates of interest.\",\r\n};\r\n\r\nconst Switch = ({\r\n  id,\r\n  className,\r\n  checked,\r\n  onChange,\r\n  ariaControls = \"\",\r\n  ariaExpanded = \"\",\r\n  disabled = false,\r\n}) => {\r\n  return (\r\n    <label\r\n      id={id}\r\n      className={`switch ${className}`}\r\n      aria-controls={ariaControls}\r\n      aria-expanded={ariaExpanded}\r\n    >\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={checked}\r\n        onChange={onChange}\r\n        disabled={disabled}\r\n      />\r\n      <span className=\"slider round\"></span>\r\n    </label>\r\n  );\r\n};\r\n\r\nconst MissDefinition = ({\r\n  baseData,\r\n  miss,\r\n  setMiss,\r\n  miss3,\r\n  setMiss3,\r\n  match,\r\n  setMatch,\r\n}) => {\r\n  return (\r\n    <Row>\r\n      <Col className=\"mb-3 pr-lg-0 \" xs={12} lg={4}>\r\n        <InputGroup size=\"sm\" className=\"\">\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text>\r\n              Total Mutation\r\n              <AiOutlineQuestionCircle className=\"pl-1\" data-tip={help.miss} />\r\n            </InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <NumberRangeFilter\r\n            data={baseData}\r\n            minVal={0}\r\n            maxVal={100}\r\n            step={1}\r\n            value={miss}\r\n            setFilter={setMiss}\r\n            id=\"misses\"\r\n          />\r\n        </InputGroup>\r\n      </Col>\r\n\r\n      <Col className=\"mb-3 pr-lg-0 pl-lg-0\" xs={12} lg={4}>\r\n        <InputGroup size=\"sm\">\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text>\r\n              Mutation in 3' End\r\n              <AiOutlineQuestionCircle className=\"pl-1\" data-tip={help.miss3} />\r\n            </InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <NumberRangeFilter\r\n            data={baseData}\r\n            minVal={0}\r\n            maxVal={100}\r\n            step={1}\r\n            value={miss3}\r\n            setFilter={setMiss3}\r\n            id=\"misses3\"\r\n          />\r\n        </InputGroup>\r\n      </Col>\r\n      <Col className=\"mb-3 pl-lg-0 pr-lg-0\" xs={12} lg={4}>\r\n        <InputGroup size=\"sm\">\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text>\r\n              Homology %\r\n              <AiOutlineQuestionCircle className=\"pl-1\" data-tip={help.match} />\r\n            </InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <NumberRangeFilter\r\n            data={baseData}\r\n            minVal={0}\r\n            maxVal={100}\r\n            step={0.01}\r\n            value={match}\r\n            setFilter={setMatch}\r\n            id=\"match_pct\"\r\n          />\r\n        </InputGroup>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nconst BarGraphSettings = ({\r\n  isBar,\r\n  setIsBar,\r\n  daysBetweenComparison,\r\n  setDaysBetweenComparison,\r\n  numberOfBars,\r\n  setNumberOfBars,\r\n  showAbsDiff,\r\n  setShowAbsDiff,\r\n  barCum,\r\n  setBarCum,\r\n}) => {\r\n  return (\r\n    <Row>\r\n      <Col sm={12} lg={1}>\r\n        <InputGroup className=\"mb-3\" size=\"sm\">\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text>Show</InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <Switch\r\n            type=\"checkbox\"\r\n            checked={isBar}\r\n            onChange={() => setIsBar(!isBar)}\r\n            aria-controls=\"use-bars\"\r\n            aria-expanded={isBar}\r\n          />\r\n        </InputGroup>\r\n      </Col>\r\n      <Col sm={12} lg={2}>\r\n        <InputGroup className=\"mb-3\" size=\"sm\">\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text>\r\n              Cumulative\r\n              <AiOutlineQuestionCircle\r\n                className=\"pl-1\"\r\n                data-tip={help.barCum}\r\n              />\r\n            </InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <Switch\r\n            type=\"checkbox\"\r\n            checked={barCum}\r\n            onChange={() => {\r\n              setShowAbsDiff((prev) => !prev);\r\n              setBarCum(!barCum);\r\n            }}\r\n            disabled={!isBar}\r\n          />\r\n        </InputGroup>\r\n      </Col>\r\n      <Col sm={12} lg={2}>\r\n        <InputGroup className=\"mb-3\" size=\"sm\">\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text>\r\n              Absolute Diff\r\n              <AiOutlineQuestionCircle\r\n                className=\"pl-1\"\r\n                data-tip={help.absDiff}\r\n              />\r\n            </InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <Switch\r\n            type=\"checkbox\"\r\n            checked={showAbsDiff}\r\n            onChange={() => {\r\n              setBarCum((prev) => !prev);\r\n              setShowAbsDiff(!showAbsDiff);\r\n            }}\r\n            disabled={!isBar}\r\n          />\r\n        </InputGroup>\r\n      </Col>\r\n      <Col sm={12} lg={4}>\r\n        <InputGroup className=\"mb-3\" size=\"sm\">\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text>\r\n              Days between Comparison\r\n              <AiOutlineQuestionCircle\r\n                className=\"pl-1\"\r\n                data-tip={help.daysBetweenCompare}\r\n              />\r\n            </InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <Form.Control\r\n            value={daysBetweenComparison.toString()}\r\n            disabled={!isBar || barCum}\r\n            as=\"input\"\r\n            type=\"number\"\r\n            min={1}\r\n            max={200}\r\n            step={1}\r\n            onChange={(e) => {\r\n              const val = e.target.value;\r\n              setDaysBetweenComparison(parseInt(val, 10) || 0);\r\n            }}\r\n          />\r\n        </InputGroup>\r\n      </Col>\r\n      <Col sm={12} lg={3}>\r\n        <InputGroup className=\"mb-3\" size=\"sm\">\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text>\r\n              Number of bars\r\n              <AiOutlineQuestionCircle\r\n                className=\"pl-1\"\r\n                data-tip={help.numBars}\r\n              />\r\n            </InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <Form.Control\r\n            value={numberOfBars.toString()}\r\n            disabled={!isBar || barCum}\r\n            as=\"input\"\r\n            type=\"number\"\r\n            min={1}\r\n            max={20}\r\n            step={1}\r\n            onChange={(e) => {\r\n              const val = e.target.value;\r\n              setNumberOfBars(parseInt(val, 10) || 0);\r\n            }}\r\n          />\r\n        </InputGroup>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nconst LineGraphSettings = ({\r\n  countryAsTotal,\r\n  setCountryAsTotal,\r\n  useCum,\r\n  setUseCum,\r\n}) => {\r\n  return (\r\n    <Col>\r\n      <Row>\r\n        <Col xs={12} lg={6} className=\"pr-lg-0 pl-lg-0\">\r\n          <InputGroup className=\"mb-3\" size=\"sm\">\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text htmlFor=\"cumulative\">\r\n                Cumulative\r\n                <AiOutlineQuestionCircle\r\n                  className=\"pl-1\"\r\n                  data-tip={help.cumulative}\r\n                />\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Switch\r\n              id=\"cumulative\"\r\n              className=\"use-cumulative\"\r\n              checked={useCum}\r\n              onChange={(e) => {\r\n                setUseCum(e.target.checked);\r\n              }}\r\n            />\r\n          </InputGroup>\r\n        </Col>\r\n        <Col xs={12} lg={6} className=\"pr-lg-0 pl-lg-0\">\r\n          <InputGroup className=\"mb-3\" size=\"sm\">\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text htmlFor=\"country\">\r\n                Selected Countries as Total\r\n                <AiOutlineQuestionCircle\r\n                  className=\"pl-1\"\r\n                  data-tip={help.countryTotal}\r\n                />\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Switch\r\n              id=\"country\"\r\n              className=\"use-country\"\r\n              checked={countryAsTotal}\r\n              onChange={(e) => {\r\n                setCountryAsTotal(e.target.checked);\r\n              }}\r\n            />\r\n          </InputGroup>\r\n        </Col>\r\n      </Row>\r\n    </Col>\r\n  );\r\n};\r\nconst GraphMapSetting = ({\r\n  isBar,\r\n  setIsBar,\r\n  daysBetweenComparison,\r\n  setDaysBetweenComparison,\r\n  numberOfBars,\r\n  setNumberOfBars,\r\n  showAbsDiff,\r\n  setShowAbsDiff,\r\n  countryAsTotal,\r\n  setCountryAsTotal,\r\n  setTimeFrameBrush,\r\n  timeFrameBrush,\r\n  dateRange,\r\n  lookBack,\r\n  setLookBack,\r\n  useCum,\r\n  setUseCum,\r\n  variant,\r\n  barCum,\r\n  setBarCum,\r\n}) => {\r\n  const dateChange = (e) => {\r\n    console.log(\"e :>> \", e);\r\n    setTimeFrameBrush((e || []).map((value) => new Date(value)) || []);\r\n  };\r\n\r\n  return (\r\n    <Col>\r\n      <Row>\r\n        <Col xs={12} lg={6} className=\"pr-lg-0\">\r\n          <InputGroup className=\"mb-3 \" size=\"sm\">\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text>\r\n                Date Range\r\n                <AiOutlineQuestionCircle\r\n                  className=\"pl-1\"\r\n                  data-tip={help.date}\r\n                />\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <DateRangePicker\r\n              maxDate={new Date(dateRange[dateRange.length - 1])}\r\n              minDate={new Date(dateRange[0])}\r\n              calendarIcon={<AiTwotoneCalendar />}\r\n              onChange={dateChange}\r\n              value={timeFrameBrush.length === 0 ? null : timeFrameBrush}\r\n            />\r\n          </InputGroup>\r\n        </Col>\r\n\r\n        <Col xs={12} lg={6} className=\"pl-lg-0\">\r\n          <InputGroup className=\"mb-3 \" size=\"sm\">\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text>\r\n                Look Back\r\n                <AiOutlineQuestionCircle\r\n                  className=\"pl-1\"\r\n                  data-tip={help.lookBack}\r\n                />\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              value={lookBack.toString()}\r\n              disabled={useCum}\r\n              as=\"input\"\r\n              type=\"number\"\r\n              min={0}\r\n              max={200}\r\n              step={1}\r\n              onChange={(e) => {\r\n                const val = e.target.value;\r\n                setLookBack(parseInt(val, 10) || 0);\r\n              }}\r\n            />\r\n          </InputGroup>\r\n        </Col>\r\n      </Row>\r\n      <FilterGroup\r\n        variant={variant}\r\n        buttonText={\"Bar Graph Setting\"}\r\n        groupId={\"bar-graph-setting\"}\r\n        component={\r\n          <BarGraphSettings\r\n            isBar={isBar}\r\n            setIsBar={setIsBar}\r\n            daysBetweenComparison={daysBetweenComparison}\r\n            setDaysBetweenComparison={setDaysBetweenComparison}\r\n            numberOfBars={numberOfBars}\r\n            setNumberOfBars={setNumberOfBars}\r\n            showAbsDiff={showAbsDiff}\r\n            setShowAbsDiff={setShowAbsDiff}\r\n            barCum={barCum}\r\n            setBarCum={setBarCum}\r\n          />\r\n        }\r\n      />\r\n      <FilterGroup\r\n        variant={variant}\r\n        buttonText={\"Line Graph Settings\"}\r\n        groupId={\"line-graph-settings\"}\r\n        component={\r\n          <LineGraphSettings\r\n            countryAsTotal={countryAsTotal}\r\n            setCountryAsTotal={setCountryAsTotal}\r\n            useCum={useCum}\r\n            setUseCum={setUseCum}\r\n          />\r\n        }\r\n      />\r\n    </Col>\r\n  );\r\n};\r\n\r\nconst AdvanceFilters = ({\r\n  baseData,\r\n  dateRange,\r\n  timeFrameBrush,\r\n  setTimeFrameBrush,\r\n  lookBack,\r\n  setLookBack,\r\n  useCum,\r\n  setUseCum,\r\n  miss,\r\n  setMiss,\r\n  miss3,\r\n  setMiss3,\r\n  match,\r\n  setMatch,\r\n  countryAsTotal,\r\n  setCountryAsTotal,\r\n  isBar,\r\n  setIsBar,\r\n  daysBetweenComparison,\r\n  setDaysBetweenComparison,\r\n  numberOfBars,\r\n  setNumberOfBars,\r\n  showAbsDiff,\r\n  setShowAbsDiff,\r\n  barCum,\r\n  setBarCum,\r\n}) => {\r\n  const variant = \"light\";\r\n  return (\r\n    <FilterGroup\r\n      variant={variant}\r\n      buttonText={\"More Settings\"}\r\n      groupId=\"Advance-settings\"\r\n      component={\r\n        <>\r\n          <Row>\r\n            <FilterGroup\r\n              variant={variant}\r\n              buttonText={\"Adjust Mutation Definition\"}\r\n              groupId={\"miss-definitions\"}\r\n              component={\r\n                <MissDefinition\r\n                  baseData={baseData}\r\n                  miss={miss}\r\n                  setMiss={setMiss}\r\n                  miss3={miss3}\r\n                  setMiss3={setMiss3}\r\n                  match={match}\r\n                  setMatch={setMatch}\r\n                />\r\n              }\r\n            />\r\n          </Row>\r\n          <Row>\r\n            <FilterGroup\r\n              variant={variant}\r\n              buttonText={\"Graph and Map Settings\"}\r\n              groupId={\"graph-map-setting\"}\r\n              component={\r\n                <GraphMapSetting\r\n                  variant={variant}\r\n                  setTimeFrameBrush={setTimeFrameBrush}\r\n                  timeFrameBrush={timeFrameBrush}\r\n                  dateRange={dateRange}\r\n                  lookBack={lookBack}\r\n                  setLookBack={setLookBack}\r\n                  useCum={useCum}\r\n                  setUseCum={setUseCum}\r\n                  isBar={isBar}\r\n                  setIsBar={setIsBar}\r\n                  daysBetweenComparison={daysBetweenComparison}\r\n                  setDaysBetweenComparison={setDaysBetweenComparison}\r\n                  numberOfBars={numberOfBars}\r\n                  setNumberOfBars={setNumberOfBars}\r\n                  showAbsDiff={showAbsDiff}\r\n                  setShowAbsDiff={setShowAbsDiff}\r\n                  countryAsTotal={countryAsTotal}\r\n                  setCountryAsTotal={setCountryAsTotal}\r\n                  barCum={barCum}\r\n                  setBarCum={setBarCum}\r\n                />\r\n              }\r\n            />\r\n          </Row>\r\n        </>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nfunction BasicFilters({\r\n  baseData,\r\n  setIsProcessing,\r\n  isProcessing,\r\n  setCountries,\r\n  primers,\r\n  setPrimers,\r\n  setPType,\r\n}) {\r\n  const history = useHistory();\r\n\r\n  function primerChange(setSelectedPrimers) {\r\n    return (selection) => {\r\n      setIsProcessing(true);\r\n      const toFilter = selection || [];\r\n      if (toFilter.length === 0) {\r\n        setSelectedPrimers(toFilter);\r\n        history.push(`/results/Overview`);\r\n      } else {\r\n        const selection = toFilter.map((val) => val.value);\r\n        setSelectedPrimers(selection);\r\n        history.push(`/results/${selection.join(\"&\")}`);\r\n      }\r\n    };\r\n  }\r\n\r\n  function selectionChange(setSelection) {\r\n    return (selection) => {\r\n      setIsProcessing(true);\r\n      const toFilter = selection || [];\r\n      if (toFilter.length === 0) {\r\n        setSelection(toFilter);\r\n      } else {\r\n        const selection = toFilter.map((val) => {\r\n          if (val.value === val.label) return val.value;\r\n          return val;\r\n        });\r\n        setSelection(selection);\r\n      }\r\n    };\r\n  }\r\n  return (\r\n    <FilterGroup\r\n      isOpen={true}\r\n      variant=\"light\"\r\n      buttonText={\"Basic Filters\"}\r\n      groupId=\"basic-settings\"\r\n      component={\r\n        <>\r\n          <Row className=\"mb-3\">\r\n            <Col xs={12} lg={7} className=\"mb-3\">\r\n              <Row>\r\n                <Col sm={12} lg={3} className=\"mr-0 pr-lg-0\">\r\n                  <InputGroup.Text>\r\n                    Primers\r\n                    <AiOutlineQuestionCircle\r\n                      className=\"pl-1\"\r\n                      data-tip={help.primer}\r\n                    />\r\n                  </InputGroup.Text>\r\n                </Col>\r\n                <Col sm={12} lg={9} className=\"pl-lg-0\">\r\n                  <SelectDropdown\r\n                    value={primers}\r\n                    onChange={primerChange(setPrimers)}\r\n                    options={React.useMemo(() => {\r\n                      return Object.keys(baseData).map((val) => {\r\n                        return { label: val, value: val };\r\n                      });\r\n                    }, [baseData])}\r\n                    placeholder={\"Select Primers to Display\"}\r\n                    isLoading={isProcessing}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n            <Col xs={12} lg={5} className=\"mb-3\">\r\n              <Row>\r\n                <Col sm={12} lg={5} className=\"mr-0 pr-lg-0\">\r\n                  <InputGroup.Text>\r\n                    Primer Type\r\n                    <AiOutlineQuestionCircle\r\n                      className=\"pl-1\"\r\n                      data-tip={help.pType}\r\n                    />\r\n                  </InputGroup.Text>\r\n                </Col>\r\n                <Col sm={12} lg={7} className=\"pl-lg-0\">\r\n                  <SelectDropdown\r\n                    onChange={selectionChange(setPType)}\r\n                    options={React.useMemo(\r\n                      () => [\r\n                        { label: \"fwd\", value: \"fwd\" },\r\n                        { label: \"rev\", value: \"rev\" },\r\n                        { label: \"prb\", value: \"prb\" },\r\n                      ],\r\n                      []\r\n                    )}\r\n                    placeholder={\"Specify Type\"}\r\n                    isLoading={isProcessing}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"mb-3\">\r\n            <Col sm={12} lg={2} className=\"mr-0 pr-lg-0\">\r\n              <InputGroup.Text>\r\n                Counties\r\n                <AiOutlineQuestionCircle\r\n                  className=\"pl-1\"\r\n                  data-tip={help.country}\r\n                />\r\n              </InputGroup.Text>\r\n            </Col>\r\n            <Col sm={12} lg={10} className=\"pl-lg-0\">\r\n              <SelectDropdown\r\n                className=\"country-picker\"\r\n                onChange={selectionChange(setCountries)}\r\n                options={React.useMemo(() => {\r\n                  const unique = new Set();\r\n                  const options = Object.values(baseData).reduce(\r\n                    (options, currVal) => {\r\n                      const countries = currVal.reduce((countries, virus) => {\r\n                        if (unique.has(virus.country_name)) {\r\n                          return countries;\r\n                        }\r\n                        unique.add(virus.country_name);\r\n                        countries.push({\r\n                          label: virus.country_name,\r\n                          value: virus.ISO_A3,\r\n                        });\r\n                        return countries;\r\n                      }, []);\r\n                      options.push(...countries);\r\n                      return options;\r\n                    },\r\n                    []\r\n                  );\r\n                  return options;\r\n                }, [baseData])}\r\n                placeholder={\"Filter Countries\"}\r\n                isLoading={isProcessing}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nconst ItemFilters = ({\r\n  baseData,\r\n  dateRange,\r\n  timeFrameBrush,\r\n  setTimeFrameBrush,\r\n  lookBack,\r\n  setLookBack,\r\n  useCum,\r\n  setUseCum,\r\n  miss,\r\n  setMiss,\r\n  miss3,\r\n  setMiss3,\r\n  match,\r\n  setMatch,\r\n  countryAsTotal,\r\n  setCountryAsTotal,\r\n  setCountries,\r\n  primers,\r\n  setPrimers,\r\n  setPType,\r\n  isProcessing,\r\n  setIsProcessing,\r\n  isBar,\r\n  setIsBar,\r\n  daysBetweenComparison,\r\n  setDaysBetweenComparison,\r\n  numberOfBars,\r\n  setNumberOfBars,\r\n  showAbsDiff,\r\n  setShowAbsDiff,\r\n  barCum,\r\n  setBarCum,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <BasicFilters\r\n          baseData={baseData}\r\n          isProcessing={isProcessing}\r\n          setIsProcessing={setIsProcessing}\r\n          setCountries={setCountries}\r\n          primers={primers}\r\n          setPrimers={setPrimers}\r\n          setPType={setPType}\r\n        />\r\n      </Row>\r\n      <Row>\r\n        <AdvanceFilters\r\n          baseData={baseData}\r\n          dateRange={dateRange}\r\n          timeFrameBrush={timeFrameBrush}\r\n          setTimeFrameBrush={setTimeFrameBrush}\r\n          lookBack={lookBack}\r\n          setLookBack={setLookBack}\r\n          useCum={useCum}\r\n          setUseCum={setUseCum}\r\n          miss={miss}\r\n          setMiss={setMiss}\r\n          miss3={miss3}\r\n          setMiss3={setMiss3}\r\n          match={match}\r\n          setMatch={setMatch}\r\n          countryAsTotal={countryAsTotal}\r\n          setCountryAsTotal={setCountryAsTotal}\r\n          setPType={setPType}\r\n          isBar={isBar}\r\n          setIsBar={setIsBar}\r\n          daysBetweenComparison={daysBetweenComparison}\r\n          setDaysBetweenComparison={setDaysBetweenComparison}\r\n          numberOfBars={numberOfBars}\r\n          setNumberOfBars={setNumberOfBars}\r\n          showAbsDiff={showAbsDiff}\r\n          setShowAbsDiff={setShowAbsDiff}\r\n          barCum={barCum}\r\n          setBarCum={setBarCum}\r\n        />\r\n      </Row>\r\n      <ReactTooltip html={true}></ReactTooltip>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemFilters;\r\n","// Code by React-table doc team\r\n\r\nimport React from \"react\";\r\nimport { useAsyncDebounce } from \"react-table\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\n// Define a default UI for filtering\r\nexport function GlobalFilter({\r\n  preGlobalFilteredRows,\r\n  globalFilter,\r\n  setGlobalFilter,\r\n  isHelpOn = true,\r\n}) {\r\n  const count = preGlobalFilteredRows.length;\r\n  const [value, setValue] = React.useState(globalFilter);\r\n  const onChange = useAsyncDebounce((value) => {\r\n    setGlobalFilter(value || undefined);\r\n  }, 200);\r\n\r\n  return (\r\n    <div className=\"general-search\">\r\n      <Form.Row>\r\n        <Form.Label column sm={12} lg={2}>\r\n          General Search\r\n        </Form.Label>\r\n        <Col sm={12} lg={10}>\r\n          <Form.Control\r\n            type=\"text\"\r\n            value={value || \"\"}\r\n            onChange={(e) => {\r\n              setValue(e.target.value);\r\n              onChange(e.target.value);\r\n            }}\r\n            placeholder={`Search the ${count} entries`}\r\n          />\r\n        </Col>\r\n      </Form.Row>\r\n      {isHelpOn ? (\r\n        <Form.Row>\r\n          <Form.Label column sm={0} lg={2}></Form.Label>\r\n          <Col sm={12} lg={10}>\r\n            <Form.Text className=\"text-muted\">\r\n              This does not affect plot data. If you want to set filters, set\r\n              the options above.\r\n            </Form.Text>\r\n          </Col>\r\n        </Form.Row>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\n// This is a custom UI for our 'between' or number range\r\n// filter. It uses two number boxes and filters rows to\r\n// ones that have values between the two\r\n// export function NumberRangeFilter({\r\n//   column: { filterValue = [], preFilteredRows, setFilter, id, Header },\r\n// }) {\r\n//   const [min, max] = React.useMemo(() => {\r\n//     let min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\r\n//     let max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\r\n//     preFilteredRows.forEach((row) => {\r\n//       min = Math.min(row.values[id], min);\r\n//       max = Math.max(row.values[id], max);\r\n//     });\r\n//     return [min, max];\r\n//   }, [id, preFilteredRows]);\r\n//   const debounceFilter = useAsyncDebounce((val) => {\r\n//     setFilter((old = []) => [val ? parseInt(val, 10) : undefined, old[1]]);\r\n//   }, 200);\r\n\r\n//   return (\r\n//     <Form className=\"filter\">\r\n//       <Form.Row>\r\n//         <Col>\r\n//           <Form.Control\r\n//             as=\"input\"\r\n//             value={filterValue[0] || \"\"}\r\n//             type=\"number\"\r\n//             onChange={(e) => {\r\n//               const val = e.target.value;\r\n//               debounceFilter(val);\r\n//             }}\r\n//             placeholder={`Min (${min})`}\r\n//             size=\"sm\"\r\n//             min={0}\r\n//             max={200}\r\n//           />\r\n//         </Col>\r\n//         <Col>\r\n//           <Form.Control\r\n//             value={filterValue[1] || \"\"}\r\n//             type=\"number\"\r\n//             onChange={(e) => {\r\n//               const val = e.target.value;\r\n//               setFilter((old = []) => [\r\n//                 old[0],\r\n//                 val ? parseInt(val, 10) : undefined,\r\n//               ]);\r\n//             }}\r\n//             placeholder={`Max (${max})`}\r\n//             size=\"sm\"\r\n//           />\r\n//         </Col>\r\n//       </Form.Row>\r\n//     </Form>\r\n//   );\r\n// }\r\n\r\n// Define a default UI for filtering\r\n// export function CountryColumnFilter({\r\n//   column: { filterValue, preFilteredRows, setFilter },\r\n// }) {\r\n//   //   const count = preFilteredRows.length;\r\n\r\n//   return (\r\n//     <Form.Control\r\n//       className=\"filter\"\r\n//       value={filterValue || \"\"}\r\n//       onChange={(e) => {\r\n//         setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\r\n//       }}\r\n//       placeholder={`Filter Country`}\r\n//     />\r\n//   );\r\n// }\r\n\r\n// // This is a custom filter UI for selecting\r\n// // a unique option from a list\r\n// export function SelectColumnFilter({\r\n//   column: { filterValue, setFilter, preFilteredRows, id, Header },\r\n// }) {\r\n//   // Calculate the options for filtering\r\n//   // using the preFilteredRows\r\n//   const options = React.useMemo(() => {\r\n//     const unique = new Set();\r\n//     preFilteredRows.forEach((row) => {\r\n//       unique.add(row.values[id]);\r\n//     });\r\n//     const options = [...unique.values()].map((val) => {\r\n//       return { value: val, label: val };\r\n//     });\r\n//     return [{ value: \"\", label: \"All\" }, ...options];\r\n//   }, [id, preFilteredRows]);\r\n\r\n//   // Render a multi-select box\r\n//   return (\r\n//     <SelectDropdown\r\n//       onChange={(e) => {\r\n//         const toFilter = e || [];\r\n//         const isAll = toFilter.find((val) => val.value === \"\");\r\n//         if (isAll || toFilter.length === 0) {\r\n//           setFilter(undefined);\r\n//         } else {\r\n//           const selection = toFilter.map((val) => val.value);\r\n//           setFilter(selection);\r\n//         }\r\n//       }}\r\n//       options={options}\r\n//       defaultValue={[]}\r\n//     />\r\n//   );\r\n// }\r\n\r\n// This is a custom filter UI that uses a\r\n// slider to set the filter value between a column's\r\n// min and max values\r\n// function SliderColumnFilter({\r\n//   column: { filterValue, setFilter, preFilteredRows, id },\r\n// }) {\r\n// Calculate the min and max\r\n// using the preFilteredRows\r\n\r\n//   const [min, max] = React.useMemo(() => {\r\n//     let min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\r\n//     let max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\r\n//     preFilteredRows.forEach((row) => {\r\n//       min = Math.min(row.values[id], min);\r\n//       max = Math.max(row.values[id], max);\r\n//     });\r\n//     return [min, max];\r\n//   }, [id, preFilteredRows]);\r\n\r\n//   return (\r\n//     <>\r\n//       <input\r\n//         className=\"filter\"\r\n//         type=\"range\"\r\n//         min={min}\r\n//         max={max}\r\n//         value={filterValue || min}\r\n//         onChange={(e) => {\r\n//           setFilter(parseInt(e.target.value, 10));\r\n//         }}\r\n//       />\r\n//       <button onClick={() => setFilter(undefined)}>Off</button>\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// Define a custom filter filter function!\r\n// function filterGreaterThan(rows, id, filterValue) {\r\n//   return rows.filter((row) => {\r\n//     const rowValue = row.values[id];\r\n//     return rowValue >= filterValue;\r\n//   });\r\n// }\r\n// export function filterContains(rows, id, filterValue) {\r\n//   return rows.filter((row) => {\r\n//     if (filterValue === undefined) {\r\n//       return true;\r\n//     }\r\n//     const rowValue = row.values[id];\r\n//     return filterValue.includes(rowValue);\r\n//   });\r\n// }\r\n\r\n// This is an autoRemove method on the filter function that\r\n// when given the new filter value and returns true, the filter\r\n// will be automatically removed. Normally this is just an undefined\r\n// check, but here, we want to remove the filter if it's not a number\r\n// filterGreaterThan.autoRemove = (val) => typeof val !== \"number\";\r\n\r\n// function App() {\r\n//   const columns = React.useMemo(\r\n//     () => [\r\n//       {\r\n//         Header: \"Name\",\r\n//         columns: [\r\n//           {\r\n//             Header: \"First Name\",\r\n//             accessor: \"firstName\",\r\n//           },\r\n//           {\r\n//             Header: \"Last Name\",\r\n//             accessor: \"lastName\",\r\n//             // Use our custom `fuzzyText` filter on this column\r\n//             filter: \"fuzzyText\",\r\n//           },\r\n//         ],\r\n//       },\r\n//       {\r\n//         Header: \"Info\",\r\n//         columns: [\r\n//           {\r\n//             Header: \"Age\",\r\n//             accessor: \"age\",\r\n//             Filter: SliderColumnFilter,\r\n//             filter: \"equals\",\r\n//           },\r\n//           {\r\n//             Header: \"Visits\",\r\n//             accessor: \"visits\",\r\n//             Filter: NumberRangeColumnFilter,\r\n//             filter: \"between\",\r\n//           },\r\n//           {\r\n//             Header: \"Status\",\r\n//             accessor: \"status\",\r\n//             Filter: SelectColumnFilter,\r\n//             filter: \"includes\",\r\n//           },\r\n//           {\r\n//             Header: \"Profile Progress\",\r\n//             accessor: \"progress\",\r\n//             Filter: SliderColumnFilter,\r\n//             filter: filterGreaterThan,\r\n//           },\r\n//         ],\r\n//       },\r\n//     ],\r\n//     []\r\n//   );\r\n\r\n//   return (\r\n//     <div></div>\r\n//   );\r\n// }\r\n","import React from \"react\";\r\nimport {\r\n  usePagination,\r\n  useTable,\r\n  useGlobalFilter,\r\n  useFlexLayout,\r\n  useResizeColumns,\r\n  useSortBy,\r\n} from \"react-table\";\r\nimport BTable from \"react-bootstrap/Table\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Collapse from \"react-bootstrap/Collapse\";\r\nimport { AiFillCaretDown, AiFillCaretRight } from \"react-icons/ai\";\r\nimport { FaSort, FaSortDown, FaSortUp } from \"react-icons/fa\";\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nimport \"./tableDisplay.css\";\r\n\r\nimport { GlobalFilter } from \"./filter\";\r\n\r\nfunction DataTable({ title, data, columns, isCollapsable, downloadFileName }) {\r\n  const [showTable, setShowTable] = React.useState(true);\r\n\r\n  if (isCollapsable) {\r\n    return (\r\n      <>\r\n        <Button\r\n          onClick={() => {\r\n            setShowTable(!showTable);\r\n          }}\r\n          className=\"show-table mb-3 mt-3\"\r\n          aria-controls=\"collapse-table\"\r\n          aria-expanded={showTable}\r\n          variant=\"light\"\r\n        >\r\n          {showTable ? <AiFillCaretDown /> : <AiFillCaretRight />}\r\n          {showTable ? `Close Table` : `Show Table`}\r\n        </Button>\r\n        <Collapse in={showTable}>\r\n          <div>\r\n            <TableDisplay\r\n              id=\"collapse-table\"\r\n              title={title}\r\n              data={data}\r\n              columns={columns}\r\n              isCombined={downloadFileName}\r\n            />\r\n          </div>\r\n        </Collapse>\r\n      </>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <TableDisplay\r\n        id=\"collapse-table\"\r\n        title={title}\r\n        data={data}\r\n        columns={columns}\r\n        downloadFileName={downloadFileName}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction TableDisplay({ title, data, columns, downloadFileName }) {\r\n  const csv_headers = columns.map((header) => {\r\n    return { label: header.Header, key: header.accessor };\r\n  });\r\n  const filterTypes = React.useMemo(\r\n    () => ({\r\n      // Or, override the default text filter to use\r\n      // \"startWith\"\r\n      text: (rows, id, filterValue) => {\r\n        return rows.filter((row) => {\r\n          const rowValue = row.values[id];\r\n          return rowValue !== undefined\r\n            ? String(rowValue)\r\n                .toLowerCase()\r\n                .startsWith(String(filterValue).toLowerCase())\r\n            : true;\r\n        });\r\n      },\r\n    }),\r\n    []\r\n  );\r\n\r\n  const defaultColumn = React.useMemo(\r\n    () => ({\r\n      minWidth: 80,\r\n      width: 160,\r\n      maxWidth: 600,\r\n    }),\r\n    []\r\n  );\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    page,\r\n\r\n    // pagination details\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize },\r\n\r\n    // filtering details\r\n    state,\r\n    // visibleColumns,\r\n    preGlobalFilteredRows,\r\n    setGlobalFilter,\r\n    // filteredRows,\r\n    // rows,\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      initialState: {\r\n        pageIndex: 0,\r\n        hiddenColumns: [\"virus_match_idx\", \"query_match_idx\"],\r\n      },\r\n      defaultColumn,\r\n      filterTypes,\r\n    },\r\n    // useFilters,\r\n    useGlobalFilter,\r\n    useSortBy,\r\n    usePagination,\r\n    useFlexLayout,\r\n    useResizeColumns\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"table-title\">{title}</h2>\r\n      <GlobalFilter\r\n        preGlobalFilteredRows={preGlobalFilteredRows}\r\n        globalFilter={state.globalFilter}\r\n        setGlobalFilter={setGlobalFilter}\r\n      />\r\n\r\n      {/* <pre>\r\n        <code>{JSON.stringify(state, null, 2)}</code>\r\n      </pre> */}\r\n      <BTable\r\n        {...getTableProps()}\r\n        variant=\"light\"\r\n        //   size=\"lg\"\r\n        responsive\r\n        striped\r\n        bordered\r\n        hover\r\n      >\r\n        <thead className=\"thead\">\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => {\r\n                return (\r\n                  <th {...column.getHeaderProps()} className=\"table-header\">\r\n                    {column.render(\"Header\")}\r\n                    <span {...column.getSortByToggleProps()}>\r\n                      {column.isSorted ? (\r\n                        column.isSortedDesc ? (\r\n                          <FaSortDown className=\"pl-1\" />\r\n                        ) : (\r\n                          <FaSortUp className=\"pl-1\" />\r\n                        )\r\n                      ) : (\r\n                        <FaSort className=\"pl-1\" />\r\n                      )}\r\n                    </span>\r\n                    {column.canResize && (\r\n                      <div\r\n                        {...column.getResizerProps()}\r\n                        className={`resizer ${\r\n                          column.isResizing ? \"isResizing\" : \"\"\r\n                        }`}\r\n                      />\r\n                    )}\r\n                    {/* {column.canFilter ? (\r\n                      <div>{column.render(\"Filter\")}</div>\r\n                    ) : null} */}\r\n                  </th>\r\n                );\r\n              })}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()} className=\"tbody\">\r\n          {page.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  if (cell.column.id === \"match_diag\") {\r\n                    const display_str = cell.value.split(\" \").map((val) => {\r\n                      return val.split(\"\");\r\n                    });\r\n                    return (\r\n                      <td\r\n                        {...cell.getCellProps()}\r\n                        className=\"table-cell match-diag\"\r\n                      >\r\n                        {display_str.map((val, idx) => {\r\n                          return (\r\n                            <div key={idx}>\r\n                              {val.map((char, idx) => {\r\n                                return (\r\n                                  <span key={idx} className={char}>\r\n                                    {char}\r\n                                  </span>\r\n                                );\r\n                              })}\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </td>\r\n                    );\r\n                  }\r\n                  return (\r\n                    <td\r\n                      {...cell.getCellProps()}\r\n                      className={`table-cell ${\r\n                        cell.column.id === \"country_name\" ||\r\n                        cell.column.id === \"virus_name\"\r\n                          ? \"text-align-start\"\r\n                          : \"\"\r\n                      }`}\r\n                    >\r\n                      {cell.render(\"Cell\")}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n          {!canNextPage ? (\r\n            <tr className=\"end-of-data\">\r\n              <td>{`---------- All Data Displayed ----------`}</td>\r\n            </tr>\r\n          ) : null}\r\n        </tbody>\r\n      </BTable>\r\n      <Row className=\"pagination\">\r\n        <Col className=\"page-controls\" sm={12} md={4}>\r\n          <Button\r\n            variant=\"light\"\r\n            onClick={() => gotoPage(0)}\r\n            disabled={!canPreviousPage}\r\n          >\r\n            {\"<<\"}\r\n          </Button>\r\n          <Button\r\n            variant=\"light\"\r\n            onClick={() => previousPage()}\r\n            disabled={!canPreviousPage}\r\n          >\r\n            {\"<\"}\r\n          </Button>\r\n          <Button\r\n            variant=\"light\"\r\n            onClick={() => nextPage()}\r\n            disabled={!canNextPage}\r\n          >\r\n            {\">\"}\r\n          </Button>\r\n          <Button\r\n            variant=\"light\"\r\n            onClick={() => gotoPage(pageCount - 1)}\r\n            disabled={!canNextPage}\r\n          >\r\n            {\">>\"}\r\n          </Button>\r\n          <p>\r\n            {\" \"}\r\n            Page <strong>{pageIndex + 1} </strong> of{\" \"}\r\n            <strong>{pageOptions.length}</strong>\r\n          </p>\r\n        </Col>\r\n        <Col className=\"manual-page-selection\" sm={12} md={4}>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"page-info\">Go to page:</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              type=\"number\"\r\n              defaultValue={pageIndex + 1}\r\n              onChange={(e) => {\r\n                const page = e.target.value ? Number(e.target.value) - 1 : 0;\r\n                gotoPage(page);\r\n              }}\r\n              aria-label=\"Go To Page\"\r\n              aria-describedby=\"page-info\"\r\n            />\r\n          </InputGroup>\r\n        </Col>\r\n        <Col className=\"results-per-page\" sm={12} md={4}>\r\n          <Form.Control\r\n            value={pageSize}\r\n            onChange={(e) => {\r\n              setPageSize(Number(e.target.value));\r\n            }}\r\n            as=\"select\"\r\n          >\r\n            {[10, 20, 30, 40, 50].map((pageSize) => (\r\n              <option key={pageSize} value={pageSize}>\r\n                Show {pageSize}\r\n              </option>\r\n            ))}\r\n          </Form.Control>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <CSVLink\r\n          data={data}\r\n          headers={csv_headers}\r\n          filename={downloadFileName}\r\n          className=\"btn btn-dark\"\r\n          target=\"_blank\"\r\n        >\r\n          Download Table\r\n        </CSVLink>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\nexport default DataTable;\r\n","import React from \"react\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\nimport { debounce } from \"../util\";\r\n\r\nconst LineGraph = ({\r\n  title,\r\n  title2,\r\n  data,\r\n  primers,\r\n  dates,\r\n  setTimeFrameBrush,\r\n  timeFrameBrush,\r\n  showModal,\r\n  setModalInfo,\r\n  subtitle = \"\",\r\n  subtitle2 = \"\",\r\n}) => {\r\n  function buildDataSet(data) {\r\n    const datasets = [];\r\n    for (const dataset of data) {\r\n      datasets.push({\r\n        dimensions: [\r\n          \"countries_considered\",\r\n          \"date\",\r\n          \"mutation3_abs\",\r\n          \"mutation3_pct\",\r\n          \"mutation_abs\",\r\n          \"mutation_pct\",\r\n          \"name\",\r\n          \"submission_count\",\r\n        ],\r\n        source: dataset,\r\n      });\r\n    }\r\n    return datasets;\r\n  }\r\n  function getMutationPlot(primers, dataPlot, xIndex, yIndex) {\r\n    const plots = [];\r\n    for (let i = 0; i < primers.length; i++) {\r\n      plots.push({\r\n        name: `${primers[i]}`,\r\n        type: \"line\",\r\n        hoverAnimation: false,\r\n        xAxisIndex: xIndex,\r\n        yAxisIndex: yIndex,\r\n        encode: {\r\n          x: \"date\",\r\n          y: dataPlot,\r\n        },\r\n        datasetIndex: i,\r\n      });\r\n    }\r\n    return plots;\r\n  }\r\n  function getDateIndex(date, dates) {\r\n    if (date === undefined) return undefined;\r\n    const index = dates.findIndex((val) => {\r\n      const dateString = date.toISOString().slice(0, 10);\r\n      return dateString === val;\r\n    });\r\n    return index === -1 ? undefined : index;\r\n  }\r\n  function getStartDate(dates, date, lookBack) {\r\n    const initDate = new Date(dates[0]);\r\n    let startDate = new Date(date);\r\n    startDate.setDate(startDate.getDate() - lookBack);\r\n    if (startDate < initDate) {\r\n      startDate = initDate;\r\n    }\r\n    return startDate.toISOString().slice(0, 10);\r\n  }\r\n\r\n  const startIndex =\r\n    ((getDateIndex(timeFrameBrush[0], dates) || 0) * 100) / dates.length;\r\n  const endIndex =\r\n    ((getDateIndex(timeFrameBrush[1], dates) + 1 || dates.length) * 100) /\r\n    dates.length;\r\n\r\n  const mutationPlot = getMutationPlot(primers, \"mutation_pct\", 0, 0);\r\n  const mutation3Plot = getMutationPlot(primers, \"mutation3_pct\", 1, 1);\r\n  const datasets = buildDataSet(data, primers);\r\n  // console.log(\"data :>> \", data);\r\n  // console.log(\"mutationPlot :>> \", mutationPlot);\r\n  // console.log(\"datasets :>> \", datasets);\r\n\r\n  const option = {\r\n    title: [\r\n      {\r\n        text: title,\r\n        subtext: subtitle,\r\n        left: \"center\",\r\n      },\r\n      {\r\n        text: title2,\r\n        subtext: subtitle2,\r\n        left: \"center\",\r\n        top: \"center\",\r\n      },\r\n    ],\r\n    tooltip: {\r\n      trigger: \"axis\",\r\n      axisPointer: {\r\n        type: \"cross\",\r\n        animation: false,\r\n      },\r\n      backgroundColor: \"rgba(50,50,50, 0.9)\",\r\n      formatter: function (params) {\r\n        let baseDetails = params[0].data;\r\n        let date = baseDetails.date;\r\n        let startDate =\r\n          baseDetails.lookBack === -1\r\n            ? dates[0]\r\n            : getStartDate(dates, date, baseDetails.lookBack);\r\n        let submissionCount = baseDetails.submission_count;\r\n        let countries =\r\n          (baseDetails.countries_considered || []).length === 0\r\n            ? \"all available Countries\"\r\n            : `${baseDetails.countries_considered.length} countries`;\r\n\r\n        let tooltip = `<div>Details from ${startDate} to ${date}<br/>Total Submissions: ${submissionCount} from ${countries}</div><br/>`;\r\n\r\n        for (let i = 0; i < params.length / 2; i++) {\r\n          tooltip += `<div>${params[i].data.name}\r\n            <br/>\r\n            <strong>Abs Mutation:</strong> ${params[i].data.mutation_abs}<br/>\r\n            <strong>Abs Mutation in 3' end:</strong> ${\r\n              params[i].data.mutation3_abs\r\n            }<br/>\r\n            <strong>Mutation %:</strong> ${params[i].data.mutation_pct.toFixed(\r\n              3\r\n            )}%<br/>\r\n            <strong>Mutation % in 3' end:</strong> ${params[\r\n              i\r\n            ].data.mutation3_pct.toFixed(3)}%</div><br/>`;\r\n        }\r\n        return tooltip;\r\n      },\r\n      position: function (pos, params, el, elRect, size) {\r\n        let obj = {};\r\n        obj[[\"top\", \"bottom\"][+(pos[1] < size.viewSize[1] / 2)]] = 10;\r\n        obj[[\"left\", \"right\"][+(pos[0] < size.viewSize[0] / 2)]] = 30;\r\n        return obj;\r\n      },\r\n    },\r\n    legend: {\r\n      data: primers,\r\n      orient: \"vertical\",\r\n      type: \"scroll\",\r\n      top: \"5%\",\r\n      right: 0,\r\n    },\r\n    // toolbox: {\r\n    //   feature: {\r\n    //     dataZoom: {\r\n    //       yAxisIndex: \"none\",\r\n    //     },\r\n    //     restore: {},\r\n    //     saveAsImage: {},\r\n    //   },\r\n    // },\r\n    axisPointer: {\r\n      link: { xAxisIndex: \"all\" },\r\n    },\r\n    dataZoom: [\r\n      {\r\n        type: \"slider\",\r\n        show: true,\r\n        realtime: true,\r\n        start: startIndex,\r\n        end: endIndex,\r\n        xAxisIndex: [0, 1],\r\n        top: \"95%\",\r\n      },\r\n      {\r\n        type: \"inside\",\r\n        realtime: true,\r\n        start: startIndex,\r\n        end: endIndex,\r\n        xAxisIndex: [0, 1],\r\n      },\r\n    ],\r\n    grid: [\r\n      { bottom: \"60%\", right: \"15%\" },\r\n      { top: \"57%\", right: \"15%\" },\r\n    ],\r\n    xAxis: [\r\n      {\r\n        name: \"date\",\r\n        nameLocation: \"middle\",\r\n        nameTextStyle: {\r\n          align: \"center\",\r\n          verticalAlign: \"top\",\r\n          padding: [6, 0, 0, 0],\r\n        },\r\n        gridIndex: 0,\r\n        type: \"category\",\r\n      },\r\n      {\r\n        name: \"date\",\r\n        nameLocation: \"middle\",\r\n        nameTextStyle: {\r\n          align: \"center\",\r\n          verticalAlign: \"top\",\r\n          padding: [6, 0, 0, 0],\r\n        },\r\n\r\n        gridIndex: 1,\r\n        type: \"category\",\r\n      },\r\n    ],\r\n    yAxis: [\r\n      {\r\n        name: \"Total Percentage (%)\",\r\n        gridIndex: 0,\r\n        nameLocation: \"middle\",\r\n        nameGap: 25,\r\n        offset: -2,\r\n        nameTextStyle: {\r\n          padding: [0, 0, 15, 0],\r\n        },\r\n      },\r\n      {\r\n        name: \"Total Percentage (%)\",\r\n        gridIndex: 1,\r\n        nameLocation: \"middle\",\r\n        offset: -2,\r\n        nameGap: 25,\r\n        nameTextStyle: {\r\n          padding: [0, 0, 15, 0],\r\n        },\r\n      },\r\n    ],\r\n    dataset: datasets,\r\n    series: [...mutationPlot, ...mutation3Plot],\r\n  };\r\n\r\n  const seeEvent = (e) => {\r\n    // console.log(e);\r\n    setModalInfo((prev) => {\r\n      return {\r\n        ...prev,\r\n        date: e.data.date,\r\n        lookBack: e.data.lookBack,\r\n        primer: e.data.name,\r\n        country: null,\r\n      };\r\n    });\r\n    showModal();\r\n  };\r\n\r\n  function legendChange({ selected }) {\r\n    // TODO (Eb): Figure out how to handle legend selection\r\n    // const primers = [];\r\n    // for (const primer of Object.keys(selected)) {\r\n    //   if (selected[primer]) {\r\n    //     primers.push(primer);\r\n    //   }\r\n    // }\r\n    // setPrimers(primers);\r\n  }\r\n\r\n  const dataZoomChange = debounce((e) => {\r\n    let data = e;\r\n    if (e.batch !== undefined) {\r\n      data = e.batch[0];\r\n    }\r\n    const startIndex = Math.floor((dates.length * data.start) / 100);\r\n    const endIndex = Math.floor((dates.length * data.end) / 100);\r\n    const startStringDate = dates[startIndex] || dates[0];\r\n    const endStringDate = dates[endIndex] || dates[dates.length - 1];\r\n    let startDate = new Date(startStringDate);\r\n    let endDate = new Date(endStringDate);\r\n    startDate.setDate(startDate.getDate());\r\n    endDate.setDate(endDate.getDate());\r\n    setTimeFrameBrush([startDate, endDate]);\r\n  }, 800);\r\n\r\n  let onEvents = {\r\n    click: seeEvent,\r\n    legendselectchanged: legendChange,\r\n    dataZoom: dataZoomChange,\r\n  };\r\n  return (\r\n    <ReactEcharts\r\n      option={option}\r\n      style={{ height: \"475px\", width: \"100%\" }}\r\n      onEvents={onEvents}\r\n      notMerge={false}\r\n    />\r\n  );\r\n};\r\n\r\nexport default LineGraph;\r\n","import React from \"react\";\r\nimport LineGraph from \"./lineGraph\";\r\nimport { debounce, makeBaseGraphData } from \"../util\";\r\nimport worker from \"workerize-loader!../../pages/results/dataFilter\"; // eslint-disable-line import/no-webpack-loader-syntax\r\n\r\nconst CombinedLineGraph = ({\r\n  combinedBase,\r\n  combinedName,\r\n  dateRange,\r\n  totalSubmission,\r\n  setIsProcessingGraphs,\r\n  pType,\r\n  countries,\r\n  miss,\r\n  miss3,\r\n  match,\r\n  useCum,\r\n  lookBack,\r\n  timeFrameBrush,\r\n  setTimeFrameBrush,\r\n  showModal,\r\n  setModalInfo,\r\n  title,\r\n  title2,\r\n}) => {\r\n  const instance = React.useRef(worker());\r\n\r\n  const [lineData, setLineData] = React.useState([]);\r\n\r\n  const makeData = React.useCallback(\r\n    debounce(\r\n      (\r\n        combinedBase,\r\n        combinedName,\r\n        pType,\r\n        countries,\r\n        miss,\r\n        miss3,\r\n        match,\r\n        useCum,\r\n        lookBack,\r\n        totalSubmission\r\n      ) => {\r\n        let start = performance.now();\r\n        setIsProcessingGraphs(true);\r\n        instance.current\r\n          .getCombinedLineData(\r\n            makeBaseGraphData({ [combinedName]: combinedBase }),\r\n            [combinedName] || [],\r\n            dateRange,\r\n            pType,\r\n            countries,\r\n            miss,\r\n            miss3,\r\n            match,\r\n            totalSubmission,\r\n            useCum,\r\n            lookBack\r\n          )\r\n          .then((result) => {\r\n            setIsProcessingGraphs(false);\r\n            setLineData(result);\r\n            console.log(\r\n              `Time taken for creating combined line data: ${(\r\n                performance.now() - start\r\n              ).toFixed(5)} milliseconds`\r\n            );\r\n          });\r\n      },\r\n      500\r\n    ),\r\n    []\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    makeData(\r\n      combinedBase,\r\n      combinedName,\r\n      pType,\r\n      countries,\r\n      miss,\r\n      miss3,\r\n      match,\r\n      useCum,\r\n      lookBack,\r\n      totalSubmission\r\n    );\r\n  }, [\r\n    makeData,\r\n    combinedBase,\r\n    combinedName,\r\n    pType,\r\n    countries,\r\n    miss,\r\n    miss3,\r\n    match,\r\n    useCum,\r\n    lookBack,\r\n    totalSubmission,\r\n  ]);\r\n\r\n  if (Object.keys(combinedBase).length !== 0) {\r\n    return (\r\n      <LineGraph\r\n        title={title}\r\n        title2={title2}\r\n        data={lineData}\r\n        primers={combinedName}\r\n        dates={dateRange}\r\n        timeFrameBrush={timeFrameBrush}\r\n        setTimeFrameBrush={setTimeFrameBrush}\r\n        showModal={showModal}\r\n        setModalInfo={setModalInfo}\r\n      />\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\nconst objEqual = (a, b) => {\r\n  return (\r\n    Object.entries(a).sort().toString() === Object.entries(b).sort().toString()\r\n  );\r\n};\r\nconst areEqual = (prev, next) => {\r\n  return (\r\n    prev.lookBack === next.lookBack &&\r\n    objEqual(prev.combinedBase, next.combinedBase) &&\r\n    objEqual(prev.dateRange, next.dateRange) &&\r\n    objEqual(prev.totalSubmission, next.totalSubmission) &&\r\n    objEqual(prev.timeFrameBrush, next.timeFrameBrush) &&\r\n    objEqual(prev.miss, next.miss) &&\r\n    objEqual(prev.miss3, next.miss3) &&\r\n    objEqual(prev.match, next.match) &&\r\n    prev.useCum === next.useCum &&\r\n    prev.combinedName === next.combinedName &&\r\n    prev.lookBack === next.lookBack &&\r\n    objEqual(prev.pType, next.pType) &&\r\n    objEqual(prev.countries, next.countries)\r\n  );\r\n};\r\nexport default React.memo(CombinedLineGraph, areEqual);\r\n","import React from \"react\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\n\r\nconst BarGraph = ({\r\n  title,\r\n  title2,\r\n  data,\r\n  showAbsDiff,\r\n  showModal,\r\n  setModalInfo,\r\n  subtitle = \"\",\r\n  subtitle2 = \"\",\r\n}) => {\r\n  function getBarLabel(data, idx, toPlot) {\r\n    const fontSize = 9;\r\n    return {\r\n      show: true,\r\n      position: \"insideTop\",\r\n      distance: 5,\r\n      align: \"center\",\r\n      verticalAlign: \"top\",\r\n      rotate: 0,\r\n      formatter: function (params) {\r\n        if (!showAbsDiff) {\r\n          return `${params.data[toPlot].toFixed(3)}%`;\r\n        }\r\n        const primer = params.data.name;\r\n        const currVal = data[idx].filter((val) => val.name === primer)[0][\r\n          toPlot\r\n        ];\r\n        const prevVal = data[idx - 1].filter((val) => val.name === primer)[0][\r\n          toPlot\r\n        ];\r\n        const difference = (currVal - prevVal).toFixed(2);\r\n        let label = difference > 0 ? `{p|+` : difference < 0 ? `{n|` : \"{zero|\";\r\n        return `${label}${difference}%}`;\r\n      },\r\n      fontSize: fontSize,\r\n      backgroundColor: \"#232323\",\r\n      textBorderColor: \"transparent\",\r\n      padding: [4, 5, 2, 5],\r\n      rich: {\r\n        p: { color: \"#88ff88\", fontSize: fontSize },\r\n        n: { color: \"#ff8677\", fontSize: fontSize },\r\n        zero: { color: \"#eef\", fontSize: fontSize },\r\n      },\r\n    };\r\n  }\r\n\r\n  function buildDataset(datasets) {\r\n    const data = [];\r\n    for (const dataset of datasets) {\r\n      data.push({\r\n        dimensions: [\r\n          \"countries_considered\",\r\n          \"date\",\r\n          \"mutation3_abs\",\r\n          \"mutation3_pct\",\r\n          \"mutation_abs\",\r\n          \"mutation_pct\",\r\n          \"name\",\r\n          \"submission_count\",\r\n        ],\r\n        source: dataset,\r\n      });\r\n    }\r\n    return data;\r\n  }\r\n\r\n  function buildBarPlot(data, toPlot, xAxisIndex, yAxisIndex) {\r\n    const plots = [];\r\n    for (let i = 1; i < data.length; i++) {\r\n      plots.push({\r\n        name: (data[i][0] || {}).date,\r\n        type: \"bar\",\r\n        barMaxWidth: 40,\r\n        xAxisIndex: xAxisIndex,\r\n        yAxisIndex: yAxisIndex,\r\n        label: getBarLabel(data, i, toPlot),\r\n        encode: {\r\n          x: \"name\",\r\n          y: toPlot,\r\n        },\r\n        datasetIndex: i,\r\n      });\r\n    }\r\n    return plots;\r\n  }\r\n\r\n  const dataset = buildDataset(data);\r\n  const mutation = buildBarPlot(data, \"mutation_pct\", 0, 0);\r\n  const mutation3 = buildBarPlot(data, \"mutation3_pct\", 1, 1);\r\n  // console.log(\"dataset :>> \", dataset);\r\n  // console.log(\"mutation :>> \", mutation);\r\n  // console.log(\"mutation3 :>> \", mutation3);\r\n  const option = {\r\n    title: [\r\n      {\r\n        text: title,\r\n        subtext: subtitle,\r\n        left: \"center\",\r\n      },\r\n      {\r\n        text: title2,\r\n        subtext: subtitle2,\r\n        left: \"center\",\r\n        top: \"52%\",\r\n      },\r\n    ],\r\n    tooltip: {\r\n      trigger: \"axis\",\r\n      formatter: function (params) {\r\n        const data = params.slice(0, params.length / 2);\r\n        const primerName = data[0].data.name;\r\n        let tooltip = `<div>Details for ${primerName} (Left to Right)</div><br/>`;\r\n        for (const item of data) {\r\n          const submissionCount = item.data.submission_count;\r\n          const countries =\r\n            item.data.countries_considered.length === 0\r\n              ? \"All Countries\"\r\n              : `${item.data.countries_considered.length} countries`;\r\n          const endDate = new Date(item.data.date);\r\n          const startDate = new Date(item.data.date);\r\n          startDate.setDate(startDate.getDate() - parseInt(item.data.lookBack));\r\n          tooltip += `<div><strong>From ${startDate\r\n            .toISOString()\r\n            .slice(0, 10)} to ${endDate.toISOString().slice(0, 10)}:</strong> \r\n          <br/>\r\n          ${submissionCount.size} Submissions from ${countries} \r\n          <br/>\r\n          <strong>Abs Mutation:</strong> ${item.data.mutation_abs}<br/>\r\n          <strong>Abs Mutation in 3' end:</strong> ${item.data.mutation3_abs}\r\n          <br/>\r\n          <strong>Mutation %:</strong> ${item.data.mutation_pct.toFixed(3)}%\r\n          <br/>\r\n          <strong>Mutation % in 3' end:</strong> ${item.data.mutation3_pct.toFixed(\r\n            3\r\n          )}%\r\n          </div><br/>`;\r\n        }\r\n        return tooltip;\r\n      },\r\n      axisPointer: {\r\n        type: \"shadow\",\r\n        animation: false,\r\n      },\r\n      position: function (pos, params, el, elRect, size) {\r\n        let obj = {};\r\n        obj[[\"top\", \"bottom\"][+(pos[1] < size.viewSize[1] / 2)]] = 10;\r\n        obj[\"left\"] = pos[0];\r\n        return obj;\r\n      },\r\n    },\r\n    axisPointer: {\r\n      link: { xAxisIndex: \"all\" },\r\n    },\r\n    grid: [\r\n      { top: \"8%\", bottom: \"65%\" },\r\n      { top: \"57%\", bottom: \"20%\" },\r\n    ],\r\n    xAxis: [\r\n      {\r\n        name: \"primers\",\r\n        gridIndex: 0,\r\n        type: \"category\",\r\n        axisLabel: {\r\n          rotate: 45,\r\n          margin: 15,\r\n        },\r\n      },\r\n      {\r\n        name: \"primers\",\r\n        gridIndex: 1,\r\n        type: \"category\",\r\n        axisLabel: {\r\n          rotate: 45,\r\n          margin: 15,\r\n        },\r\n      },\r\n    ],\r\n    yAxis: [\r\n      {\r\n        name: \"Total Percentage (%)\",\r\n        gridIndex: 0,\r\n        nameLocation: \"middle\",\r\n        nameGap: 50,\r\n      },\r\n      {\r\n        name: \"Total Percentage (%)\",\r\n        gridIndex: 1,\r\n        nameLocation: \"middle\",\r\n        nameGap: 50,\r\n      },\r\n    ],\r\n    dataset: dataset,\r\n    series: [...mutation, ...mutation3],\r\n  };\r\n  const seeEvent = (e) => {\r\n    console.log(e);\r\n    setModalInfo((prev) => {\r\n      return {\r\n        ...prev,\r\n        date: e.data.date,\r\n        lookBack: e.data.lookBack,\r\n        primer: e.data.name,\r\n        country: null,\r\n      };\r\n    });\r\n    showModal();\r\n  };\r\n  let onEvents = {\r\n    click: seeEvent,\r\n  };\r\n  return (\r\n    <ReactEcharts\r\n      option={option}\r\n      style={{ height: \"600px\", width: \"100%\" }}\r\n      notMerge={true}\r\n      onEvents={onEvents}\r\n    />\r\n  );\r\n};\r\n\r\nexport default BarGraph;\r\n","import React from \"react\";\r\nimport BarGraph from \"../../components/mutGraphs/barGraph\";\r\nimport { debounce } from \"../util\";\r\n\r\nimport worker from \"workerize-loader!../../pages/results/dataFilter\"; // eslint-disable-line import/no-webpack-loader-syntax\r\n\r\nconst BarGraphWrapper = ({\r\n  rawData,\r\n  dateRange,\r\n  totalSubmission,\r\n  setIsProcessingGraphs,\r\n  primers,\r\n  pType,\r\n  countries,\r\n  miss,\r\n  miss3,\r\n  match,\r\n  useCum,\r\n  lookBack,\r\n  timeFrameBrush,\r\n  showModal,\r\n  setModalInfo,\r\n  showAbsDiff,\r\n  daysBetweenComparison,\r\n  numberOfBars,\r\n  title,\r\n  title2,\r\n}) => {\r\n  const instance = React.useRef(worker());\r\n  const [barData, setBarData] = React.useState([]);\r\n\r\n  const updateBarData = React.useCallback(\r\n    debounce(\r\n      (\r\n        primers,\r\n        pType,\r\n        countries,\r\n        miss,\r\n        miss3,\r\n        match,\r\n        useCum,\r\n        lookBack,\r\n        totalSubmission,\r\n        timeFrameBrush,\r\n        daysBetweenComparison,\r\n        numberOfBars\r\n      ) => {\r\n        let start = performance.now();\r\n\r\n        setIsProcessingGraphs(true);\r\n        instance.current\r\n          .getLineGraphData({\r\n            baseData: rawData,\r\n            dateRange: dateRange,\r\n            primers: primers,\r\n            pType: pType,\r\n            countries: countries,\r\n            miss: miss,\r\n            miss3: miss3,\r\n            match: match,\r\n            totalSubmission: totalSubmission,\r\n            useCum: useCum,\r\n            lookBack: lookBack,\r\n          })\r\n          .then((lineData) => {\r\n            return instance.current.makeBarData({\r\n              graphOverview: lineData,\r\n              dates: dateRange,\r\n              timeFrameBrush: timeFrameBrush,\r\n              daysBetweenComparison: daysBetweenComparison,\r\n              numberOfBars: numberOfBars,\r\n            });\r\n          })\r\n          .then((result) => {\r\n            setBarData(result);\r\n            console.log(\"barData :>> \", result);\r\n            console.log(\r\n              `Time taken for bar graph data: ${(\r\n                performance.now() - start\r\n              ).toFixed(5)} milliseconds`\r\n            );\r\n            setIsProcessingGraphs(false);\r\n          });\r\n      },\r\n      500\r\n    ),\r\n    []\r\n  );\r\n  React.useEffect(() => {\r\n    const submission = { ...totalSubmission };\r\n    if (useCum) {\r\n      for (const date of Object.keys(totalSubmission)) {\r\n        submission[date] = totalSubmission[date].total;\r\n      }\r\n    }\r\n    updateBarData(\r\n      primers,\r\n      pType,\r\n      countries,\r\n      miss,\r\n      miss3,\r\n      match,\r\n      useCum,\r\n      lookBack,\r\n      submission,\r\n      timeFrameBrush,\r\n      daysBetweenComparison,\r\n      numberOfBars\r\n    );\r\n  }, [\r\n    updateBarData,\r\n    primers,\r\n    pType,\r\n    countries,\r\n    miss,\r\n    miss3,\r\n    match,\r\n    useCum,\r\n    lookBack,\r\n    totalSubmission,\r\n    timeFrameBrush,\r\n    daysBetweenComparison,\r\n    numberOfBars,\r\n  ]);\r\n\r\n  if (Object.keys(rawData).length !== 0) {\r\n    return (\r\n      <BarGraph\r\n        title={title}\r\n        title2={title2}\r\n        data={barData}\r\n        showAbsDiff={useCum ? !useCum : showAbsDiff}\r\n        showModal={showModal}\r\n        setModalInfo={setModalInfo}\r\n      />\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst objEqual = (a, b) => {\r\n  return (\r\n    Object.entries(a).sort().toString() === Object.entries(b).sort().toString()\r\n  );\r\n};\r\nconst areEqual = (prev, next) => {\r\n  return (\r\n    prev.lookBack === next.lookBack &&\r\n    objEqual(prev.rawData, next.rawData) &&\r\n    objEqual(prev.dateRange, next.dateRange) &&\r\n    objEqual(prev.totalSubmission, next.totalSubmission) &&\r\n    objEqual(prev.timeFrameBrush, next.timeFrameBrush) &&\r\n    objEqual(prev.miss, next.miss) &&\r\n    objEqual(prev.miss3, next.miss3) &&\r\n    objEqual(prev.match, next.match) &&\r\n    prev.useCum === next.useCum &&\r\n    prev.lookBack === next.lookBack &&\r\n    prev.daysBetweenComparison === next.daysBetweenComparison &&\r\n    prev.numberOfBars === next.numberOfBars &&\r\n    prev.showAbsDiff === next.showAbsDiff &&\r\n    objEqual(prev.pType, next.pType) &&\r\n    objEqual(prev.countries, next.countries) &&\r\n    objEqual(prev.primers, next.primers)\r\n  );\r\n};\r\n\r\nexport default React.memo(BarGraphWrapper, areEqual);\r\n","import React from \"react\";\r\nimport LineGraph from \"../../components/mutGraphs/lineGraph\";\r\nimport { debounce } from \"../util\";\r\nimport worker from \"workerize-loader!../../pages/results/dataFilter\"; // eslint-disable-line import/no-webpack-loader-syntax\r\n\r\nconst InLineGraph = ({\r\n  rawData,\r\n  dateRange,\r\n  totalSubmission,\r\n  setIsProcessingGraphs,\r\n  primers,\r\n  pType,\r\n  countries,\r\n  miss,\r\n  miss3,\r\n  match,\r\n  useCum,\r\n  lookBack,\r\n  timeFrameBrush,\r\n  setTimeFrameBrush,\r\n  showModal,\r\n  setModalInfo,\r\n  title,\r\n  title2,\r\n}) => {\r\n  const instance = React.useRef(worker());\r\n\r\n  const [lineData, setLineData] = React.useState([]);\r\n\r\n  const makeData = React.useCallback(\r\n    debounce(\r\n      (\r\n        primers,\r\n        pType,\r\n        countries,\r\n        miss,\r\n        miss3,\r\n        match,\r\n        useCum,\r\n        lookBack,\r\n        totalSubmission\r\n      ) => {\r\n        let start = performance.now();\r\n        setIsProcessingGraphs(true);\r\n        instance.current\r\n          .getLineGraphData({\r\n            baseData: rawData,\r\n            dateRange: dateRange,\r\n            primers: primers,\r\n            pType: pType,\r\n            countries: countries,\r\n            miss: miss,\r\n            miss3: miss3,\r\n            match: match,\r\n            totalSubmission: totalSubmission,\r\n            useCum: useCum,\r\n            lookBack: lookBack,\r\n          })\r\n          .then((result) => {\r\n            console.log(\r\n              `Time taken for line graph data: ${(\r\n                performance.now() - start\r\n              ).toFixed(5)} milliseconds`\r\n            );\r\n            setIsProcessingGraphs(false);\r\n            setLineData(result);\r\n          });\r\n      },\r\n      500\r\n    ),\r\n    []\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    makeData(\r\n      primers,\r\n      pType,\r\n      countries,\r\n      miss,\r\n      miss3,\r\n      match,\r\n      useCum,\r\n      lookBack,\r\n      totalSubmission\r\n    );\r\n  }, [\r\n    makeData,\r\n    primers,\r\n    pType,\r\n    countries,\r\n    miss,\r\n    miss3,\r\n    match,\r\n    useCum,\r\n    lookBack,\r\n    totalSubmission,\r\n  ]);\r\n\r\n  if (Object.keys(rawData).length !== 0) {\r\n    return (\r\n      <LineGraph\r\n        title={title}\r\n        title2={title2}\r\n        data={lineData}\r\n        primers={primers.length === 0 ? Object.keys(rawData) : primers}\r\n        dates={dateRange}\r\n        timeFrameBrush={timeFrameBrush}\r\n        setTimeFrameBrush={setTimeFrameBrush}\r\n        showModal={showModal}\r\n        setModalInfo={setModalInfo}\r\n      />\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\nconst objEqual = (a, b) => {\r\n  return (\r\n    Object.entries(a).sort().toString() === Object.entries(b).sort().toString()\r\n  );\r\n};\r\nconst areEqual = (prev, next) => {\r\n  return (\r\n    prev.lookBack === next.lookBack &&\r\n    objEqual(prev.rawData, next.rawData) &&\r\n    objEqual(prev.dateRange, next.dateRange) &&\r\n    objEqual(prev.totalSubmission, next.totalSubmission) &&\r\n    objEqual(prev.timeFrameBrush, next.timeFrameBrush) &&\r\n    objEqual(prev.miss, next.miss) &&\r\n    objEqual(prev.miss3, next.miss3) &&\r\n    objEqual(prev.match, next.match) &&\r\n    prev.useCum === next.useCum &&\r\n    prev.lookBack === next.lookBack &&\r\n    objEqual(prev.pType, next.pType) &&\r\n    objEqual(prev.countries, next.countries) &&\r\n    objEqual(prev.primers, next.primers)\r\n  );\r\n};\r\nexport default React.memo(InLineGraph, areEqual);\r\n","import React from \"react\";\r\nimport { scaleLinear } from \"d3-scale\";\r\nimport {\r\n  ZoomableGroup,\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n} from \"react-simple-maps\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nconst geoUrl =\r\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-50m.json\";\r\n\r\nconst colorScale = scaleLinear().domain([0, 1]).range([\"#ffedea\", \"#ff5233\"]);\r\n\r\nconst PrimerMap = ({\r\n  title,\r\n  setTooltipContent,\r\n  data,\r\n  db,\r\n  dateRange,\r\n  useCum,\r\n  timeFrameBrush,\r\n  showModal,\r\n  setModalInfo,\r\n  subtitle = \"\",\r\n}) => {\r\n  const [downloadData, setDownloadData] = React.useState([]);\r\n  const headers = [\r\n    {\r\n      label: \"Country\",\r\n      key: \"country\",\r\n    },\r\n    {\r\n      label: \"ISO A3\",\r\n      key: \"ISO_A3\",\r\n    },\r\n    {\r\n      label: \"Mutation %\",\r\n      key: \"missed_pct\",\r\n    },\r\n    {\r\n      label: \"Absolute Mutations\",\r\n      key: \"abs_miss\",\r\n    },\r\n    {\r\n      label: \"Number of Submitted Virus\",\r\n      key: \"country_total\",\r\n    },\r\n    {\r\n      label: \"Start Date\",\r\n      key: \"startDate\",\r\n    },\r\n    {\r\n      label: \"End Date\",\r\n      key: \"endDate\",\r\n    },\r\n  ];\r\n\r\n  function handleClick(countryISO3, startDateStr, endDateStr, db) {\r\n    // const timeFrame = extent(\r\n    //   data.reduce((dates, data) => {\r\n    //     if (data.ISO_A3 === countryISO3) {\r\n    //       dates.push(new Date(data.date));\r\n    //       return dates;\r\n    //     } else {\r\n    //       return dates;\r\n    //     }\r\n    //   }, [])\r\n    // );\r\n    if (db[endDateStr][countryISO3] !== 0) {\r\n      const endDate = new Date(endDateStr);\r\n      const startDate = new Date(startDateStr);\r\n      // To calculate the time difference of two dates\r\n      let Difference_In_Time = endDate.getTime() - startDate.getTime();\r\n      // To calculate the no. of days between two dates\r\n      let Difference_In_Days = Difference_In_Time / (1000 * 3600 * 24);\r\n      showModal();\r\n      setModalInfo((prev) => {\r\n        return {\r\n          ...prev,\r\n          primer: null,\r\n          country: countryISO3,\r\n          lookBack: Difference_In_Days,\r\n          date: endDateStr,\r\n        };\r\n      });\r\n    }\r\n  }\r\n\r\n  function downloadDataClick(\r\n    countryMisses,\r\n    countryMissesPct,\r\n    db,\r\n    startDate,\r\n    endDate,\r\n    data\r\n  ) {\r\n    return () => {\r\n      const toDownload = [];\r\n      for (const [countryISO, absMiss] of countryMisses) {\r\n        const countryName = data.find(\r\n          (element) => element.ISO_A3 === countryISO\r\n        ).country_name;\r\n        toDownload.push({\r\n          country: countryName,\r\n          ISO_A3: countryISO,\r\n          missed_pct: countryMissesPct.get(countryISO),\r\n          abs_miss: absMiss.size,\r\n          country_total: db[endDate][countryISO],\r\n          startDate: startDate,\r\n          endDate: endDate,\r\n        });\r\n      }\r\n      setDownloadData(toDownload);\r\n    };\r\n  }\r\n\r\n  function getCountryMissCounts(data) {\r\n    /**\r\n     * @param {Array} data: contains a list of missed virus Objects to be visualized on the map.\r\n     * @returns {Map} Containing the number of misses per country.\r\n     */\r\n    let currData = data;\r\n    return currData.reduce((count, currData) => {\r\n      count.has(currData.ISO_A3)\r\n        ? count.set(\r\n            currData.ISO_A3,\r\n            count.get(currData.ISO_A3).add(currData.virus_name)\r\n          )\r\n        : count.set(currData.ISO_A3, new Set().add(currData.virus_name));\r\n      return count;\r\n    }, new Map());\r\n  }\r\n\r\n  function getDates(timeFrameBrush, db) {\r\n    if (timeFrameBrush.length === 0) {\r\n      return [Object.keys(db)[0], Object.keys(db)[Object.keys(db).length - 1]];\r\n    } else {\r\n      let startDate = getDateString(timeFrameBrush[0]);\r\n      let endDate = getDateString(timeFrameBrush[1]);\r\n      if (endDate > Object.keys(db)[Object.keys(db).length - 1]) {\r\n        endDate = Object.keys(db)[Object.keys(db).length - 1];\r\n      }\r\n      if (startDate < Object.keys(db)[0]) {\r\n        startDate = Object.keys(db)[0];\r\n      }\r\n      return [startDate, endDate];\r\n    }\r\n  }\r\n\r\n  function getDateString(time) {\r\n    var date = new Date(time);\r\n    return date.toISOString().slice(0, 10);\r\n  }\r\n\r\n  function getMapDb(db, dateRange, useCum, startDate, endDate) {\r\n    function addObject(obj1, obj2) {\r\n      const toReturn = { ...obj1 };\r\n      for (const key of Object.keys(obj2)) {\r\n        toReturn[key] = obj2[key] + (obj1[key] || 0);\r\n      }\r\n      return toReturn;\r\n    }\r\n    if (useCum) {\r\n      return db;\r\n    } else {\r\n      const mapDb = {};\r\n      mapDb[endDate] = {};\r\n      for (const date of dateRange) {\r\n        if (date >= startDate && date <= endDate) {\r\n          mapDb[endDate] = addObject(mapDb[endDate], db[date]);\r\n        }\r\n      }\r\n      return mapDb;\r\n    }\r\n  }\r\n\r\n  function getCountryMissPct(countryMisses, db, endDate) {\r\n    return Array.from(countryMisses.keys()).reduce((accumulated, country) => {\r\n      accumulated.set(\r\n        country,\r\n        (\r\n          (countryMisses.get(country).size / (db[endDate][country] || 100)) *\r\n          100\r\n        ).toFixed(2)\r\n      );\r\n      return accumulated;\r\n    }, new Map());\r\n  }\r\n  const [startDate, endDate] = getDates(timeFrameBrush, db);\r\n  const countryMisses = getCountryMissCounts(data);\r\n  const mapDb = getMapDb(db, dateRange, useCum, startDate, endDate);\r\n  const countryMissesPct = getCountryMissPct(countryMisses, mapDb, endDate);\r\n  // console.log(\"countryMisses :>> \", countryMisses);\r\n  // console.log(\"startDate, endDate :>> \", startDate, endDate);\r\n  // console.log(\"countryMissesPct :>> \", countryMissesPct);\r\n  const maxPctMiss = Math.max(...Array.from(countryMissesPct.values()));\r\n  // console.log(\"maxPctMiss :>> \", maxPctMiss);\r\n  return (\r\n    <Container>\r\n      <h2 className=\"map-title\">{title}</h2>\r\n      <h3 className=\"map-title map-subtitle\">{subtitle}</h3>\r\n      <ComposableMap data-tip=\"\" projectionConfig={{ scale: 200 }}>\r\n        <ZoomableGroup>\r\n          <Geographies geography={geoUrl}>\r\n            {({ geographies }) =>\r\n              geographies.map((geo) => {\r\n                const missCount = (\r\n                  countryMisses.get(geo.properties.ISO_A3) || new Set()\r\n                ).size;\r\n                const pctMiss =\r\n                  countryMissesPct.get(geo.properties.ISO_A3) || 0;\r\n                return (\r\n                  <Geography\r\n                    key={geo.rsmKey}\r\n                    geography={geo}\r\n                    onMouseEnter={() => {\r\n                      const { NAME } = geo.properties;\r\n                      setTooltipContent(\r\n                        `${NAME}: <br/> \r\n                          ${\r\n                            (mapDb[endDate] || [])[geo.properties.ISO_A3] || 0\r\n                          } submissions <br/>\r\n                          ${missCount} Absolute Mutations<br/> \r\n                          ${pctMiss}% Mutations<br/>\r\n                          `\r\n                      );\r\n                    }}\r\n                    onMouseLeave={() => {\r\n                      setTooltipContent(\"\");\r\n                    }}\r\n                    onClick={() => {\r\n                      handleClick(\r\n                        geo.properties.ISO_A3,\r\n                        startDate,\r\n                        endDate,\r\n                        mapDb\r\n                      );\r\n                    }}\r\n                    style={{\r\n                      default: {\r\n                        fill:\r\n                          parseFloat(pctMiss) !== 0\r\n                            ? colorScale(pctMiss / maxPctMiss)\r\n                            : \"#949494\",\r\n                        outline: \"none\",\r\n                      },\r\n                      hover: {\r\n                        fill: \"#afca9d\",\r\n                        cursor: missCount ? \"pointer\" : \"auto\",\r\n                        outline: \"none\",\r\n                      },\r\n                    }}\r\n                  />\r\n                );\r\n              })\r\n            }\r\n          </Geographies>\r\n        </ZoomableGroup>\r\n      </ComposableMap>\r\n      <CSVLink\r\n        data={downloadData}\r\n        headers={headers}\r\n        filename={\"geo_misses.csv\"}\r\n        className=\"btn btn-dark\"\r\n        target=\"_blank\"\r\n        onClick={downloadDataClick(\r\n          countryMisses,\r\n          countryMissesPct,\r\n          mapDb,\r\n          startDate,\r\n          endDate,\r\n          data\r\n        )}\r\n      >\r\n        Download Map Data\r\n      </CSVLink>\r\n    </Container>\r\n  );\r\n};\r\nexport default React.memo(PrimerMap);\r\n","import React from \"react\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nimport PrimerMap from \"./primerMap\";\r\nimport \"./primerMap.css\";\r\n\r\nconst MapWithToolTip = ({\r\n  title,\r\n  data,\r\n  db,\r\n  dateRange,\r\n  useCum,\r\n  timeFrameBrush,\r\n  setTimeFrameBrush,\r\n  showModal,\r\n  setModalInfo,\r\n  subtitle = \"\",\r\n}) => {\r\n  const [tooltipContent, setTooltipContent] = React.useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      <PrimerMap\r\n        title={title}\r\n        subtitle={subtitle}\r\n        setTooltipContent={setTooltipContent}\r\n        data={data}\r\n        db={db}\r\n        dateRange={dateRange}\r\n        useCum={useCum}\r\n        timeFrameBrush={timeFrameBrush}\r\n        setTimeFrameBrush={setTimeFrameBrush}\r\n        showModal={showModal}\r\n        setModalInfo={setModalInfo}\r\n      />\r\n      <ReactTooltip html={true}>{tooltipContent}</ReactTooltip>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MapWithToolTip;\r\n","import React from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Collapse from \"react-bootstrap/Collapse\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./resultsPage.css\";\r\nimport ItemFilters from \"../../components/ItemFilter/itemFilters\";\r\nimport DataTable from \"../../components/tableDisplay/tableDisplay\";\r\nimport CombinedLineGraph from \"../../components/mutGraphs/combinedLineGraph\";\r\nimport BarGraphWrapper from \"../../components/mutGraphs/barGraphWrapper\";\r\nimport InLineGraph from \"../../components/mutGraphs/inLineGraph\";\r\nimport MapWithToolTip from \"../../components/primerMap/mapWithToolTip\";\r\n\r\nimport worker from \"workerize-loader!./dataFilter\"; // eslint-disable-line import/no-webpack-loader-syntax\r\n\r\nimport { debounce, addName, makeBaseGraphData } from \"../../components/util\";\r\n\r\nconst InputData = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <Container>\r\n      <p className=\"no-data\">\r\n        Please make sure that you've uploaded some data first!\r\n      </p>\r\n      <Button onClick={() => history.push(\"/\")}>Upload Data</Button>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst ResultPage = ({ results }) => {\r\n  // Base results from blast\r\n  const result = React.useRef(JSON.parse(results));\r\n  const baseData = React.useRef(result.current[0] || {});\r\n  const instance = React.useRef(worker());\r\n  const baseTableData = React.useRef(makeTableData(baseData.current));\r\n  const baseGraphData = React.useRef(makeBaseGraphData(baseData.current));\r\n\r\n  const dbCountDaily = React.useRef(parseDb(result.current, 1));\r\n  const dbCountCum = React.useRef(parseDb(result.current, 0));\r\n  const dateRange = React.useRef(Object.keys(dbCountCum.current) || []);\r\n\r\n  const { display } = useParams();\r\n  const toDisplay = display.split(\"&\");\r\n\r\n  // Data to display\r\n  const [dbActual, setDbActual] = React.useState([]);\r\n  const [tableDataset, setTableDataset] = React.useState([]);\r\n  const [combinedBase, setCombinedBase] = React.useState([]);\r\n  const [combinedName, setCombinedName] = React.useState([]);\r\n  const [tableCombined, setTableCombined] = React.useState([]);\r\n\r\n  // Filtering for table and graph data\r\n  const [miss, setMiss] = React.useState(React.useMemo(() => [], []));\r\n  const [miss3, setMiss3] = React.useState(React.useMemo(() => [], []));\r\n  const [match, setMatch] = React.useState(React.useMemo(() => [], []));\r\n  const [timeFrameBrush, setTimeFrameBrush] = React.useState(\r\n    React.useMemo(() => [], [])\r\n  );\r\n  const setTimeFrameCb = React.useCallback(setTimeFrameBrush, []);\r\n  const [countries, setCountries] = React.useState(React.useMemo(() => [], []));\r\n  const [primers, setPrimers] = React.useState(React.useMemo(() => [], []));\r\n  const [pType, setPType] = React.useState(React.useMemo(() => [], []));\r\n\r\n  // Filtering for graph data\r\n  const [useCum, setUseCum] = React.useState(false);\r\n  const [countryAsTotal, setCountryAsTotal] = React.useState(true);\r\n  const [lookBack, setLookBack] = React.useState(6);\r\n  const [isBar, setIsBar] = React.useState(true);\r\n  const [daysBetweenComparison, setDaysBetweenComparison] = React.useState(\r\n    lookBack\r\n  );\r\n  const [numberOfBars, setNumberOfBars] = React.useState(1);\r\n  const [showAbsDiff, setShowAbsDiff] = React.useState(false);\r\n  const [barCum, setBarCum] = React.useState(true);\r\n\r\n  // Detail Modal\r\n  const [showModal, setShowModal] = React.useState(false);\r\n  const [modalInfo, setModalInfo] = React.useState({\r\n    date: null,\r\n    lookBack: null,\r\n    country: null,\r\n    primer: null,\r\n  });\r\n  const closeModalCb = () => setShowModal(false);\r\n  const showModalCb = React.useCallback(() => setShowModal(true), []);\r\n\r\n  // Misc items\r\n  const [isProcessing, setIsProcessing] = React.useState(false);\r\n  const [isProcessingGraphs, setIsProcessingGraphs] = React.useState(false);\r\n  const setIsProcessingGraphCb = React.useCallback(setIsProcessingGraphs, []);\r\n  const updateTableData = React.useCallback(\r\n    debounce(\r\n      (primers, pType, countries, miss, miss3, match, timeFrameBrush) => {\r\n        let start = performance.now();\r\n        instance.current\r\n          .filterTable({\r\n            baseTableData: baseTableData.current,\r\n            primers: primers,\r\n            pType: pType,\r\n            countries: countries,\r\n            miss: miss,\r\n            miss3: miss3,\r\n            match: match,\r\n            timeFrameBrush: timeFrameBrush,\r\n          })\r\n          .then((data) => {\r\n            setIsProcessing(false);\r\n            setTableDataset(data);\r\n            console.log(\r\n              `Time taken for filtering table data: ${(\r\n                performance.now() - start\r\n              ).toFixed(5)} milliseconds`\r\n            );\r\n          });\r\n      },\r\n      500\r\n    ),\r\n    []\r\n  );\r\n  const updateCombinedData = React.useCallback(\r\n    debounce(\r\n      (primers, pType, countries, miss, miss3, match, timeFrameBrush) => {\r\n        let start = performance.now();\r\n        instance.current\r\n          .filterTable({\r\n            baseTableData: baseTableData.current,\r\n            primers: primers,\r\n            pType: pType,\r\n            countries: countries,\r\n            miss: miss,\r\n            miss3: miss3,\r\n            match: match,\r\n            timeFrameBrush: timeFrameBrush,\r\n          })\r\n          .then((data) => {\r\n            const result = data.reduce((prevVal, currVal) => {\r\n              const temp = prevVal[currVal.primer] || [];\r\n              temp.push(currVal);\r\n              prevVal[currVal.primer] = temp;\r\n              return prevVal;\r\n            }, {});\r\n            instance.current\r\n              .makeIntersection(\r\n                JSON.parse(JSON.stringify(result)),\r\n                primers.length === 0 ? Object.keys(baseData.current) : primers\r\n              )\r\n              .then((result) => {\r\n                console.log(\r\n                  `Time taken for creating combined data: ${(\r\n                    performance.now() - start\r\n                  ).toFixed(5)} milliseconds`\r\n                );\r\n                setCombinedBase(result[0]);\r\n                setCombinedName(result[1]);\r\n              });\r\n          });\r\n      },\r\n      500\r\n    ),\r\n    []\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    if (Object.keys(dbCountCum.current).length !== 0)\r\n      instance.current\r\n        .getTotalSubmission({\r\n          dbCum: dbCountCum.current,\r\n          dbDaily: dbCountDaily.current,\r\n          dateRange: dateRange.current,\r\n          countries: countries,\r\n          countryAsTotal: countryAsTotal,\r\n          useCum: useCum,\r\n          lookBack: lookBack,\r\n        })\r\n        .then((totalSubmission) => {\r\n          setDbActual(totalSubmission);\r\n        });\r\n  }, [countries, countryAsTotal, lookBack, useCum]);\r\n\r\n  React.useEffect(() => {\r\n    setDaysBetweenComparison(lookBack === 0 ? 1 : lookBack);\r\n  }, [lookBack]);\r\n\r\n  const overviewColumns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Primer\",\r\n        accessor: \"primer\",\r\n        disableFilters: true,\r\n      },\r\n      {\r\n        Header: \"Accession ID\",\r\n        accessor: \"accession_id\",\r\n        disableFilters: true,\r\n      },\r\n      {\r\n        Header: \"Virus Name\",\r\n        accessor: \"virus_name\",\r\n        disableFilters: true,\r\n        width: 200,\r\n      },\r\n      {\r\n        Header: \"Diagram\",\r\n        accessor: \"match_diag\",\r\n        disableFilters: true,\r\n        width: 450,\r\n      },\r\n      {\r\n        Header: \"Primer Type\",\r\n        accessor: \"type\",\r\n        disableFilters: true,\r\n        width: 120,\r\n      },\r\n      {\r\n        Header: \"Homology %\",\r\n        accessor: \"match_pct\",\r\n      },\r\n      {\r\n        Header: \"Total Mutation in Primer Region\",\r\n        accessor: \"misses\",\r\n      },\r\n      {\r\n        Header: \"Mutation in Primer Region's 3' End\",\r\n        accessor: \"misses3\",\r\n      },\r\n      {\r\n        Header: \"Date Collected\",\r\n        accessor: \"date\",\r\n        disableFilters: true,\r\n        width: 140,\r\n        show: false,\r\n      },\r\n      {\r\n        Header: \"Country\",\r\n        accessor: \"country_name\",\r\n        disableFilters: true,\r\n      },\r\n      {\r\n        Header: \"Alpha 3 Code\",\r\n        accessor: \"ISO_A3\",\r\n        disableFilters: true,\r\n      },\r\n    ],\r\n    []\r\n  );\r\n  const combinedCols = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Primer\",\r\n        accessor: \"primer\",\r\n        disableFilters: true,\r\n      },\r\n      {\r\n        Header: \"Accession ID\",\r\n        accessor: \"accession_id\",\r\n        disableFilters: true,\r\n      },\r\n      {\r\n        Header: \"Virus Name\",\r\n        accessor: \"virus_name\",\r\n        disableFilters: true,\r\n        width: 200,\r\n      },\r\n      {\r\n        Header: \"Date Collected\",\r\n        accessor: \"date\",\r\n        disableFilters: true,\r\n        width: 140,\r\n        show: false,\r\n      },\r\n      {\r\n        Header: \"Country\",\r\n        accessor: \"country_name\",\r\n        disableFilters: true,\r\n      },\r\n      {\r\n        Header: \"Alpha 3 Code\",\r\n        accessor: \"ISO_A3\",\r\n        disableFilters: true,\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    setIsProcessing(true);\r\n    updateTableData(\r\n      primers,\r\n      pType,\r\n      countries,\r\n      miss,\r\n      miss3,\r\n      match,\r\n      timeFrameBrush\r\n    );\r\n  }, [\r\n    updateTableData,\r\n    primers,\r\n    pType,\r\n    countries,\r\n    miss,\r\n    miss3,\r\n    match,\r\n    timeFrameBrush,\r\n  ]);\r\n\r\n  const modalData = React.useMemo(() => {\r\n    if (showModal) {\r\n      console.log(\"modalInfo :>> \", modalInfo);\r\n      return combinedBase.length === 0\r\n        ? baseTableData.current.filter((value) => {\r\n            let isSameDate = true;\r\n            let isWithinFrame = true;\r\n            let isPrimer = true;\r\n            let isCountry = true;\r\n            if (modalInfo[\"date\"] !== null) {\r\n              isSameDate = value.date === modalInfo[\"date\"];\r\n            }\r\n            if (\r\n              modalInfo[\"lookBack\"] !== null &&\r\n              modalInfo[\"lookBack\"] !== -1\r\n            ) {\r\n              const selectedDate = new Date(modalInfo[\"date\"]);\r\n              const startDate = new Date(selectedDate);\r\n              startDate.setDate(startDate.getDate() - modalInfo[\"lookBack\"]);\r\n              isWithinFrame =\r\n                value.date >= startDate.toISOString().slice(0, 10) &&\r\n                value.date <= modalInfo[\"date\"];\r\n            }\r\n            if (modalInfo[\"primer\"] !== null) {\r\n              isPrimer = value.primer === modalInfo[\"primer\"];\r\n            }\r\n            if (modalInfo[\"country\"] !== null) {\r\n              isCountry = value.ISO_A3 === modalInfo[\"country\"];\r\n            }\r\n            return (isSameDate || isWithinFrame) && isPrimer && isCountry;\r\n          })\r\n        : combinedBase.filter((value) => {\r\n            let isSameDate = true;\r\n            let isWithinFrame = true;\r\n            let isPrimer = true;\r\n            let isCountry = true;\r\n            if (modalInfo[\"date\"] !== null) {\r\n              isSameDate = value.date === modalInfo[\"date\"];\r\n            }\r\n            if (\r\n              modalInfo[\"lookBack\"] !== null ||\r\n              modalInfo[\"lookBack\"] !== -1\r\n            ) {\r\n              const selectedDate = new Date(modalInfo[\"date\"]);\r\n              const startDate = new Date(selectedDate);\r\n              startDate.setDate(startDate.getDate() - modalInfo[\"lookBack\"]);\r\n              isWithinFrame =\r\n                value.date >= startDate.toISOString().slice(0, 10) &&\r\n                value.date <= modalInfo[\"date\"];\r\n            }\r\n            if (modalInfo[\"primer\"] !== null) {\r\n              isPrimer = value.primer === modalInfo[\"primer\"][0];\r\n            }\r\n            if (modalInfo[\"country\"] !== null) {\r\n              isCountry = value.ISO_A3 === modalInfo[\"country\"];\r\n            }\r\n            return (isSameDate || isWithinFrame) && isPrimer && isCountry;\r\n          });\r\n    } else {\r\n      return [];\r\n    }\r\n  }, [showModal, combinedBase, modalInfo]);\r\n\r\n  React.useEffect(() => {\r\n    if (baseTableData.current.length !== 0) {\r\n      updateCombinedData(primers, pType, countries, miss, miss3, match, []);\r\n    }\r\n  }, [updateCombinedData, primers, pType, countries, miss, miss3, match]);\r\n\r\n  React.useEffect(() => {\r\n    if (combinedBase.length !== 0) {\r\n      instance.current\r\n        .filterTable({\r\n          baseTableData: combinedBase,\r\n          timeFrameBrush: timeFrameBrush,\r\n        })\r\n        .then((result) => {\r\n          setTableCombined(result);\r\n        });\r\n    }\r\n  }, [combinedBase, timeFrameBrush]);\r\n\r\n  if (result.current.length !== 0) {\r\n    const endDate = new Date(\r\n      timeFrameBrush[1] || dateRange.current[dateRange.current.length - 1]\r\n    );\r\n    const startDate = new Date(timeFrameBrush[0] || dateRange.current[0]);\r\n\r\n    return (\r\n      <div className=\"display-page\">\r\n        <Container>\r\n          <ItemFilters\r\n            baseData={baseData.current}\r\n            dateRange={dateRange.current}\r\n            timeFrameBrush={timeFrameBrush}\r\n            setTimeFrameBrush={setTimeFrameBrush}\r\n            lookBack={lookBack}\r\n            setLookBack={setLookBack}\r\n            useCum={useCum}\r\n            setUseCum={setUseCum}\r\n            miss={miss}\r\n            setMiss={setMiss}\r\n            miss3={miss3}\r\n            setMiss3={setMiss3}\r\n            match={match}\r\n            setMatch={setMatch}\r\n            countryAsTotal={countryAsTotal}\r\n            setCountryAsTotal={setCountryAsTotal}\r\n            setCountries={setCountries}\r\n            setPrimers={setPrimers}\r\n            setPType={setPType}\r\n            isProcessing={isProcessing || isProcessingGraphs}\r\n            setIsProcessing={setIsProcessing}\r\n            isBar={isBar}\r\n            setIsBar={setIsBar}\r\n            daysBetweenComparison={daysBetweenComparison}\r\n            setDaysBetweenComparison={setDaysBetweenComparison}\r\n            numberOfBars={numberOfBars}\r\n            setNumberOfBars={setNumberOfBars}\r\n            showAbsDiff={showAbsDiff}\r\n            setShowAbsDiff={setShowAbsDiff}\r\n            barCum={barCum}\r\n            setBarCum={setBarCum}\r\n          />\r\n\r\n          <Row className=\"mb-5\">\r\n            <Col\r\n              xs={12}\r\n              lg={\r\n                primers.length === 1 ||\r\n                Object.keys(baseData.current).length === 1\r\n                  ? 6\r\n                  : 12\r\n              }\r\n            >\r\n              <InLineGraph\r\n                rawData={baseGraphData.current}\r\n                dateRange={dateRange.current}\r\n                totalSubmission={dbActual}\r\n                setIsProcessingGraphs={setIsProcessingGraphCb}\r\n                primers={\r\n                  primers.length === 0 ? Object.keys(baseData.current) : primers\r\n                }\r\n                pType={pType}\r\n                countries={countries}\r\n                miss={miss}\r\n                miss3={miss3}\r\n                match={match}\r\n                useCum={useCum}\r\n                lookBack={lookBack}\r\n                timeFrameBrush={timeFrameBrush}\r\n                setTimeFrameBrush={setTimeFrameCb}\r\n                showModal={showModalCb}\r\n                setModalInfo={setModalInfo}\r\n                title={\"Genomes with mutation\"}\r\n                title2={\"Genomes with mutation in 3' end\"}\r\n              />\r\n            </Col>\r\n            {primers.length === 1 ||\r\n            Object.keys(baseData.current).length === 1 ? (\r\n              <Col xs={12} lg={6}>\r\n                <MapWithToolTip\r\n                  title={\"Map of Virus with Mutation in Primer Region\"}\r\n                  subtitle={\r\n                    !useCum\r\n                      ? `From ${startDate\r\n                          .toISOString()\r\n                          .slice(0, 10)} to ${endDate\r\n                          .toISOString()\r\n                          .slice(0, 10)}`\r\n                      : \"Cumulative\"\r\n                  }\r\n                  data={tableDataset}\r\n                  db={useCum ? dbCountCum.current : dbCountDaily.current}\r\n                  dateRange={dateRange.current}\r\n                  useCum={useCum}\r\n                  timeFrameBrush={timeFrameBrush}\r\n                  setTimeFrameBrush={setTimeFrameBrush}\r\n                  showModal={showModalCb}\r\n                  setModalInfo={setModalInfo}\r\n                />\r\n              </Col>\r\n            ) : null}\r\n          </Row>\r\n          {isBar ? (\r\n            <BarGraphWrapper\r\n              rawData={baseGraphData.current}\r\n              dateRange={dateRange.current}\r\n              totalSubmission={barCum ? dbCountCum.current : dbActual}\r\n              setIsProcessingGraphs={setIsProcessingGraphCb}\r\n              primers={\r\n                primers.length === 0 ? Object.keys(baseData.current) : primers\r\n              }\r\n              pType={pType}\r\n              countries={countries}\r\n              miss={miss}\r\n              miss3={miss3}\r\n              match={match}\r\n              useCum={barCum}\r\n              lookBack={lookBack}\r\n              timeFrameBrush={timeFrameBrush}\r\n              daysBetweenComparison={daysBetweenComparison}\r\n              numberOfBars={numberOfBars}\r\n              showAbsDiff={showAbsDiff}\r\n              showModal={showModalCb}\r\n              setModalInfo={setModalInfo}\r\n              title={\"Genomes with mutation\"}\r\n              title2={\"Percent of genomes with mutation in 3' end\"}\r\n              className=\"mb-5\"\r\n            />\r\n          ) : null}\r\n          <DataTable\r\n            className=\"mb-5\"\r\n            id=\"collapse-table\"\r\n            title={\"Overview of Viruses with Mutation in Primer Region\"}\r\n            data={tableDataset}\r\n            columns={overviewColumns}\r\n            isCombined={false}\r\n            isCollapsable={true}\r\n          />\r\n          <Collapse in={combinedBase.length !== 0}>\r\n            <div>\r\n              <Row className=\"mb-5\">\r\n                <Col xs={12} lg={6}>\r\n                  <CombinedLineGraph\r\n                    combinedBase={combinedBase}\r\n                    combinedName={combinedName}\r\n                    dateRange={dateRange.current}\r\n                    totalSubmission={dbActual}\r\n                    setIsProcessingGraphs={setIsProcessingGraphCb}\r\n                    pType={pType}\r\n                    countries={countries}\r\n                    miss={miss}\r\n                    miss3={miss3}\r\n                    match={match}\r\n                    useCum={useCum}\r\n                    lookBack={lookBack}\r\n                    title={\"Genomes with mutation (Combined)\"}\r\n                    title2={\"Genomes with mutation in 3' end (Combined)\"}\r\n                    timeFrameBrush={timeFrameBrush}\r\n                    setTimeFrameBrush={setTimeFrameCb}\r\n                    showModal={showModalCb}\r\n                    setModalInfo={setModalInfo}\r\n                  />\r\n                </Col>\r\n                <Col xs={12} lg={6}>\r\n                  <MapWithToolTip\r\n                    title={\r\n                      \"Map of Virus with Mutation in Primer Region (Combined)\"\r\n                    }\r\n                    subtitle={\r\n                      !useCum\r\n                        ? `From ${startDate\r\n                            .toISOString()\r\n                            .slice(0, 10)} to ${endDate\r\n                            .toISOString()\r\n                            .slice(0, 10)}`\r\n                        : \"Cumulative\"\r\n                    }\r\n                    data={tableCombined}\r\n                    db={useCum ? dbCountCum.current : dbCountDaily.current}\r\n                    dateRange={dateRange.current}\r\n                    useCum={useCum}\r\n                    timeFrameBrush={timeFrameBrush}\r\n                    setTimeFrameBrush={setTimeFrameBrush}\r\n                    showModal={showModalCb}\r\n                    setModalInfo={setModalInfo}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <DataTable\r\n                title={\"Viruses with Mutation in Primer Region (Combined)\"}\r\n                data={tableCombined}\r\n                columns={combinedCols}\r\n                isCombined={true}\r\n                isCollapsable={true}\r\n                className=\"mb-5\"\r\n              />\r\n            </div>\r\n          </Collapse>\r\n        </Container>\r\n        <Modal\r\n          show={showModal}\r\n          onHide={closeModalCb}\r\n          dialogClassName=\"modal-90w\"\r\n          aria-labelledby=\"missed-details-modal\"\r\n        >\r\n          <Modal.Header closeButton id=\"missed-details-modal\">\r\n            <Modal.Title>Viruses with Mutation in Primer Region</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <DataTable\r\n              id=\"detail-table\"\r\n              title={\"\"}\r\n              data={modalData}\r\n              columns={\r\n                combinedBase.length === 0 ? overviewColumns : combinedCols\r\n              }\r\n              downloadFileName={\"selected_details.csv\"}\r\n              isCollapsable={false}\r\n              className=\"mb-5\"\r\n            />\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={closeModalCb}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <InputData />;\r\n};\r\n\r\nexport default ResultPage;\r\n\r\nfunction parseDb(rawData, database) {\r\n  /**\r\n   * Retrieves that database count from [rawData]\r\n   * @param {Array} rawData: contains the primerDetails, databaseCounts (daily and cumulative), as well as primer filenames on server.\r\n   * @param {Number} database: 0 for cumulative, 1 for daily\r\n   * @returns {Object} The object mapping date -> countries -> submission count\r\n   */\r\n  if (rawData.length !== 0) {\r\n    return JSON.parse(JSON.stringify(rawData[1][database]));\r\n  }\r\n  return {};\r\n}\r\n\r\nfunction makeTableData(primerDetails) {\r\n  /**\r\n   * Converts all the incoming data into a table format for subsequent data structure to be built off\r\n   * @param {Object} primerDetails: contains the primerDetails\r\n   * @returns {Array} Each item in the array corresponds to a single entry that has been missed.\r\n   **/\r\n  let tableData = [];\r\n  if (Object.keys(primerDetails).length !== 0) {\r\n    const primerNames = Object.keys(primerDetails);\r\n    for (const primerName of primerNames) {\r\n      tableData.push(...primerDetails[primerName].map(addName(primerName)));\r\n    }\r\n  }\r\n  return tableData;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport ManualPage from \"./pages/manual/manualPage\";\r\nimport UploadPage from \"./pages/upload/uploadPage\";\r\nimport ResultPage from \"./pages/results/resultsPage\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [results, setResults] = useState(\"[]\");\r\n  const [error, setError] = useState(\"[]\");\r\n  return (\r\n    <Router basename=\"/METHODS/corona/gamma/primer/build\">\r\n      <Link to=\"/\" style={{ textDecoration: \"none\" }}>\r\n        <h1 className=\"title\">Primer Checker</h1>\r\n      </Link>\r\n\r\n      <Switch>\r\n        <Route exact={true} path=\"/\">\r\n          <UploadPage setResults={setResults} setError={setError} />\r\n        </Route>\r\n        <Route exact={true} path=\"/manualUpload\">\r\n          <ManualPage setResults={setResults} />\r\n        </Route>\r\n        <Route exact={true} path=\"/results/:display\">\r\n          <ResultPage results={results} />\r\n        </Route>\r\n        <Route path=\"/results\">\r\n          <ResultPage results={results} />\r\n        </Route>\r\n        <Route path=\"/error\" exact={true}>\r\n          <div>{error}</div>\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <div>404: Page not found</div>\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","\n\t\t\t\tvar addMethods = require(\"../../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = [\"filterTable\",\"getTotalSubmission\",\"getLineGraphData\",\"getCombinedLineData\",\"makeBarData\",\"makeIntersection\"]\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"46480a59d90f7b5e8391.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t"],"sourceRoot":""}