{"version":3,"sources":["components/util.js","components/dropzone/dropzone.js","components/textArea/textArea.js","components/previewPane/previewPane.js","components/fileDisplay/fileDisplay.js","services/primerCheck.js","pages/upload/uploadPage.js","components/selectDropdown/selectDropdown.js","components/ItemFilter/minMaxFilter.js","components/ItemFilter/filterGroup.js","components/ItemFilter/itemFilters.js","components/tableDisplay/filter.js","components/tableDisplay/tableDisplay.js","components/mutGraphs/lineGraph.js","components/mutGraphs/barGraph.js","components/primerMap/primerMap.js","components/primerMap/mapWithToolTip.js","pages/results/resultsPage.js","App.js","serviceWorker.js","index.js"],"names":["validateFormat","content","exec","DropZone","selectedFiles","setSelectedFiles","setErrorMessage","filesSelected","e","a","files","target","checkFiles","to_store","file","handleFile","concat","readFile","to_return","console","warn","message","reader","FileReader","log","Promise","resolve","reject","onload","event","result","name","onerror","abort","DOMException","readAsText","Form","Group","controlId","htmlFor","id","Container","className","onDragOver","preventDefault","onDragEnter","onDragLeave","onDrop","dataTransfer","type","onChange","multiple","TextArea","setTextFieldFasta","useState","errorMessage","textAreaValue","setTextAreaValue","inputSample","useEffect","Row","Col","Label","Button","variant","size","onClick","Control","as","placeholder","value","aria-describedby","Text","muted","split","map","i","key","Feedback","PreviewPane","show","handleClose","Modal","onHide","Header","closeButton","Title","Body","newline_matches","matchAll","length","slice","index","formatContent","Footer","FileDisplay","preview","setPreview","previewOpen","setPreviewOpen","removeFile","fileName","prevFiles","filter","fileType","substring","lastIndexOf","lg","md","invalid","openPreview","Math","floor","parseFloat","pow","toFixed","fileSize","to_send","data","axios","post","UploadPage","setResults","showSubmit","setShowSubmit","displayedFiles","setDisplayedFiles","validFiles","setValidFiles","textFieldFasta","fileErrorMessage","setFileErrorMessage","open","setOpen","isLoading","setIsLoading","history","useHistory","openId","filteredFiles","reduce","current","find","Collapse","in","noValidate","Fade","aria-controls","aria-expanded","setTimeout","primerCheckService","then","response","JSON","stringify","push","catch","disabled","Spinner","animation","role","aria-hidden","animatedComponents","makeAnimated","SelectDropdown","options","defaultValue","closeMenuOnSelect","components","isMulti","isSearchable","isClearable","NumberRangeFilter","minVal","maxVal","step","setFilter","React","useMemo","combinedList","Object","values","combined","currVal","min","max","forEach","row","debounceFilter","val","isMin","old","sm","isInteger","parseInt","FilterGroup","title","groupId","buttonText","component","isOpen","setShow","help","Switch","checked","ariaControls","ariaExpanded","MissDefinition","baseData","miss","setMiss","miss3","setMiss3","match","setMatch","xs","InputGroup","Prepend","data-tip","BarGraphSettings","isBar","setIsBar","daysBetweenComparison","setDaysBetweenComparison","numberOfBars","setNumberOfBars","showAbsDiff","setShowAbsDiff","toString","LineGraphSettings","countryAsTotal","setCountryAsTotal","GraphMapSetting","setTimeFrameBrush","timeFrameBrush","dateRange","lookBack","setLookBack","useCum","setUseCum","maxDate","Date","minDate","calendarIcon","AdvanceFilters","BasicFilters","setSelectedPrimers","setIsProcessing","isProcessing","setCountries","primers","setPrimers","setPType","selectionChange","setSelection","selection","toFilter","label","join","keys","unique","Set","countries","virus","has","country_name","add","ISO_A3","ItemFilters","html","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","isHelpOn","count","setValue","useAsyncDebounce","undefined","column","TableDisplay","columns","isCombined","csv_headers","header","accessor","filterTypes","text","rows","filterValue","rowValue","String","toLowerCase","startsWith","defaultColumn","minWidth","width","maxWidth","useTable","initialState","pageIndex","useGlobalFilter","useSortBy","usePagination","useFlexLayout","useResizeColumns","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageSize","responsive","striped","bordered","hover","headerGroup","getHeaderGroupProps","headers","getHeaderProps","render","getSortByToggleProps","isSorted","isSortedDesc","canResize","getResizerProps","isResizing","getRowProps","cells","cell","display_str","getCellProps","idx","char","Number","aria-label","filename","DataTable","isCollapsable","showTable","setShowTable","LineGraph","title2","dates","showModal","setModalInfo","subtitle","subtitle2","getMutationPlot","dataPlot","xIndex","yIndex","plots","hoverAnimation","xAxisIndex","yAxisIndex","encode","x","y","datasetIndex","getDateIndex","date","findIndex","toISOString","startIndex","endIndex","mutationPlot","mutation3Plot","datasets","dataset","dimensions","source","buildDataSet","option","subtext","left","top","tooltip","trigger","axisPointer","backgroundColor","formatter","params","baseDetails","startDate","initDate","setDate","getDate","getStartDate","submissionCount","submission_count","countries_considered","mutation_abs","mutation3_abs","mutation_pct","mutation3_pct","position","pos","el","elRect","obj","viewSize","legend","orient","right","link","dataZoom","realtime","start","end","grid","bottom","xAxis","nameLocation","nameTextStyle","align","verticalAlign","padding","gridIndex","yAxis","nameGap","series","onEvents","click","prev","primer","country","legendselectchanged","selected","func","wait","immediate","timeout","context","this","args","arguments","later","apply","callNow","clearTimeout","debounce","batch","startStringDate","endStringDate","endDate","style","height","notMerge","BarGraph","getBarLabel","toPlot","distance","rotate","difference","fontSize","textBorderColor","rich","p","color","n","zero","buildBarPlot","barMaxWidth","buildDataset","mutation","mutation3","axisLabel","margin","colorScale","scaleLinear","domain","range","memo","setTooltipContent","db","downloadData","setDownloadData","getDateString","time","getDates","countryMisses","currData","currDate","getTime","set","get","Map","getCountryMissCounts","countryMissesPct","Array","from","accumulated","maxPctMiss","projectionConfig","scale","geography","geographies","geo","missCount","properties","pctMiss","rsmKey","onMouseEnter","NAME","onMouseLeave","countryISO3","extent","handleClick","default","fill","outline","cursor","toDownload","countryISO","absMiss","element","country_total","missed_pct","abs_miss","downloadDataClick","MapWithToolTip","tooltipContent","prototype","sameDay","d","getFullYear","getMonth","InputData","ResultPage","results","useRef","parse","baseTableData","primerDetails","tableData","primerNames","primerName","addName","makeTableData","dbCountDaily","parseDb","dbCountCum","dbDailyRangeCache","dailyDb","rangeStart","rangeEnd","toReturn","getRangeDbCount","cacheRange","useParams","display","pType","setShowModal","modalInfo","closeModalCb","showModalCb","useCallback","overviewColumns","disableFilters","combinedCols","dbActual","graphBase","dataFilter","modalData","isSameDate","isWithinFrame","isPrimer","isCountry","valDate","selectedDate","graphOverview","makeOverview","barData","dateDetails","now","primerMutations","details","makeBarData","names","intersection","itemList","findIntersection","findListIntersection","makeIntersection","combinedBase","combinedName","graphCombined","tableCombined","dialogClassName","aria-labelledby","isWithinTimeFrame","isPType","isMiss","isMiss3","isMatch","includes","misses","misses3","match_pct","rawData","database","list1","list2","intersect","item","addObject","obj1","obj2","initialSum","dbCount","dateWindowCum","dateCumCount","total","getCountriesTotal","prevVal","isCountryAsTotal","overviewData","nameDateMap","temp","date_temp","mutationAbs","mutation3Abs","today","virus_name","databaseTotal","App","basename","to","textDecoration","exact","path","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"2jBAAaA,G,OAAiB,SAACC,GAG7B,OAA0B,OAFb,kHACeC,KAAKD,KCKnC,IA0FeE,EA1FE,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,cAAeC,EAAwC,EAAxCA,iBAAkBC,EAAsB,EAAtBA,gBAkB3CC,EAAa,uCAAG,WAAOC,GAAP,eAAAC,EAAA,6DACZC,EAAQF,EAAEG,OAAOD,MADL,SAEZE,EAAWF,GAFC,2CAAH,sDAIbE,EAAU,uCAAG,WAAOF,GAAP,qBAAAD,EAAA,sDACXI,EAAW,GADA,cAEEH,GAFF,gEAENI,EAFM,aAGAD,EAHA,SAGsBE,EAAWD,GAHjC,mBAGXD,EAHW,KAGSG,OAHT,+JAKfX,EAAiBD,EAAcY,OAAd,MAAAZ,EAAa,YAAWS,KAL1B,gEAAH,sDAOVE,EAAU,uCAAG,WAAOD,GAAP,eAAAL,EAAA,+EAEaQ,EAASH,GAFtB,cAELI,EAFK,yBAGJA,GAHI,gCAKXC,QAAQC,KAAK,KAAEC,SALJ,yDAAH,sDASVJ,EAAW,SAACH,GACd,IAAMQ,EAAS,IAAIC,WAEnB,OADAJ,QAAQK,IAAIV,GACL,IAAIW,SAAQ,SAACC,EAASC,GACzBL,EAAOM,OAAS,SAAUC,GAClB7B,EAAe6B,EAAMlB,OAAOmB,SAC5BhB,EAAI,SAAc,EAClBA,EAAI,QAAce,EAAMlB,OAAOmB,OAC/BhB,EAAI,GAASA,EAAKiB,OAElBZ,QAAQK,IAAI,kCACZlB,EAAgB,8CAChBQ,EAAI,SAAc,GAEtBY,EAAQZ,IAEZQ,EAAOU,QAAU,WACbV,EAAOW,QACPN,EAAO,IAAIO,aAAa,iCAG5BZ,EAAOa,WAAWrB,EAAM,aAOhC,OACI,kBAACsB,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBAClB,2BAAOC,QAAQ,cAAcC,GAAG,qBAC5B,kBAACC,EAAA,EAAD,CAAWC,UAAU,iBAAiBC,WAnEjC,SAACnC,GACdA,EAAEoC,kBAmEUC,YAjEE,SAACrC,GACfA,EAAEoC,kBAiEUE,YA/DE,SAACtC,GACfA,EAAEoC,kBA+DUG,OA7DC,SAACvC,GACdA,EAAEoC,iBACF,IACMlC,EADOF,EAAEwC,aACItC,MACnBE,EAAWF,KA0DC,yBAAKgC,UAAU,gBACX,yBAAKA,UAAU,gBADnB,6CAIA,2BACIA,UAAU,aACVF,GAAG,cACHS,KAAK,OACLC,SAAU3C,EACV4C,UAAQ,Q,iBCLjBC,EA3EE,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,kBAAwB,EACAC,mBAAS,IADT,mBACjCC,EADiC,KACnBjD,EADmB,OAEEgD,mBAAS,IAFX,mBAEjCE,EAFiC,KAElBC,EAFkB,KAIlCC,EAAW,kGAEjBC,qBAAU,WACF3D,EAAewD,IACfrC,QAAQK,IAAI,iBAAkBgC,GAW9BH,EAAkB,CAAC,CACf,SAAW,EACX,QAAWG,EACX,GAAM,wBAGVrC,QAAQK,IAAI,QACZ6B,EAAkB,IAClB/C,EAAgB,6CAErB,CAACkD,EAAeH,IASnB,OACI,kBAACjB,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBAClB,kBAACsB,EAAA,EAAD,CAAKlB,UAAU,sBACX,kBAACmB,EAAA,EAAD,KACI,kBAACzB,EAAA,EAAK0B,MAAN,CAAYpB,UAAU,qBAAtB,mBAIJ,kBAACmB,EAAA,EAAD,CAAKnB,UAAU,gBACX,kBAACqB,EAAA,EAAD,CAAQC,QAAQ,YAAYC,KAAK,KAAKC,QAZlC,WAChBT,EAAiBC,KAWL,kBAGR,kBAACtB,EAAA,EAAK+B,QAAN,CACIC,GAAG,WACHC,YAAY,wBACZnB,SAtBS,SAAC1C,GAClB,IAAMP,EAAUO,EAAEG,OAAO2D,MACzBb,EAAiBxD,IAqBTgD,KAAK,OACLqB,MAAOd,EACPd,UAAU,gBACV6B,mBAAiB,2BAErB,kBAACnC,EAAA,EAAKoC,KAAN,CAAWhC,GAAG,yBAAyBiC,OAAK,GAA5C,uDACyD,6BACrD,gCACKf,EACIgB,MAAM,MACNC,KAAI,SAACL,EAAOM,GAAR,OAAc,uBAAGC,IAAKD,GAAIN,QAG3C,kBAAClC,EAAA,EAAK+B,QAAQW,SAAd,CAAuB7B,KAAK,WACvBM,K,wBC1CFwB,EA9BK,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,YAAahF,EAAc,EAAdA,QAgBtC,OACI,kBAACiF,EAAA,EAAD,CAAOF,KAAMA,EAAMG,OAAQF,GACvB,kBAACC,EAAA,EAAME,OAAP,CAAcC,aAAW,GACrB,kBAACH,EAAA,EAAMI,MAAP,8BAEJ,kBAACJ,EAAA,EAAMK,KAAP,KApBc,SAACtF,GAInB,IAHA,IACMuF,EAAe,YAAOvF,EAAQwF,SADtB,SAEV3D,EAAS,GACJ8C,EAAI,EAAGA,EAAIY,EAAgBE,OAAQd,IAEpC9C,EADM,IAAN8C,EACS9C,EAAOd,OAAOf,EAAQ0F,MAAM,EAAGH,EAAgB,GAAGI,QAIlD9D,EAAOd,OAAOf,EAAQ0F,MAAMH,EAAgBZ,EAAI,GAAGgB,MAAQ,EAAGJ,EAAgBZ,GAAGgB,QAGlG,OAAO9D,EAOU+D,CAAc5F,GAAS0E,KAAI,SAACL,EAAOsB,GAAR,OAAkB,uBAAGf,IAAKe,GAAQtB,OAC1E,kBAACY,EAAA,EAAMY,OAAP,KACI,kBAAC/B,EAAA,EAAD,CAAQC,QAAQ,UAAUE,QAASe,GAAnC,YC8BDc,EAlDK,SAAC,GAA8C,IAA5CjF,EAA2C,EAA3CA,KAAMyC,EAAqC,EAArCA,aAAclD,EAAuB,EAAvBA,iBAAuB,EAChCiD,mBAAS,IADuB,mBACvD0C,EADuD,KAC9CC,EAD8C,OAExB3C,oBAAS,GAFe,mBAEvD4C,EAFuD,KAE1CC,EAF0C,KAqBxDC,EAAa,SAACC,GAChBhG,GAAiB,SAAAiG,GAAS,OAAIA,EAAUC,QAAO,SAAAzF,GAAI,OAAIA,EAAKiB,OAASsE,SAOzE,OAAO,kBAAC5D,EAAA,EAAD,CAAWC,UAAU,mBACxB,kBAACkB,EAAA,EAAD,KACI,yBAAKlB,UAAU,mBACf,yBAAKA,UAAU,aArBN,SAAC2D,GACd,IAAMG,EAAWH,EAASI,UAAUJ,EAASK,YAAY,KAAO,EAAGL,EAASX,QAC5E,OAAIc,EAASd,SAAWW,EAASX,OACtB,QAGAc,EAeqBA,CAAS1F,EAAKiB,OAC1C,kBAAC8B,EAAA,EAAD,CAAK8C,GAAI,EAAGC,GAAI,GAAIlE,UAAU,aAC1B,yBAAKA,UAAS,oBAAe5B,EAAK+F,QAAU,aAAe,IAAM3C,QAASpD,EAAK+F,QAAU,kBAAMT,EAAWtF,EAAKiB,OAAQ,kBAV/G,SAACjB,GACjBmF,EAAWnF,EAAKb,SAChBkG,GAAe,GAQsHW,CAAYhG,KAAQA,EAAKiB,MACtJ,yBAAKW,UAAU,aAAf,IAhCK,SAACuB,GACd,GAAa,IAATA,EAAY,MAAO,UACvB,IAEMW,EAAImC,KAAKC,MAAMD,KAAKvF,IAAIyC,GAAQ8C,KAAKvF,IAFjC,OAGV,OAAOyF,YAAYhD,EAAO8C,KAAKG,IAHrB,KAG4BtC,IAAIuC,QAAQ,IAAM,IAF1C,CAAC,QAAS,KAAM,KAAM,KAAM,MAE0BvC,GA2B/BwC,CAAStG,EAAKmD,MAA3C,MAEJ,kBAACJ,EAAA,EAAD,CAAK8C,GAAI,EAAGC,GAAI,EAAGlE,UAAU,sBACxB5B,EAAK+F,QACA,yBAAKnE,UAAU,2BAAf,IAA2Ca,EAA3C,KACA,MAEV,kBAACM,EAAA,EAAD,CAAK8C,GAAI,EAAGC,GAAI,EAAGlE,UAAU,eACzB,kBAACqB,EAAA,EAAD,CAAQG,QAAS,kBAAMkC,EAAWtF,EAAKiB,OAAOiC,QAAQ,SAASC,KAAK,MAApE,YAGR,kBAAC,EAAD,CAAae,KAAMkB,EAAajB,YAAa,kBAAMkB,GAAe,IAAQlG,QAAS+F,M,kBCtC5E,EANI,SAACtF,GAClB,IAAM2G,EAAU,CAAEC,KAAM5G,GAExB,OAAO6G,IAAMC,KAAN,UATO,wBASP,kBAAuCH,ICuJjCI,G,OAlJI,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EACDpE,oBAAS,GADR,mBAC9BqE,EAD8B,KAClBC,EADkB,OAEKtE,mBAAS,IAFd,mBAE9BlD,EAF8B,KAEfC,EAFe,OAGOiD,mBAAS,IAHhB,mBAG9BuE,EAH8B,KAGdC,EAHc,OAIDxE,mBAAS,IAJR,mBAI9ByE,EAJ8B,KAIlBC,EAJkB,OAKO1E,mBAAS,IALhB,mBAK9B2E,EAL8B,KAKd5E,EALc,OAMWC,mBAAS,IANpB,mBAM9B4E,EAN8B,KAMZC,EANY,OAOG7E,mBAAS,IAPZ,mBAO9BC,EAP8B,KAOhBjD,EAPgB,OAQbgD,oBAAS,GARI,mBAQ9B8E,EAR8B,KAQxBC,EARwB,OASH/E,oBAAS,GATN,mBAS9BgF,EAT8B,KASnBC,EATmB,KAU/BC,GAAUC,cAEVC,GAAS,kBAEf/E,qBAAU,WACR,IAAMgF,EAAgBvI,EAAcwI,QAAO,SAAClI,EAAOmI,GAEjD,OADcnI,EAAMoI,MAAK,SAAChI,GAAD,OAAUA,EAAKiB,OAAS8G,EAAQ9G,QAEhDrB,EAEAA,EAAMM,OAAO6H,KAErB,IACHf,EAAkB,YAAIa,MACrB,CAACvI,IAEJuD,qBAAU,WACR,IAAMgF,EAAgBd,EAAee,QAAO,SAAClI,EAAOmI,GAClD,OAAOA,EAAQhC,QAAUnG,EAAQA,EAAMM,OAAO6H,KAC7C,IACHb,EAAcW,KACb,CAACd,IAEJlE,qBAAU,WACR,GACGoE,EAAWrC,SAAWmC,EAAenC,QACd,IAAtBqC,EAAWrC,QACe,IAA1BuC,EAAevC,QACU,IAA1BuC,EAAevC,QAAsC,IAAtBqC,EAAWrC,OAI3C,OAFAvE,QAAQK,IAAIuG,GACZzH,EAAgB,IACTsH,GAAc,GACc,IAA1BK,EAAevC,QAAsC,IAAtBqC,EAAWrC,SACnDkC,GAAc,GACdtH,EACE,uFAGJsH,GAAc,KACb,CAACG,EAAYF,EAAgBI,IA0BhC,OACE,6BACE,kBAACc,EAAA,EAAD,CAAUvG,GAAIkG,GAAQM,GAAIZ,GACxB,yBAAK1F,UAAU,sBACb,kBAACD,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,CAAM6G,YAAU,GACd,kBAAC,EAAD,CAAU5F,kBAAmBA,IAC7B,uBAAGX,UAAU,sBAAb,MACA,kBAAC,EAAD,CACEtC,cAAeA,EACfC,iBAAkBA,EAClBC,gBAAiB6H,KAGrB,kBAAC1F,EAAA,EAAD,CAAWC,UAAU,0BAClBmF,EAAelD,KAAI,SAAC7D,EAAM8E,GAAP,OAClB,kBAAC,EAAD,CACE9E,KAAMA,EACNyC,aAAc2E,EACd7H,iBAAkBA,EAClBwE,IAAKe,WAOjB,kBAACnD,EAAA,EAAD,KACE,kBAACmB,EAAA,EAAD,CAAKlB,UAAU,wBAAwBa,GACtCoE,EACC,kBAACuB,EAAA,EAAD,CAAMF,GAAIZ,GACR,kBAACrE,EAAA,EAAD,CACEvB,GAAIkG,GACJS,gBAAeT,GACfU,gBAAehB,EACflE,QApDO,WACjB/C,QAAQK,IAAIuG,EAAYE,GACxBI,GAASD,GACTG,GAAa,GACbc,YAAW,WACTC,EACoC,IAAtBvB,EAAWrC,OAAeuC,EAAiBF,GACtDwB,MAAK,SAACC,GAbX5B,GAAc,GACdvH,EAAiB,IACjBgD,EAAkB,IAClB8E,EAAoB,IACpB7H,EAAgB,IAWViI,GAAa,GACbpH,QAAQK,IAAI,cAAegI,GAC3B9B,EAAW+B,KAAKC,UAAUF,EAASlC,OACnCkB,GAAQmB,KAAK,wBAEdC,OAAM,SAACpJ,GAAD,OAAOW,QAAQK,IAAIhB,QAC3B,MAsCOqJ,SAAUvB,GAETA,EACC,kBAACwB,EAAA,EAAD,CACE1F,GAAG,OACH1B,UAAU,SACVqH,UAAU,SACV9F,KAAK,KACL+F,KAAK,SACLC,cAAY,SAEZ,KACH3B,EAAY,aAAe,WAG9B,KACHA,EACC,kBAACY,EAAA,EAAD,CAAMF,IAAKZ,GACT,kBAAC3F,EAAA,EAAD,CAAWC,UAAU,qBACnB,kBAACoH,EAAA,EAAD,CACEtH,GAAIkG,GACJtE,GAAG,OACH2F,UAAU,SACVC,KAAK,SACLhG,QAAQ,WAIZ,S,sEC1JNkG,EAAqBC,cAkCZC,MAhCf,YAOI,IANFlH,EAMC,EANDA,SACAmH,EAKC,EALDA,QACAhG,EAIC,EAJDA,YAIC,IAFDiE,iBAEC,aADDgC,oBACC,MADc,GACd,EASD,OACE,kBAAC,IAAD,CACEC,mBAAmB,EACnBC,WAAYN,EACZI,aAAcA,EAEdG,SAAO,EACPC,cAAY,EACZC,aAAW,EACXrC,UAAWA,EACXjE,YAAaA,EACbnB,SAAUA,EACVmH,QAASA,KC2CAO,MAzEf,YAQI,IAPFtD,EAOC,EAPDA,KACA9E,EAMC,EANDA,GACA8B,EAKC,EALDA,MACAuG,EAIC,EAJDA,OACAC,EAGC,EAHDA,OACAC,EAEC,EAFDA,KACAC,EACC,EADDA,UACC,EACkBC,IAAMC,SAAQ,WAC/B,IACMC,EADgBC,OAAOC,OAAO/D,GACDsB,QAAO,SAAC0C,EAAUC,GAEnD,OADAD,EAAS3B,KAAT,MAAA2B,EAAQ,YAASC,IACVD,IACN,IACCE,EAAML,EAAazF,OAASyF,EAAa,GAAG3I,GAAM,EAClDiJ,EAAMN,EAAazF,OAASyF,EAAa,GAAG3I,GAAM,EAKtD,OAJA2I,EAAaO,SAAQ,SAACC,GACpBH,EAAMzE,KAAKyE,IAAIG,EAAInJ,GAAKgJ,GACxBC,EAAM1E,KAAK0E,IAAIE,EAAInJ,GAAKiJ,MAEnB,CAACD,EAAKC,KACZ,CAACnE,EAAM9E,IAdT,mBACMgJ,EADN,KACWC,EADX,KAgBKG,EAAiB,SAACC,EAAKC,GAEvBd,EADJc,EACc,eAACC,EAAD,uDAAO,GAAP,MAAc,CAACF,EAAKE,EAAI,KACxB,eAACA,EAAD,uDAAO,GAAP,MAAc,CAACA,EAAI,GAAIF,MAGvC,OACE,kBAACzJ,EAAA,EAAD,CAAMM,UAAU,UACd,kBAACN,EAAA,EAAKwB,IAAN,KACE,kBAACC,EAAA,EAAD,CAAKnB,UAAU,UAAUsJ,GAAI,GAAIpF,GAAI,EAAGD,GAAI,IAC1C,kBAACvE,EAAA,EAAK+B,QAAN,CACEC,GAAG,QACHE,MAAOA,EAAM,IAAM,GACnBrB,KAAK,SACLC,SAAU,SAAC1C,GACT,IAAMqL,EAAMd,EAAKkB,UACbC,SAAS1L,EAAEG,OAAO2D,MAAO,KAAO,EAChC2C,WAAWzG,EAAEG,OAAO2D,OAAS,GACjCsH,EAAeC,GAAK,IAEtBxH,YAAW,eAAUmH,EAAV,KACXvH,KAAK,KACLuH,IAAKX,EACLY,IAAKX,EACLC,KAAMA,KAGV,kBAAClH,EAAA,EAAD,CAAKnB,UAAU,UAAUsJ,GAAI,GAAIpF,GAAI,EAAGD,GAAI,IAC1C,kBAACvE,EAAA,EAAK+B,QAAN,CACEG,MAAOA,EAAM,IAAM,GACnBrB,KAAK,SACLC,SAAU,SAAC1C,GACT,IAAMqL,EAAMd,EAAKkB,UACbC,SAAS1L,EAAEG,OAAO2D,MAAO,KAAO,EAChC2C,WAAWzG,EAAEG,OAAO2D,OAAS,GACjCsH,EAAeC,GAAK,IAEtBxH,YAAW,eAAUoH,EAAV,KACXxH,KAAK,KACLuH,IAAKX,EACLY,IAAKX,EACLC,KAAMA,QCjCHoB,MA/Bf,YAQG,EAPDC,MAOE,IANFC,EAMC,EANDA,QACAC,EAKC,EALDA,WACAC,EAIC,EAJDA,UAIC,IAHDvI,eAGC,MAHS,QAGT,MAFDwI,cAEC,aADDvI,YACC,MADM,KACN,IACuBgH,IAAM3H,SAASkJ,GADtC,mBACMxH,EADN,KACYyH,EADZ,KAED,OACE,kBAAC5I,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,CACEG,QAAS,WACPuI,GAASzH,IAEXtC,UAAU,uBACVyG,gBAAekD,EACfjD,gBAAepE,EACfhB,QAASA,EACTC,KAAMA,GAELe,EAAO,kBAAC,IAAD,MAAsB,kBAAC,IAAD,MACzB,UAAMsH,IAEb,kBAACvD,EAAA,EAAD,CAAUC,GAAIhE,GACZ,6BAAMuH,MChBRG,G,OAEF,qFAFEA,EAIF,yHAJEA,EAMF,wFANEA,EAOI,gCAPJA,EAQG,6CARHA,EAUF,gHAVEA,EAYF,yIAZEA,EAagB,6CAbhBA,EAcK,0CAdLA,EAgBF,qHAhBEA,GAkBF,uEAlBEA,GAoBF,8FApBEA,GAqBE,iCAGFC,GAAS,SAAC,GAQT,IAPLnK,EAOI,EAPJA,GACAE,EAMI,EANJA,UACAkK,EAKI,EALJA,QACA1J,EAII,EAJJA,SAII,IAHJ2J,oBAGI,MAHW,GAGX,MAFJC,oBAEI,MAFW,GAEX,MADJjD,gBACI,SACJ,OACE,2BACErH,GAAIA,EACJE,UAAS,iBAAYA,GACrByG,gBAAe0D,EACfzD,gBAAe0D,GAEf,2BACE7J,KAAK,WACL2J,QAASA,EACT1J,SAAUA,EACV2G,SAAUA,IAEZ,0BAAMnH,UAAU,mBAKhBqK,GAAiB,SAAC,GAQjB,IAPLC,EAOI,EAPJA,SACAC,EAMI,EANJA,KACAC,EAKI,EALJA,QACAC,EAII,EAJJA,MACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,MACAC,EACI,EADJA,SAEA,OACE,kBAAC1J,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKnB,UAAU,gBAAgB6K,GAAI,GAAI5G,GAAI,GACzC,kBAAC6G,EAAA,EAAD,CAAYvJ,KAAK,KAAKvB,UAAU,IAC9B,kBAAC8K,EAAA,EAAWC,QAAZ,KACE,kBAACD,EAAA,EAAWhJ,KAAZ,oBAEE,kBAAC,IAAD,CAAyB9B,UAAU,OAAOgL,WAAUhB,MAGxD,kBAAC,EAAD,CACEpF,KAAM0F,EACNnC,OAAQ,EACRC,OAAQ,IACRC,KAAM,EACNzG,MAAO2I,EACPjC,UAAWkC,EACX1K,GAAG,aAKT,kBAACqB,EAAA,EAAD,CAAKnB,UAAU,uBAAuB6K,GAAI,GAAI5G,GAAI,GAChD,kBAAC6G,EAAA,EAAD,CAAYvJ,KAAK,MACf,kBAACuJ,EAAA,EAAWC,QAAZ,KACE,kBAACD,EAAA,EAAWhJ,KAAZ,wBAEE,kBAAC,IAAD,CAAyB9B,UAAU,OAAOgL,WAAUhB,MAGxD,kBAAC,EAAD,CACEpF,KAAM0F,EACNnC,OAAQ,EACRC,OAAQ,IACRC,KAAM,EACNzG,MAAO6I,EACPnC,UAAWoC,EACX5K,GAAG,cAIT,kBAACqB,EAAA,EAAD,CAAKnB,UAAU,uBAAuB6K,GAAI,GAAI5G,GAAI,GAChD,kBAAC6G,EAAA,EAAD,CAAYvJ,KAAK,MACf,kBAACuJ,EAAA,EAAWC,QAAZ,KACE,kBAACD,EAAA,EAAWhJ,KAAZ,kBAEE,kBAAC,IAAD,CAAyB9B,UAAU,OAAOgL,WAAUhB,MAGxD,kBAAC,EAAD,CACEpF,KAAM0F,EACNnC,OAAQ,EACRC,OAAQ,IACRC,KAAM,IACNzG,MAAO+I,EACPrC,UAAWsC,EACX9K,GAAG,kBAQTmL,GAAmB,SAAC,GASnB,IARLC,EAQI,EARJA,MACAC,EAOI,EAPJA,SACAC,EAMI,EANJA,sBACAC,EAKI,EALJA,yBACAC,EAII,EAJJA,aACAC,EAGI,EAHJA,gBACAC,EAEI,EAFJA,YACAC,EACI,EADJA,eAEA,OACE,kBAACvK,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKmI,GAAI,GAAIrF,GAAI,GACf,kBAAC6G,EAAA,EAAD,CAAY9K,UAAU,OAAOuB,KAAK,MAChC,kBAACuJ,EAAA,EAAWC,QAAZ,KACE,kBAACD,EAAA,EAAWhJ,KAAZ,cAEF,kBAAC,GAAD,CACEvB,KAAK,WACL2J,QAASgB,EACT1K,SAAU,kBAAM2K,GAAUD,IAC1BzE,gBAAc,WACdC,gBAAewE,MAIrB,kBAAC/J,EAAA,EAAD,CAAKmI,GAAI,GAAIrF,GAAI,GACf,kBAAC6G,EAAA,EAAD,CAAY9K,UAAU,OAAOuB,KAAK,MAChC,kBAACuJ,EAAA,EAAWC,QAAZ,KACE,kBAACD,EAAA,EAAWhJ,KAAZ,qBAEE,kBAAC,IAAD,CACE9B,UAAU,OACVgL,WAAUhB,MAIhB,kBAAC,GAAD,CACEzJ,KAAK,WACL2J,QAASsB,EACThL,SAAU,kBAAMiL,GAAgBD,IAChCrE,UAAW+D,MAIjB,kBAAC/J,EAAA,EAAD,CAAKmI,GAAI,GAAIrF,GAAI,GACf,kBAAC6G,EAAA,EAAD,CAAY9K,UAAU,OAAOuB,KAAK,MAChC,kBAACuJ,EAAA,EAAWC,QAAZ,KACE,kBAACD,EAAA,EAAWhJ,KAAZ,+BAEE,kBAAC,IAAD,CACE9B,UAAU,OACVgL,WAAUhB,MAIhB,kBAACtK,EAAA,EAAK+B,QAAN,CACEG,MAAOwJ,EAAsBM,WAC7BvE,UAAW+D,EACXxJ,GAAG,QACHnB,KAAK,SACLuI,IAAK,EACLC,IAAK,IACLV,KAAM,EACN7H,SAAU,SAAC1C,GACT,IAAMqL,EAAMrL,EAAEG,OAAO2D,MACrByJ,EAAyB7B,SAASL,EAAK,KAAO,QAKtD,kBAAChI,EAAA,EAAD,CAAKmI,GAAI,GAAIrF,GAAI,GACf,kBAAC6G,EAAA,EAAD,CAAY9K,UAAU,OAAOuB,KAAK,MAChC,kBAACuJ,EAAA,EAAWC,QAAZ,KACE,kBAACD,EAAA,EAAWhJ,KAAZ,sBAEE,kBAAC,IAAD,CACE9B,UAAU,OACVgL,WAAUhB,MAIhB,kBAACtK,EAAA,EAAK+B,QAAN,CACEG,MAAO0J,EAAaI,WACpBvE,UAAW+D,EACXxJ,GAAG,QACHnB,KAAK,SACLuI,IAAK,EACLC,IAAK,GACLV,KAAM,EACN7H,SAAU,SAAC1C,GACT,IAAMqL,EAAMrL,EAAEG,OAAO2D,MACrB2J,EAAgB/B,SAASL,EAAK,KAAO,UAS7CwC,GAAoB,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,eAAgBC,EAAwB,EAAxBA,kBAC3C,OACE,kBAACf,EAAA,EAAD,CAAY9K,UAAU,OAAOuB,KAAK,MAChC,kBAACuJ,EAAA,EAAWC,QAAZ,KACE,kBAACD,EAAA,EAAWhJ,KAAZ,CAAiBjC,QAAQ,WAAzB,8BAEE,kBAAC,IAAD,CACEG,UAAU,OACVgL,WAAUhB,MAIhB,kBAAC,GAAD,CACElK,GAAG,UACHE,UAAU,cACVkK,QAAS0B,EACTpL,SAAU,SAAC1C,GACT+N,EAAkB/N,EAAEG,OAAOiM,cAM/B4B,GAAkB,SAAC,GAmBlB,IAlBLZ,EAkBI,EAlBJA,MACAC,EAiBI,EAjBJA,SACAC,EAgBI,EAhBJA,sBACAC,EAeI,EAfJA,yBACAC,EAcI,EAdJA,aACAC,EAaI,EAbJA,gBACAC,EAYI,EAZJA,YACAC,EAWI,EAXJA,eACAG,EAUI,EAVJA,eACAC,EASI,EATJA,kBACAE,EAQI,EARJA,kBACAC,EAOI,EAPJA,eACAC,EAMI,EANJA,UACAC,EAKI,EALJA,SACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,OACAC,EAEI,EAFJA,UACA/K,EACI,EADJA,QAOA,OACE,kBAACH,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK0J,GAAI,GAAI5G,GAAI,EAAGjE,UAAU,WAC5B,kBAAC8K,EAAA,EAAD,CAAY9K,UAAU,QAAQuB,KAAK,MACjC,kBAACuJ,EAAA,EAAWC,QAAZ,KACE,kBAACD,EAAA,EAAWhJ,KAAZ,kBAEE,kBAAC,IAAD,CACE9B,UAAU,OACVgL,WAAUhB,OAIhB,kBAAC,IAAD,CACEsC,QAAS,IAAIC,KAAKN,EAAUA,EAAUjJ,OAAS,IAC/CwJ,QAAS,IAAID,KAAKN,EAAU,IAC5BQ,aAAc,kBAAC,IAAD,MACdjM,SAvBO,SAAC1C,GAClBW,QAAQK,IAAI,SAAUhB,GACtBiO,GAAmBjO,GAAK,IAAImE,KAAI,SAACL,GAAD,OAAW,IAAI2K,KAAK3K,OAAW,KAsBrDA,MAAiC,IAA1BoK,EAAehJ,OAAe,KAAOgJ,MAKlD,kBAAC7K,EAAA,EAAD,CAAK0J,GAAI,GAAI5G,GAAI,EAAGjE,UAAU,mBAC5B,kBAAC8K,EAAA,EAAD,CAAY9K,UAAU,OAAOuB,KAAK,MAChC,kBAACuJ,EAAA,EAAWC,QAAZ,KACE,kBAACD,EAAA,EAAWhJ,KAAZ,CAAiBjC,QAAQ,cAAzB,aAEE,kBAAC,IAAD,CACEG,UAAU,OACVgL,WAAUhB,OAIhB,kBAAC,GAAD,CACElK,GAAG,aACHE,UAAU,iBACVkK,QAASkC,EACT5L,SAAU,SAAC1C,GACTuO,EAAUvO,EAAEG,OAAOiM,cAM3B,kBAAC/I,EAAA,EAAD,CAAK0J,GAAI,GAAI5G,GAAI,EAAGjE,UAAU,WAC5B,kBAAC8K,EAAA,EAAD,CAAY9K,UAAU,QAAQuB,KAAK,MACjC,kBAACuJ,EAAA,EAAWC,QAAZ,KACE,kBAACD,EAAA,EAAWhJ,KAAZ,iBAEE,kBAAC,IAAD,CACE9B,UAAU,OACVgL,WAAUhB,OAIhB,kBAACtK,EAAA,EAAK+B,QAAN,CACEG,MAAOsK,EAASR,WAChBvE,SAAUiF,EACV1K,GAAG,QACHnB,KAAK,SACLuI,IAAK,EACLC,IAAK,IACLV,KAAM,EACN7H,SAAU,SAAC1C,GACT,IAAMqL,EAAMrL,EAAEG,OAAO2D,MACrBuK,EAAY3C,SAASL,EAAK,KAAO,SAM3C,kBAAC,EAAD,CACE7H,QAASA,EACTsI,WAAY,oBACZD,QAAS,oBACTE,UACE,kBAAC,GAAD,CACEqB,MAAOA,EACPC,SAAUA,EACVC,sBAAuBA,EACvBC,yBAA0BA,EAC1BC,aAAcA,EACdC,gBAAiBA,EACjBC,YAAaA,EACbC,eAAgBA,MAItB,kBAAC,EAAD,CACEnK,QAASA,EACTsI,WAAY,sBACZD,QAAS,sBACTE,UACE,kBAAC,GAAD,CACE+B,eAAgBA,EAChBC,kBAAmBA,QAQzBa,GAAiB,SAAC,GAyBjB,IAxBLpC,EAwBI,EAxBJA,SACA2B,EAuBI,EAvBJA,UACAD,EAsBI,EAtBJA,eACAD,EAqBI,EArBJA,kBACAG,EAoBI,EApBJA,SACAC,EAmBI,EAnBJA,YACAC,EAkBI,EAlBJA,OACAC,EAiBI,EAjBJA,UACA9B,EAgBI,EAhBJA,KACAC,EAeI,EAfJA,QACAC,EAcI,EAdJA,MACAC,EAaI,EAbJA,SACAC,EAYI,EAZJA,MACAC,EAWI,EAXJA,SACAgB,EAUI,EAVJA,eACAC,EASI,EATJA,kBACAX,EAQI,EARJA,MACAC,EAOI,EAPJA,SACAC,EAMI,EANJA,sBACAC,EAKI,EALJA,yBACAC,EAII,EAJJA,aACAC,EAGI,EAHJA,gBACAC,EAEI,EAFJA,YACAC,EACI,EADJA,eAGA,OACE,kBAAC,EAAD,CACEnK,QAHY,QAIZsI,WAAY,gBACZD,QAAQ,mBACRE,UACE,oCACE,kBAAC3I,EAAA,EAAD,KACE,kBAAC,EAAD,CACEI,QAVI,QAWJsI,WAAY,yBACZD,QAAS,mBACTE,UACE,kBAAC,GAAD,CACES,SAAUA,EACVC,KAAMA,EACNC,QAASA,EACTC,MAAOA,EACPC,SAAUA,EACVC,MAAOA,EACPC,SAAUA,OAKlB,kBAAC1J,EAAA,EAAD,KACE,kBAAC,EAAD,CACEI,QA5BI,QA6BJsI,WAAY,yBACZD,QAAS,oBACTE,UACE,kBAAC,GAAD,CACEvI,QAjCA,QAkCAyK,kBAAmBA,EACnBC,eAAgBA,EAChBC,UAAWA,EACXC,SAAUA,EACVC,YAAaA,EACbC,OAAQA,EACRC,UAAWA,EACXnB,MAAOA,EACPC,SAAUA,EACVC,sBAAuBA,EACvBC,yBAA0BA,EAC1BC,aAAcA,EACdC,gBAAiBA,EACjBC,YAAaA,EACbC,eAAgBA,EAChBG,eAAgBA,EAChBC,kBAAmBA,WAWrC,SAASc,GAAT,GAQI,IAGoBC,EAVtBtC,EAOC,EAPDA,SACAuC,EAMC,EANDA,gBACAC,EAKC,EALDA,aACAC,EAIC,EAJDA,aACAC,EAGC,EAHDA,QACAC,EAEC,EAFDA,WACAC,EACC,EADDA,SAEMpH,EAAUC,cAiBhB,SAASoH,EAAgBC,GACvB,OAAO,SAACC,GACNR,GAAgB,GAChB,IAAMS,EAAWD,GAAa,GAC9B,GAAwB,IAApBC,EAAStK,OACXoK,EAAaE,OACR,CACL,IAAMD,EAAYC,EAASrL,KAAI,SAACkH,GAC9B,OAAIA,EAAIvH,QAAUuH,EAAIoE,MAAcpE,EAAIvH,MACjCuH,KAETiE,EAAaC,KAInB,OACE,kBAAC,EAAD,CACEvD,QAAQ,EACRxI,QAAQ,QACRsI,WAAY,gBACZD,QAAQ,iBACRE,UACE,oCACE,kBAAC3I,EAAA,EAAD,CAAKlB,UAAU,QACb,kBAACmB,EAAA,EAAD,CAAK0J,GAAI,GAAI5G,GAAI,EAAGjE,UAAU,QAC5B,kBAACkB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKmI,GAAI,GAAIrF,GAAI,EAAGjE,UAAU,gBAC5B,kBAAC8K,EAAA,EAAWhJ,KAAZ,eAEE,kBAAC,IAAD,CACE9B,UAAU,OACVgL,WAAUhB,MAIhB,kBAAC7I,EAAA,EAAD,CAAKmI,GAAI,GAAIrF,GAAI,EAAGjE,UAAU,WAC5B,kBAAC,EAAD,CACE4B,MAAOoL,EACPxM,UArDIoM,EAqDmBK,EApDhC,SAACI,GACNR,GAAgB,GAChB,IAAMS,EAAWD,GAAa,GAC9B,GAAwB,IAApBC,EAAStK,OACX4J,EAAmBU,GACnBxH,EAAQmB,KAAR,yBACK,CACL,IAAMoG,EAAYC,EAASrL,KAAI,SAACkH,GAAD,OAASA,EAAIvH,SAC5CgL,EAAmBS,GACnBvH,EAAQmB,KAAR,mBAAyBoG,EAAUG,KAAK,UA4C5B7F,QAASY,IAAMC,SAAQ,WACrB,OAAOE,OAAO+E,KAAKnD,GAAUrI,KAAI,SAACkH,GAChC,MAAO,CAAEoE,MAAOpE,EAAKvH,MAAOuH,QAE7B,CAACmB,IACJ3I,YAAa,4BACbiE,UAAWkH,OAKnB,kBAAC3L,EAAA,EAAD,CAAK0J,GAAI,GAAI5G,GAAI,EAAGjE,UAAU,QAC5B,kBAACkB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKmI,GAAI,GAAIrF,GAAI,EAAGjE,UAAU,gBAC5B,kBAAC8K,EAAA,EAAWhJ,KAAZ,mBAEE,kBAAC,IAAD,CACE9B,UAAU,OACVgL,WAAUhB,MAIhB,kBAAC7I,EAAA,EAAD,CAAKmI,GAAI,GAAIrF,GAAI,EAAGjE,UAAU,WAC5B,kBAAC,EAAD,CACEQ,SAAU2M,EAAgBD,GAC1BvF,QAASY,IAAMC,SACb,iBAAM,CACJ,CAAE+E,MAAO,MAAO3L,MAAO,OACvB,CAAE2L,MAAO,MAAO3L,MAAO,OACvB,CAAE2L,MAAO,MAAO3L,MAAO,UAEzB,IAEFD,YAAa,eACbiE,UAAWkH,QAMrB,kBAAC5L,EAAA,EAAD,CAAKlB,UAAU,QACb,kBAACmB,EAAA,EAAD,CAAKmI,GAAI,GAAIrF,GAAI,EAAGjE,UAAU,gBAC5B,kBAAC8K,EAAA,EAAWhJ,KAAZ,gBAEE,kBAAC,IAAD,CACE9B,UAAU,OACVgL,WAAUhB,MAIhB,kBAAC7I,EAAA,EAAD,CAAKmI,GAAI,GAAIrF,GAAI,GAAIjE,UAAU,WAC7B,kBAAC,EAAD,CACEA,UAAU,iBACVQ,SAAU2M,EAAgBJ,GAC1BpF,QAASY,IAAMC,SAAQ,WACrB,IAAMkF,EAAS,IAAIC,IAmBnB,OAlBgBjF,OAAOC,OAAO2B,GAAUpE,QACtC,SAACyB,EAASkB,GACR,IAAM+E,EAAY/E,EAAQ3C,QAAO,SAAC0H,EAAWC,GAC3C,OAAIH,EAAOI,IAAID,EAAME,gBAGrBL,EAAOM,IAAIH,EAAME,cACjBH,EAAU3G,KAAK,CACbsG,MAAOM,EAAME,aACbnM,MAAOiM,EAAMI,UALNL,IAQR,IAEH,OADAjG,EAAQV,KAAR,MAAAU,EAAO,YAASiG,IACTjG,IAET,MAGD,CAAC2C,IACJ3I,YAAa,mBACbiE,UAAWkH,SAU3B,IA+EeoB,GA/EK,SAAC,GA+Bd,IA9BL5D,EA8BI,EA9BJA,SACA2B,EA6BI,EA7BJA,UACAD,EA4BI,EA5BJA,eACAD,EA2BI,EA3BJA,kBACAG,EA0BI,EA1BJA,SACAC,EAyBI,EAzBJA,YACAC,EAwBI,EAxBJA,OACAC,EAuBI,EAvBJA,UACA9B,EAsBI,EAtBJA,KACAC,EAqBI,EArBJA,QACAC,EAoBI,EApBJA,MACAC,EAmBI,EAnBJA,SACAC,EAkBI,EAlBJA,MACAC,EAiBI,EAjBJA,SACAgB,EAgBI,EAhBJA,eACAC,EAeI,EAfJA,kBACAkB,EAcI,EAdJA,aACAC,EAaI,EAbJA,QACAC,EAYI,EAZJA,WACAC,EAWI,EAXJA,SACAJ,EAUI,EAVJA,aACAD,EASI,EATJA,gBACA3B,EAQI,EARJA,MACAC,EAOI,EAPJA,SACAC,EAMI,EANJA,sBACAC,EAKI,EALJA,yBACAC,EAII,EAJJA,aACAC,EAGI,EAHJA,gBACAC,EAEI,EAFJA,YACAC,EACI,EADJA,eAEA,OACE,6BACE,kBAACvK,EAAA,EAAD,KACE,kBAACyL,GAAD,CACErC,SAAUA,EACVwC,aAAcA,EACdD,gBAAiBA,EACjBE,aAAcA,EACdC,QAASA,EACTC,WAAYA,EACZC,SAAUA,KAGd,kBAAChM,EAAA,EAAD,KACE,kBAAC,GAAD,CACEoJ,SAAUA,EACV2B,UAAWA,EACXD,eAAgBA,EAChBD,kBAAmBA,EACnBG,SAAUA,EACVC,YAAaA,EACbC,OAAQA,EACRC,UAAWA,EACX9B,KAAMA,EACNC,QAASA,EACTC,MAAOA,EACPC,SAAUA,EACVC,MAAOA,EACPC,SAAUA,EACVgB,eAAgBA,EAChBC,kBAAmBA,EACnBqB,SAAUA,EACVhC,MAAOA,EACPC,SAAUA,EACVC,sBAAuBA,EACvBC,yBAA0BA,EAC1BC,aAAcA,EACdC,gBAAiBA,EACjBC,YAAaA,EACbC,eAAgBA,KAGpB,kBAAC,IAAD,CAAc0C,MAAM,M,8CC1rBnB,SAASC,GAAT,GAKH,IAJFC,EAIC,EAJDA,sBACAC,EAGC,EAHDA,aACAC,EAEC,EAFDA,gBAEC,IADDC,gBACC,SACKC,EAAQJ,EAAsBrL,OADnC,EAEyBuF,IAAM3H,SAAS0N,GAFxC,mBAEM1M,EAFN,KAEa8M,EAFb,KAGKlO,EAAWmO,6BAAiB,SAAC/M,GACjC2M,EAAgB3M,QAASgN,KACxB,KAEH,OACE,yBAAK5O,UAAU,kBACb,kBAACN,EAAA,EAAKwB,IAAN,KACE,kBAACxB,EAAA,EAAK0B,MAAN,CAAYyN,QAAM,EAACvF,GAAI,GAAIrF,GAAI,GAA/B,kBAGA,kBAAC9C,EAAA,EAAD,CAAKmI,GAAI,GAAIrF,GAAI,IACf,kBAACvE,EAAA,EAAK+B,QAAN,CACElB,KAAK,OACLqB,MAAOA,GAAS,GAChBpB,SAAU,SAAC1C,GACT4Q,EAAS5Q,EAAEG,OAAO2D,OAClBpB,EAAS1C,EAAEG,OAAO2D,QAEpBD,YAAW,qBAAgB8M,EAAhB,gBAIhBD,EACC,kBAAC9O,EAAA,EAAKwB,IAAN,KACE,kBAACxB,EAAA,EAAK0B,MAAN,CAAYyN,QAAM,EAACvF,GAAI,EAAGrF,GAAI,IAC9B,kBAAC9C,EAAA,EAAD,CAAKmI,GAAI,GAAIrF,GAAI,IACf,kBAACvE,EAAA,EAAKoC,KAAN,CAAW9B,UAAU,cAArB,wFAMF,MCqBV,SAAS8O,GAAT,GAA6D,IAArCpF,EAAoC,EAApCA,MAAO9E,EAA6B,EAA7BA,KAAMmK,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,WACtCC,EAAcF,EAAQ9M,KAAI,SAACiN,GAC/B,MAAO,CAAE3B,MAAO2B,EAAOxM,OAAQP,IAAK+M,EAAOC,aAExCH,GACHC,EAAYhI,KAAZ,MAAAgI,EACK,CACD,CACE1B,MAAO,SACPpL,IAAK,UAEP,CACEoL,MAAO,iCACPpL,IAAK,mBAEP,CACEoL,MAAO,kCACPpL,IAAK,qBAMb,IAAMiN,EAAc7G,IAAMC,SACxB,iBAAO,CAGL6G,KAAM,SAACC,EAAMxP,EAAIyP,GACf,OAAOD,EAAKzL,QAAO,SAACoF,GAClB,IAAMuG,EAAWvG,EAAIN,OAAO7I,GAC5B,YAAoB8O,IAAbY,GACHC,OAAOD,GACJE,cACAC,WAAWF,OAAOF,GAAaG,sBAK5C,IAGIE,EAAgBrH,IAAMC,SAC1B,iBAAO,CACLqH,SAAU,GACVC,MAAO,IACPC,SAAU,OAEZ,IA/CwD,EA2EtDC,oBACF,CACEjB,UACAnK,OACAqL,aAAc,CAAEC,UAAW,GAC3BN,gBACAR,eAGFe,mBACAC,aACAC,iBACAC,iBACAC,qBArCAC,EAnDwD,EAmDxDA,cACAC,EApDwD,EAoDxDA,kBACAC,EArDwD,EAqDxDA,aACAC,EAtDwD,EAsDxDA,WACAC,EAvDwD,EAuDxDA,KAGAC,EA1DwD,EA0DxDA,gBACAC,EA3DwD,EA2DxDA,YACAC,EA5DwD,EA4DxDA,YACAC,EA7DwD,EA6DxDA,UACAC,EA9DwD,EA8DxDA,SACAC,EA/DwD,EA+DxDA,SACAC,EAhEwD,EAgExDA,aACAC,EAjEwD,EAiExDA,YAjEwD,IAkExDC,MAASnB,EAlE+C,EAkE/CA,UAAWoB,EAlEoC,EAkEpCA,SAGpBD,EArEwD,EAqExDA,MAEAhD,EAvEwD,EAuExDA,sBACAE,EAxEwD,EAwExDA,gBAmBF,OACE,6BACE,wBAAIvO,UAAU,eAAe0J,GAC7B,kBAAC0E,GAAD,CACEC,sBAAuBA,EACvBC,aAAc+C,EAAM/C,aACpBC,gBAAiBA,IAMnB,kBAAC,KAAD,iBACMiC,IADN,CAEElP,QAAQ,QAERiQ,YAAU,EACVC,SAAO,EACPC,UAAQ,EACRC,OAAK,IAEL,2BAAO1R,UAAU,SACd0Q,EAAazO,KAAI,SAAC0P,GAAD,OAChB,uBAAQA,EAAYC,sBACjBD,EAAYE,QAAQ5P,KAAI,SAAC4M,GACxB,OACE,wCAAQA,EAAOiD,iBAAf,CAAiC9R,UAAU,iBACxC6O,EAAOkD,OAAO,UACf,yBAAUlD,EAAOmD,uBACdnD,EAAOoD,SACNpD,EAAOqD,aACL,kBAAC,KAAD,CAAYlS,UAAU,SAEtB,kBAAC,KAAD,CAAUA,UAAU,SAGtB,kBAAC,KAAD,CAAQA,UAAU,UAGrB6O,EAAOsD,WACN,yCACMtD,EAAOuD,kBADb,CAEEpS,UAAS,kBACP6O,EAAOwD,WAAa,aAAe,gBAarD,2CAAW5B,IAAX,CAAgCzQ,UAAU,UACvC4Q,EAAK3O,KAAI,SAACgH,GAET,OADA0H,EAAW1H,GAET,uBAAQA,EAAIqJ,cACTrJ,EAAIsJ,MAAMtQ,KAAI,SAACuQ,GACd,GAAuB,eAAnBA,EAAK3D,OAAO/O,GAAqB,CACnC,IAAM2S,EAAcD,EAAK5Q,MAAMI,MAAM,KAAKC,KAAI,SAACkH,GAC7C,OAAOA,EAAInH,MAAM,OAEnB,OACE,wCACMwQ,EAAKE,eADX,CAEE1S,UAAU,0BAETyS,EAAYxQ,KAAI,SAACkH,EAAKwJ,GACrB,OACE,yBAAKxQ,IAAKwQ,GACPxJ,EAAIlH,KAAI,SAAC2Q,EAAMD,GACd,OACE,0BAAMxQ,IAAKwQ,EAAK3S,UAAW4S,GACxBA,WAUnB,OACE,wCACMJ,EAAKE,eADX,CAEE1S,UAAS,qBACY,iBAAnBwS,EAAK3D,OAAO/O,IACO,eAAnB0S,EAAK3D,OAAO/O,GACR,mBACA,MAGL0S,EAAKT,OAAO,gBAOvBjB,EAIE,KAHF,wBAAI9Q,UAAU,eACZ,2EAKR,kBAACkB,EAAA,EAAD,CAAKlB,UAAU,cACb,kBAACmB,EAAA,EAAD,CAAKnB,UAAU,gBAAgBsJ,GAAI,GAAIpF,GAAI,GACzC,kBAAC7C,EAAA,EAAD,CACEC,QAAQ,QACRE,QAAS,kBAAMyP,EAAS,IACxB9J,UAAW0J,GAEV,MAEH,kBAACxP,EAAA,EAAD,CACEC,QAAQ,QACRE,QAAS,kBAAM2P,KACfhK,UAAW0J,GAEV,KAEH,kBAACxP,EAAA,EAAD,CACEC,QAAQ,QACRE,QAAS,kBAAM0P,KACf/J,UAAW2J,GAEV,KAEH,kBAACzP,EAAA,EAAD,CACEC,QAAQ,QACRE,QAAS,kBAAMyP,EAASD,EAAY,IACpC7J,UAAW2J,GAEV,MAEH,2BACG,IADH,QAEO,gCAASZ,EAAY,EAArB,KAFP,MAE4C,IAC1C,gCAASa,EAAY/N,UAGzB,kBAAC7B,EAAA,EAAD,CAAKnB,UAAU,wBAAwBsJ,GAAI,GAAIpF,GAAI,GACjD,kBAAC4G,EAAA,EAAD,KACE,kBAACA,EAAA,EAAWC,QAAZ,KACE,kBAACD,EAAA,EAAWhJ,KAAZ,CAAiBhC,GAAG,aAApB,gBAEF,kBAACJ,EAAA,EAAK+B,QAAN,CACElB,KAAK,SACLqH,aAAcsI,EAAY,EAC1B1P,SAAU,SAAC1C,GACT,IAAM8S,EAAO9S,EAAEG,OAAO2D,MAAQiR,OAAO/U,EAAEG,OAAO2D,OAAS,EAAI,EAC3DqP,EAASL,IAEXkC,aAAW,aACXjR,mBAAiB,gBAIvB,kBAACV,EAAA,EAAD,CAAKnB,UAAU,mBAAmBsJ,GAAI,GAAIpF,GAAI,GAC5C,kBAACxE,EAAA,EAAK+B,QAAN,CACEG,MAAO0P,EACP9Q,SAAU,SAAC1C,GACTsT,EAAYyB,OAAO/U,EAAEG,OAAO2D,SAE9BF,GAAG,UAEF,CAAC,GAAI,GAAI,GAAI,GAAI,IAAIO,KAAI,SAACqP,GAAD,OACxB,4BAAQnP,IAAKmP,EAAU1P,MAAO0P,GAA9B,QACQA,SAMhB,kBAACpQ,EAAA,EAAD,KACE,kBAAC,WAAD,CACE0D,KAAMA,EACNiN,QAAS5C,EACT8D,SAAU/D,EAAa,oBAAsB,uBAC7ChP,UAAU,eACV/B,OAAO,UALT,oBAaO+U,OA1Uf,YAAyE,IAApDtJ,EAAmD,EAAnDA,MAAO9E,EAA4C,EAA5CA,KAAMmK,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,WAAYiE,EAAiB,EAAjBA,cAAiB,EACpC1K,IAAM3H,UAAS,GADqB,mBAC/DsS,EAD+D,KACpDC,EADoD,KAGtE,OAAIF,EAEA,oCACE,kBAAC5R,EAAA,EAAD,CACEG,QAAS,WACP2R,GAAcD,IAEhBlT,UAAU,uBACVyG,gBAAc,iBACdC,gBAAewM,EACf5R,QAAQ,SAEP4R,EAAY,kBAAC,IAAD,MAAsB,kBAAC,IAAD,MAClCA,EAAS,4BAEZ,kBAAC7M,EAAA,EAAD,CAAUC,GAAI4M,GACZ,6BACE,kBAACpE,GAAD,CACEhP,GAAG,iBACH4J,MAAOA,EACP9E,KAAMA,EACNmK,QAASA,EACTC,WAAYA,OAQtB,6BACE,kBAACF,GAAD,CACEhP,GAAG,iBACH4J,MAAOA,EACP9E,KAAMA,EACNmK,QAASA,EACTC,WAAYA,M,+BCuNLoE,GAlRG,SAAC,GAYZ,IAXL1J,EAWI,EAXJA,MACA2J,EAUI,EAVJA,OACAzO,EASI,EATJA,KACAoI,EAQI,EARJA,QACAsG,EAOI,EAPJA,MACAvH,EAMI,EANJA,kBACAC,EAKI,EALJA,eACAuH,EAII,EAJJA,UACAC,EAGI,EAHJA,aAGI,IAFJC,gBAEI,MAFO,GAEP,MADJC,iBACI,MADQ,GACR,EAoBJ,SAASC,EAAgB3G,EAAS4G,EAAUC,EAAQC,GAElD,IADA,IAAMC,EAAQ,GACL7R,EAAI,EAAGA,EAAI8K,EAAQhK,OAAQd,IAClC6R,EAAM9M,KAAK,CACT5H,KAAK,GAAD,OAAK2N,EAAQ9K,IACjB3B,KAAM,OACNyT,gBAAgB,EAChBC,WAAYJ,EACZK,WAAYJ,EACZK,OAAQ,CACNC,EAAG,OACHC,EAAGT,GAELU,aAAcpS,IAGlB,OAAO6R,EAET,SAASQ,EAAaC,EAAMlB,GAC1B,QAAa1E,IAAT4F,EAAJ,CACA,IAAMtR,EAAQoQ,EAAMmB,WAAU,SAACtL,GAE7B,OADmBqL,EAAKE,cAAczR,MAAM,EAAG,MACzBkG,KAExB,OAAkB,IAAXjG,OAAe0L,EAAY1L,GAYpC,IAAMyR,EAC6C,KAA/CJ,EAAavI,EAAe,GAAIsH,IAAU,GAAYA,EAAMtQ,OAC1D4R,EAC4D,KAA9DL,EAAavI,EAAe,GAAIsH,GAAS,GAAKA,EAAMtQ,QACtDsQ,EAAMtQ,OAEF6R,EAAelB,EAAgB3G,EAAS,eAAgB,EAAG,GAC3D8H,EAAgBnB,EAAgB3G,EAAS,gBAAiB,EAAG,GAC7D+H,EA/DN,SAAsBnQ,GACpB,IAD0B,EACpBmQ,EAAW,GADS,cAEJnQ,GAFI,IAE1B,2BAA4B,CAAC,IAAlBoQ,EAAiB,QAC1BD,EAAS9N,KAAK,CACZgO,WAAY,CACV,uBACA,OACA,gBACA,gBACA,eACA,eACA,OACA,oBAEFC,OAAQF,KAdc,8BAiB1B,OAAOD,EA8CQI,CAAavQ,GAKxBwQ,EAAS,CACb1L,MAAO,CACL,CACE2F,KAAM3F,EACN2L,QAAS5B,EACT6B,KAAM,UAER,CACEjG,KAAMgE,EACNgC,QAAS3B,EACT4B,KAAM,SACNC,IAAK,WAGTC,QAAS,CACPC,QAAS,OACTC,YAAa,CACXnV,KAAM,QACN8G,WAAW,GAEbsO,gBAAiB,sBACjBC,UAAW,SAAUC,GAenB,IAdA,IAAIC,EAAcD,EAAO,GAAGjR,KACxB4P,EAAOsB,EAAYtB,KACnBuB,GACwB,IAA1BD,EAAY5J,SACRoH,EAAM,GAjDlB,SAAsBA,EAAOkB,EAAMtI,GACjC,IAAM8J,EAAW,IAAIzJ,KAAK+G,EAAM,IAC5ByC,EAAY,IAAIxJ,KAAKiI,GAKzB,OAJAuB,EAAUE,QAAQF,EAAUG,UAAYhK,GACpC6J,EAAYC,IACdD,EAAYC,GAEPD,EAAUrB,cAAczR,MAAM,EAAG,IA2C9BkT,CAAa7C,EAAOkB,EAAMsB,EAAY5J,UACxCkK,EAAkBN,EAAYO,iBAC9BzI,EAC0C,IAA5CkI,EAAYQ,qBAAqBtT,OAC7B,0BADJ,UAEO8S,EAAYQ,qBAAqBtT,OAFxC,cAIEwS,EAAO,4BAAwBO,EAAxB,eAAwCvB,EAAxC,mCAAuE4B,EAAvE,iBAA+FxI,EAA/F,eAEF1L,EAAI,EAAGA,EAAI8K,EAAQhK,OAAQd,IAClCsT,GAAO,eAAYK,EAAO3T,GAAG0C,KAAKvF,KAA3B,2EAE4BwW,EAAO3T,GAAG0C,KAAK2R,aAF3C,uEAGsCV,EAAO3T,GAAG0C,KAAK4R,cAHrD,2DAI0BX,EAAO3T,GAAG0C,KAAK6R,aAJzC,qEAKoCZ,EAAO3T,GAAG0C,KAAK8R,cALnD,eAOT,OAAOlB,GAETmB,SAAU,SAAUC,EAAKf,EAAQgB,EAAIC,EAAQvV,GAC3C,IAAIwV,EAAM,GAGV,OAFAA,EAAI,CAAC,MAAO,YAAYH,EAAI,GAAKrV,EAAKyV,SAAS,GAAK,KAAO,GAC3DD,EAAI,CAAC,OAAQ,WAAWH,EAAI,GAAKrV,EAAKyV,SAAS,GAAK,KAAO,GACpDD,IAGXE,OAAQ,CACNrS,KAAMoI,EACNkK,OAAQ,WACR3W,KAAM,SACNgV,IAAK,KACL4B,MAAO,GAWTzB,YAAa,CACX0B,KAAM,CAAEnD,WAAY,QAEtBoD,SAAU,CACR,CACE9W,KAAM,SACN+B,MAAM,EACNgV,UAAU,EACVC,MAAO5C,EACP6C,IAAK5C,EACLX,WAAY,CAAC,EAAG,GAChBsB,IAAK,OAEP,CACEhV,KAAM,SACN+W,UAAU,EACVC,MAAO5C,EACP6C,IAAK5C,EACLX,WAAY,CAAC,EAAG,KAGpBwD,KAAM,CACJ,CAAEC,OAAQ,MAAOP,MAAO,OACxB,CAAE5B,IAAK,MAAO4B,MAAO,QAEvBQ,MAAO,CACL,CACEtY,KAAM,OACNuY,aAAc,SACdC,cAAe,CACbC,MAAO,SACPC,cAAe,MACfC,QAAS,CAAC,EAAG,EAAG,EAAG,IAErBC,UAAW,EACX1X,KAAM,YAER,CACElB,KAAM,OACNuY,aAAc,SACdC,cAAe,CACbC,MAAO,SACPC,cAAe,MACfC,QAAS,CAAC,EAAG,EAAG,EAAG,IAGrBC,UAAW,EACX1X,KAAM,aAGV2X,MAAO,CACL,CACE7Y,KAAM,uBACN4Y,UAAW,EACXL,aAAc,SACdO,QAAS,IAEX,CACE9Y,KAAM,uBACN4Y,UAAW,EACXL,aAAc,SACdO,QAAS,KAGbnD,QAASD,EACTqD,OAAO,GAAD,mBAAMvD,GAAN,YAAuBC,KA4B/B,IAgBIuD,EAAW,CACbC,MA1Ce,SAACxa,GAChBW,QAAQK,IAAIhB,GACZ0V,GAAa,SAAC+E,GACZ,OAAO,6BACFA,GADL,IAEE/D,KAAM1W,EAAE8G,KAAK4P,KACbtI,SAAUpO,EAAE8G,KAAKsH,SACjBsM,OAAQ1a,EAAE8G,KAAKvF,KACfoZ,QAAS,UAGblF,KAgCAmF,oBA7BF,YAAoC,EAAZC,UA8BtBtB,SbzPG,SAAkBuB,EAAMC,EAAMC,GACnC,IAAIC,EACJ,OAAO,WACL,IAAIC,EAAUC,KACZC,EAAOC,UACLC,EAAQ,WACVL,EAAU,KACLD,GAAWF,EAAKS,MAAML,EAASE,IAElCI,EAAUR,IAAcC,EAC5BQ,aAAaR,GACbA,EAAUpS,WAAWyS,EAAOP,GACxBS,GAASV,EAAKS,MAAML,EAASE,Ia0NZM,EAAS,SAAC1b,GAC/B,IAAI8G,EAAO9G,OACK8Q,IAAZ9Q,EAAE2b,QACJ7U,EAAO9G,EAAE2b,MAAM,IAEjB,IAAM9E,EAAatQ,KAAKC,MAAOgP,EAAMtQ,OAAS4B,EAAK2S,MAAS,KACtD3C,EAAWvQ,KAAKC,MAAOgP,EAAMtQ,OAAS4B,EAAK4S,IAAO,KAClDkC,EAAkBpG,EAAMqB,IAAerB,EAAM,GAC7CqG,EAAgBrG,EAAMsB,IAAatB,EAAMA,EAAMtQ,OAAS,GAC1D+S,EAAY,IAAIxJ,KAAKmN,GACrBE,EAAU,IAAIrN,KAAKoN,GACvB5D,EAAUE,QAAQF,EAAUG,WAC5B0D,EAAQ3D,QAAQ2D,EAAQ1D,WACxBnK,EAAkB,CAACgK,EAAW6D,MAC7B,MAOH,OACE,kBAAC,KAAD,CACExE,OAAQA,EACRyE,MAAO,CAAEC,OAAQ,QAAShK,MAAO,QACjCuI,SAAUA,EACV0B,UAAU,KC3FDC,GAnLE,SAAC,GAOX,IANLtQ,EAMI,EANJA,MACA2J,EAKI,EALJA,OACAzO,EAII,EAJJA,KACA4G,EAGI,EAHJA,YAGI,IAFJiI,gBAEI,MAFO,GAEP,MADJC,iBACI,MADQ,GACR,EACJ,SAASuG,EAAYrV,EAAM+N,EAAKuH,GAE9B,MAAO,CACL5X,MAAM,EACNqU,SAAU,YACVwD,SAAU,GACVrC,MAAO,SACPC,cAAe,MACfqC,OAAQ,EACRxE,UAAW,SAAUC,GACnB,IAAKrK,EACH,MAAM,GAAN,OAAUqK,EAAOjR,KAAKsV,GAAtB,KAEF,IAAM1B,EAAS3C,EAAOjR,KAAKvF,KAOrBgb,GANUzV,EAAK+N,GAAK9O,QAAO,SAACsF,GAAD,OAASA,EAAI9J,OAASmZ,KAAQ,GAC7D0B,GAEctV,EAAK+N,EAAM,GAAG9O,QAAO,SAACsF,GAAD,OAASA,EAAI9J,OAASmZ,KAAQ,GACjE0B,IAEqCzV,QAAQ,GAE/C,MAAM,GAAN,OADY4V,EAAa,EAAb,OAA0BA,EAAa,EAAb,MAAyB,UAC/D,OAAkBA,EAAlB,OAEFC,SAvBe,EAwBf3E,gBAAiB,UACjB4E,gBAAiB,cACjBvC,QAAS,CAAC,EAAG,EAAG,EAAG,GACnBwC,KAAM,CACJC,EAAG,CAAEC,MAAO,UAAWJ,SA5BV,GA6BbK,EAAG,CAAED,MAAO,UAAWJ,SA7BV,GA8BbM,KAAM,CAAEF,MAAO,OAAQJ,SA9BV,KAuDnB,SAASO,EAAajW,EAAMsV,EAAQjG,EAAYC,GAE9C,IADA,IAAMH,EAAQ,GACL7R,EAAI,EAAGA,EAAI0C,EAAK5B,OAAQd,IAC/B6R,EAAM9M,KAAK,CACT5H,MAAOuF,EAAK1C,GAAG,IAAM,IAAIsS,KACzBjU,KAAM,MACNua,YAAa,GACb7G,WAAYA,EACZC,WAAYA,EACZ3G,MAAO0M,EAAYrV,EAAM1C,EAAGgY,GAC5B/F,OAAQ,CACNC,EAAG,OACHC,EAAG6F,GAEL5F,aAAcpS,IAGlB,OAAO6R,EAGT,IAAMiB,EAxCN,SAAsBD,GACpB,IAD8B,EACxBnQ,EAAO,GADiB,cAERmQ,GAFQ,IAE9B,2BAAgC,CAAC,IAAtBC,EAAqB,QAC9BpQ,EAAKqC,KAAK,CACRgO,WAAY,CACV,uBACA,OACA,gBACA,gBACA,eACA,eACA,OACA,oBAEFC,OAAQF,KAdkB,8BAiB9B,OAAOpQ,EAuBOmW,CAAanW,GACvBoW,EAAWH,EAAajW,EAAM,eAAgB,EAAG,GACjDqW,EAAYJ,EAAajW,EAAM,gBAAiB,EAAG,GAInDwQ,EAAS,CACb1L,MAAO,CACL,CACE2F,KAAM3F,EACN2L,QAAS5B,EACT6B,KAAM,UAER,CACEjG,KAAMgE,EACNgC,QAAS3B,EACT4B,KAAM,SACNC,IAAK,QAGTC,QAAS,CACPC,QAAS,OACTG,UAAW,SAAUC,GACnBpX,QAAQK,IAAI,cAAe+W,IAE7BH,YAAa,CACXnV,KAAM,SACN8G,WAAW,GAEbsP,SAAU,SAAUC,EAAKf,EAAQgB,EAAIC,EAAQvV,GAC3C,IAAIwV,EAAM,CAAExB,IAAK,IAEjB,OADAwB,EAAI,CAAC,OAAQ,WAAWH,EAAI,GAAKrV,EAAKyV,SAAS,GAAK,KAAO,GACpDD,IAGXrB,YAAa,CACX0B,KAAM,CAAEnD,WAAY,QAEtBwD,KAAM,CACJ,CAAElC,IAAK,KAAMmC,OAAQ,OACrB,CAAEnC,IAAK,MAAOmC,OAAQ,QAExBC,MAAO,CACL,CACEtY,KAAM,UACN4Y,UAAW,EACX1X,KAAM,WACN2a,UAAW,CACTd,OAAQ,GACRe,OAAQ,KAGZ,CACE9b,KAAM,UACN4Y,UAAW,EACX1X,KAAM,WACN2a,UAAW,CACTd,OAAQ,GACRe,OAAQ,MAIdjD,MAAO,CACL,CACE7Y,KAAM,uBACN4Y,UAAW,EACXL,aAAc,SACdO,QAAS,IAEX,CACE9Y,KAAM,uBACN4Y,UAAW,EACXL,aAAc,SACdO,QAAS,KAGbnD,QAASA,EACToD,OAAO,GAAD,mBAAM4C,GAAN,YAAmBC,KAKvB5C,EAAW,CACbC,MAJe,SAACxa,GAChBW,QAAQK,IAAIhB,KAKd,OACE,kBAAC,KAAD,CACEsX,OAAQA,EACRyE,MAAO,CAAEC,OAAQ,QAAShK,MAAO,QACjCiK,UAAU,EACV1B,SAAUA,K,6BClKV+C,GAAaC,eAAcC,OAAO,CAAC,EAAG,IAAIC,MAAM,CAAC,UAAW,YA8OnDhT,OAAMiT,MA5OH,SAAC,GAWZ,IAVL9R,EAUI,EAVJA,MACA+R,EASI,EATJA,kBACA7W,EAQI,EARJA,KACAsH,EAOI,EAPJA,SACAwP,EAMI,EANJA,GACA1P,EAKI,EALJA,eAEAuH,GAGI,EAJJxH,kBAII,EAHJwH,WACAC,EAEI,EAFJA,aAEI,IADJC,gBACI,MADO,GACP,IACoClL,IAAM3H,SAAS,IADnD,mBACG+a,EADH,KACiBC,EADjB,KA6HJ,SAASC,EAAcC,GAErB,OADW,IAAIvP,KAAKuP,GACRpH,cAAczR,MAAM,EAAG,IA/HjC,MA6GJ,SAAkB+I,EAAgB0P,GAChC,GAA8B,IAA1B1P,EAAehJ,OACjB,MAAO,CAAC0F,OAAO+E,KAAKiO,GAAI,GAAIhT,OAAO+E,KAAKiO,GAAIhT,OAAO+E,KAAKiO,GAAI1Y,OAAS,IAErE,IAAI+S,EAAY8F,EAAc7P,EAAe,IACzC4N,EAAUiC,EAAc7P,EAAe,IAO3C,OANI4N,EAAUlR,OAAO+E,KAAKiO,GAAIhT,OAAO+E,KAAKiO,GAAI1Y,OAAS,KACrD4W,EAAUlR,OAAO+E,KAAKiO,GAAIhT,OAAO+E,KAAKiO,GAAI1Y,OAAS,IAEjD+S,EAAYrN,OAAO+E,KAAKiO,GAAI,KAC9B3F,EAAYrN,OAAO+E,KAAKiO,GAAI,IAEvB,CAAC3F,EAAW6D,GASMmC,CAAS/P,EAAgB0P,GAlIlD,mBAkIG3F,EAlIH,KAkIc6D,EAlId,KAmIEoC,EAhDN,SAA8BpX,EAAMsH,EAAUsI,GAK5C,IAAIyH,EAAWrX,EACf,GAAIsH,GAAY,EAAG,CACjB,IAAM0N,EAAU,IAAIrN,KAAKiI,GACnBuB,EAAY,IAAIxJ,KAAKiI,GAC3BuB,EAAUE,QAAQF,EAAUG,UAAYhK,GACxC+P,EAAWrX,EAAKf,QAAO,SAACsF,GACtB,IAAM+S,EAAW,IAAI3P,KAAKpD,EAAIqL,MAC9B,OACE0H,EAASC,WAAavC,EAAQuC,WAC9BD,EAASC,WAAapG,EAAUoG,aAItC,OAAOF,EAAS/V,QAAO,SAACuI,EAAOwN,GAI7B,OAHAxN,EAAMX,IAAImO,EAAShO,QACfQ,EAAM2N,IAAIH,EAAShO,OAAQQ,EAAM4N,IAAIJ,EAAShO,QAAU,GACxDQ,EAAM2N,IAAIH,EAAShO,OAAQ,GACxBQ,IACN,IAAI6N,KAyBaC,CAAqB3X,EAAMsH,EAAU0N,GACrD4C,EAAmBC,MAAMC,KAAKV,EAAcvO,QAAQvH,QACxD,SAACyW,EAAalE,GAQZ,OAPAkE,EAAYP,IACV3D,GAEGuD,EAAcK,IAAI5D,IAAYiD,EAAG9B,GAASnB,IAAY,KACvD,KACAhU,QAAQ,IAELkY,IAET,IAAIL,KAGN7d,QAAQK,IAAI,qBAAsBkd,GAClCvd,QAAQK,IAAI,0BAA2BiX,EAAW6D,GAClDnb,QAAQK,IAAI,wBAAyB0d,GACrC,IAAMI,EAAavY,KAAK0E,IAAL,MAAA1E,KAAI,YAAQoY,MAAMC,KAAKF,EAAiB7T,YAE3D,OADAlK,QAAQK,IAAI,kBAAmB8d,GAE7B,kBAAC7c,EAAA,EAAD,KACE,wBAAIC,UAAU,aAAa0J,GAC3B,wBAAI1J,UAAU,0BAA0ByT,GACxC,kBAAC,iBAAD,CAAezI,WAAS,GAAG6R,iBAAkB,CAAEC,MAAO,MACpD,kBAAC,iBAAD,KACE,kBAAC,eAAD,CAAaC,UA5KrB,2GA6KW,qBAAGC,YACU/a,KAAI,SAACgb,GACf,IAAMC,EAAYlB,EAAcK,IAAIY,EAAIE,WAAWlP,SAAW,EACxDmP,EACJZ,EAAiBH,IAAIY,EAAIE,WAAWlP,SAAW,EACjD,OACE,kBAAC,aAAD,CACE9L,IAAK8a,EAAII,OACTN,UAAWE,EACXK,aAAc,WAAO,IACXC,EAASN,EAAIE,WAAbI,KACR9B,EAAkB,GAAD,OACZ8B,EADY,+CAGX7B,EAAG9B,GAASqD,EAAIE,WAAWlP,SAAW,EAH3B,yDAKXiP,EALW,8DAMXE,EANW,8CAUnBI,aAAc,WACZ/B,EAAkB,KAEpBja,QAAS,YApJ3B,SAAqBic,EAAa7D,EAAS1N,GACvBwR,aAChB9Y,EAAKsB,QAAO,SAACoN,EAAO1O,GAClB,OAAIA,EAAKqJ,SAAWwP,GAClBnK,EAAMrM,KAAK,IAAIsF,KAAK3H,EAAK4P,OAClBlB,GAEAA,IAER,KAELC,IACAC,GAAa,SAAC+E,GACZ,OAAO,6BACFA,GADL,IAEEC,OAAQ,KACRC,QAASgF,EACTvR,SAAUA,EACVsI,KAAMoF,OAmIQ+D,CAAYV,EAAIE,WAAWlP,OAAQ2L,EAAS1N,IAE9C2N,MAAO,CACL+D,QAAS,CACPC,KAC0B,IAAxBtZ,WAAW6Y,GACPhC,GAAWgC,EAAUR,GACrB,UACNkB,QAAS,QAEXpM,MAAO,CACLmM,KAAM,UACNE,OAAQb,EAAY,UAAY,OAChCY,QAAS,mBAU3B,kBAAC,WAAD,CACElZ,KAAM+W,EACN9J,QA9MU,CACd,CACEtE,MAAO,UACPpL,IAAK,WAEP,CACEoL,MAAO,SACPpL,IAAK,UAEP,CACEoL,MAAO,WACPpL,IAAK,cAEP,CACEoL,MAAO,kBACPpL,IAAK,YAEP,CACEoL,MAAO,kBACPpL,IAAK,iBAGP,CACEoL,MAAO,aACPpL,IAAK,aAEP,CACEoL,MAAO,WACPpL,IAAK,YAmLH4Q,SAAU,iBACV/S,UAAU,eACV/B,OAAO,SACPuD,QA3JN,SACEwa,EACAQ,EACAzG,EACA6D,EACAhV,GAEA,OAAO,WACL,IADW,EACLoZ,EAAa,GADR,cAEyBhC,GAFzB,kDAECiC,EAFD,KAEaC,EAFb,KAGTF,EAAW/W,KAAK,CACdwR,QAAS7T,EAAKwB,MAAK,SAAC+X,GAAD,OAAaA,EAAQlQ,SAAWgQ,KAChDlQ,aACHE,OAAQgQ,EACRG,cAAeF,GAAW1B,EAAiBH,IAAI4B,GAAc,KAC7DI,WAAY7B,EAAiBH,IAAI4B,GACjCK,SAAUJ,EACVnI,UAAWA,EACX6D,QAASA,KATb,2BAAoD,IAFzC,8BAcXnb,QAAQK,IAAI,QAASkf,GACrBpC,EAAgBoC,IAqILO,CACPvC,EACAQ,EACAzG,EACA6D,EACAhV,IAXJ,yBCpMS4Z,I,OAhCQ,SAAC,GAUjB,IATL9U,EASI,EATJA,MACA9E,EAQI,EARJA,KACAsH,EAOI,EAPJA,SACAwP,EAMI,EANJA,GACA1P,EAKI,EALJA,eACAD,EAII,EAJJA,kBACAwH,EAGI,EAHJA,UACAC,EAEI,EAFJA,aAEI,IADJC,gBACI,MADO,GACP,IACwClL,IAAM3H,SAAS,IADvD,mBACG6d,EADH,KACmBhD,EADnB,KAGJ,OACE,oCACE,kBAAC,GAAD,CACE/R,MAAOA,EACP+J,SAAUA,EACVgI,kBAAmBA,EACnB7W,KAAMA,EACNsH,SAAUA,EACVwP,GAAIA,EACJ1P,eAAgBA,EAChBD,kBAAmBA,EACnBwH,UAAWA,EACXC,aAAcA,IAEhB,kBAAC,IAAD,CAAcrF,MAAM,GAAOsQ,MChBjClS,KAAKmS,UAAUC,QAAU,SAAUC,GACjC,OACE3F,KAAK4F,gBAAkBD,EAAEC,eACzB5F,KAAK/C,YAAc0I,EAAE1I,WACrB+C,KAAK6F,aAAeF,EAAEE,YAI1B,IAAMC,GAAY,WAChB,IAAMjZ,EAAUC,cAChB,OACE,kBAAChG,EAAA,EAAD,KACE,uBAAGC,UAAU,WAAb,0DAGA,kBAACqB,EAAA,EAAD,CAAQG,QAAS,kBAAMsE,EAAQmB,KAAK,OAApC,iBAkdS+X,GA7cI,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAEd7f,EAASmJ,IAAM2W,OAAOnY,KAAKoY,MAAMF,IACvCxgB,QAAQK,IAAI,SAAUM,GACtB,IAAMkL,EAAW/B,IAAM2W,OAAO9f,EAAO+G,QAAQ,IAAM,IAC7CiZ,EAAgB7W,IAAM2W,OA0jB9B,SAAuBG,GAMrB,IAAIC,EAAY,GAChB,GAA0C,IAAtC5W,OAAO+E,KAAK4R,GAAerc,OAE7B,IADA,IAAMuc,EAAc7W,OAAO+E,KAAK4R,GAChC,MAAyBE,EAAzB,eAAsC,CAAjC,IAAMC,EAAU,KACnBF,EAAUrY,KAAV,MAAAqY,EAAS,YAASD,EAAcG,GAAYvd,IAAIwd,GAAQD,MAG5D,OAAOF,EAvkB4BI,CAAcpV,EAASnE,UACpDwZ,EAAepX,IAAM2W,OAAOU,GAAQxgB,EAAO+G,QAAS,IACpD0Z,EAAatX,IAAM2W,OAAOU,GAAQxgB,EAAO+G,QAAS,IAClD8F,EAAY1D,IAAM2W,OAAOxW,OAAO+E,KAAKoS,EAAW1Z,UAAY,IAC5D2Z,EAAoBvX,IAAM2W,OA6gBlC,SAAoBa,EAASC,EAAYC,EAAU3M,GAWjD,IADA,IAAM4M,EAAW,GACRhe,EAAI8d,EAAY9d,EAAI+d,EAASjd,OAAQd,IAC5Cge,EAAShe,GAAKie,GAAgBJ,EAAS7d,EAAGoR,GAE5C,OAAO4M,EA1hBLE,CAAWT,EAAaxZ,QAAS,EAAG,GAAI8F,EAAU9F,UAVlB,GAadka,cAAZC,QACkBte,MAAM,KAGRuG,IAAM3H,SAAS,KAjBL,mBAiB3B2J,EAjB2B,KAiBrBC,EAjBqB,OAkBRjC,IAAM3H,SAAS,IAlBP,mBAkB3B6J,EAlB2B,KAkBpBC,EAlBoB,OAmBRnC,IAAM3H,SAAS,IAnBP,mBAmB3B+J,EAnB2B,KAmBpBC,EAnBoB,OAoBUrC,IAAM3H,SAChD2H,IAAMC,SAAQ,iBAAM,KAAI,KArBQ,mBAoB3BwD,EApB2B,KAoBXD,EApBW,OAuBAxD,IAAM3H,SAAS2H,IAAMC,SAAQ,iBAAM,KAAI,KAvBvC,mBAuB3BoF,EAvB2B,KAuBhBb,EAvBgB,OAwBJxE,IAAM3H,SAAS2H,IAAMC,SAAQ,iBAAM,KAAI,KAxBnC,mBAwB3BwE,EAxB2B,KAwBlBC,EAxBkB,OAyBR1E,IAAM3H,SAAS,IAzBP,mBAyB3B2f,EAzB2B,KAyBpBrT,EAzBoB,OA4BN3E,IAAM3H,UAAS,GA5BT,mBA4B3BwL,EA5B2B,KA4BnBC,EA5BmB,OA6BU9D,IAAM3H,UAAS,GA7BzB,mBA6B3BgL,EA7B2B,KA6BXC,GA7BW,QA8BFtD,IAAM3H,SAAS,GA9Bb,qBA8B3BsL,GA9B2B,MA8BjBC,GA9BiB,SA+BR5D,IAAM3H,UAAS,GA/BP,qBA+B3BsK,GA/B2B,MA+BpBC,GA/BoB,SAgCwB5C,IAAM3H,SAC9DsL,IAjCgC,qBAgC3Bd,GAhC2B,MAgCJC,GAhCI,SAmCM9C,IAAM3H,SAAS,GAnCrB,qBAmC3B0K,GAnC2B,MAmCbC,GAnCa,SAoCIhD,IAAM3H,UAAS,GApCnB,qBAoC3B4K,GApC2B,MAoCdC,GApCc,SAuCAlD,IAAM3H,UAAS,GAvCf,qBAuC3B2S,GAvC2B,MAuChBiN,GAvCgB,SAwCAjY,IAAM3H,SAAS,CAC/C4T,KAAM,KACNtI,SAAU,KACVuM,QAAS,KACTD,OAAQ,OA5CwB,qBAwC3BiI,GAxC2B,MAwChBjN,GAxCgB,MA8C5BkN,GAAe,kBAAMF,IAAa,IAClCG,GAAcpY,IAAMqY,aAAY,kBAAMJ,IAAa,KAAO,IA/C9B,GAkDMjY,IAAM3H,UAAS,GAlDrB,qBAkD3BkM,GAlD2B,MAkDbD,GAlDa,MAoDlCtE,IAAMtH,WAAU,WACd0F,YAAW,kBAAMkG,IAAgB,KAAQ,OACxC,CAACC,KAEJvE,IAAMtH,WAAU,WACdoK,GAAsC,IAAba,GAAiB,EAAIA,MAC7C,CAACA,KAEJ,IAAM2U,GAAkBtY,IAAMC,SAC5B,iBAAM,CACJ,CACE9F,OAAQ,SACRyM,SAAU,SACV2R,gBAAgB,GAElB,CACEpe,OAAQ,eACRyM,SAAU,eACV2R,gBAAgB,GAElB,CACEpe,OAAQ,aACRyM,SAAU,aACV2R,gBAAgB,EAChBhR,MAAO,KAET,CACEpN,OAAQ,UACRyM,SAAU,aACV2R,gBAAgB,EAChBhR,MAAO,KAET,CACEpN,OAAQ,cACRyM,SAAU,OACV2R,gBAAgB,EAChBhR,MAAO,KAET,CACEpN,OAAQ,aACRyM,SAAU,aAEZ,CACEzM,OAAQ,aACRyM,SAAU,UAEZ,CACEzM,OAAQ,mBACRyM,SAAU,WAEZ,CACEzM,OAAQ,iBACRyM,SAAU,OACV2R,gBAAgB,EAChBhR,MAAO,IACPxN,MAAM,GAER,CACEI,OAAQ,UACRyM,SAAU,eACV2R,gBAAgB,MAGpB,IAEIC,GAAexY,IAAMC,SACzB,iBAAM,CACJ,CACE9F,OAAQ,SACRyM,SAAU,SACV2R,gBAAgB,GAElB,CACEpe,OAAQ,eACRyM,SAAU,eACV2R,gBAAgB,GAElB,CACEpe,OAAQ,aACRyM,SAAU,aACV2R,gBAAgB,EAChBhR,MAAO,KAET,CACEpN,OAAQ,iBACRyM,SAAU,OACV2R,gBAAgB,EAChBhR,MAAO,IACPxN,MAAM,GAER,CACEI,OAAQ,UACRyM,SAAU,eACV2R,gBAAgB,MAGpB,IAGIE,GAAWzY,IAAMC,SACrB,kBACE4D,EACIyT,EAAW1Z,QACX2Z,EAAkB3Z,QAAQ+F,KAC1BiU,GAAgBR,EAAaxZ,QAAS+F,GAAUD,EAAU9F,WAChE,CAACiG,EAAQF,KAEL+U,GAAY1Y,IAAMC,SACtB,kBACE4W,EAAcjZ,QAAQtC,OACpBqd,GAAW,CACTlU,QAASA,EACTuT,MAAOA,EACP3S,UAAWA,EACXrD,KAAMA,EACNE,MAAOA,EACPE,MAAOA,OAGb,CAACqC,EAASuT,EAAO3S,EAAWrD,EAAME,EAAOE,IAErC2U,GAAY/W,IAAMC,SACtB,kBAAMyY,GAAUpd,OAAOqd,GAAW,CAAElV,eAAgBA,OACpD,CAACiV,GAAWjV,IAERmV,GAAY5Y,IAAMC,SACtB,kBACE8W,GAAUzb,QAAO,SAACjC,GAChB,IAAIwf,GAAa,EACbC,GAAgB,EAChBC,GAAW,EACXC,GAAY,EAIhB,GAH0B,OAAtBd,GAAS,OACXW,EAAaxf,EAAM4S,OAASiM,GAAU,IAEV,OAA1BA,GAAS,WAAoD,IAA3BA,GAAS,SAAqB,CAClE,IAAMe,EAAU,IAAIjV,KAAK3K,EAAM4S,MACzBiN,EAAe,IAAIlV,KAAKkU,GAAS,MACjC1K,EAAY,IAAIxJ,KAAKkV,GAC3B1L,EAAUE,QAAQF,EAAUG,UAAYuK,GAAS,UACjDY,EAAgBG,GAAWzL,GAAayL,GAAWC,EAQrD,OAN4B,OAAxBhB,GAAS,SACXa,EAAW1f,EAAM4W,SAAWiI,GAAS,QAEV,OAAzBA,GAAS,UACXc,EAAY3f,EAAMqM,SAAWwS,GAAS,UAEhCW,GAAcC,IAAkBC,GAAYC,OAExD,CAACjC,GAAWmB,KAGRiB,GAAgBnZ,IAAMC,SAC1B,kBACEmZ,GACEV,GACmB,IAAnBjU,EAAQhK,OAAe0F,OAAO+E,KAAKnD,EAASnE,SAAW6G,EACvDgU,GACA/U,EAAU9F,QACViG,EACAF,GACAN,EACAgC,KAEJ,CAACqT,GAAWjU,EAASgU,GAAU5U,EAAQF,GAAUN,EAAgBgC,IAG7DgU,GAAUrZ,IAAMC,SACpB,kBACE0C,GAmlBN,SACEwW,EACApO,EACAtH,EACAZ,EACAE,GAUA,IAAMuW,EAAc,GAEdC,EAAM9V,EAAe,IAAM,IAAIO,KAAK+G,EAAMA,EAAMtQ,OAAS,IACzDuU,EAAQ,IAAIhL,KAAKuV,GACvBvK,EAAMtB,QAAQsB,EAAMrB,UAAY9K,EAAwBE,GACxD,KAAOiM,EAAM4E,UAAY,IAAI5P,KAAK+G,EAAM,KACtCiE,EAAMtB,QAAQsB,EAAMrB,UAAY9K,GAElC,IAjBA,eAkBMwT,GAKJ,IADA,IAAMmD,EAAkB,GACf7f,EAAI,EAAGA,EAAIwf,EAAc1e,OAAQd,IAAK,CAC7C,IAAM8f,EAAUN,EAAcxf,GAAG2B,QAAO,SAACsF,GAAD,OACtC,IAAIoD,KAAKpD,EAAIqL,MAAMmK,QAAQC,MAE7BmD,EAAgB9a,KAAhB,MAAA8a,EAAe,YAASC,IAE1BH,EAAY5a,KAAK8a,IAXbnD,EAAIrH,EACRqH,GAAKkD,EACLlD,EAAE3I,QAAQ2I,EAAE1I,UAAY9K,GACvB,EAHGwT,GAcN,OAAOiD,EAxnBCI,CACEP,GACAzV,EAAU9F,QACV6F,EACAZ,GACAE,IAEF,KACN,CAACoW,GAAepW,GAAcF,GAAuBY,EAAgBd,KAvOrC,GA0OG3C,IAAMC,SACzC,kBAoWJ,SAA0B8W,GAOxB,IAAM4C,EAAQ,IAAIvU,IACZ0R,EAAgBC,EAAUpZ,QAAO,SAACmZ,EAAe7G,GACrD,GAAI0J,EAAMpU,IAAI0K,EAAOA,QAAS,CAC5B,IAAMwJ,EAAU3C,EAAc7G,EAAOA,QAGrC,OAFAwJ,EAAQ/a,KAAKuR,GACb6G,EAAc7G,EAAOA,QAAUwJ,EACxB3C,EAIP,OAFA6C,EAAMlU,IAAIwK,EAAOA,QACjB6G,EAAc7G,EAAOA,QAAU,CAACA,GACzB6G,IAER,IACC8C,EAAe,GACnB,GAAID,EAAM3gB,KAAO,EAAG,CAClB,IACMlC,EADcqJ,OAAO+E,KAAK4R,GACP7R,KAAK,MAG9B,MAAO,CADP2U,GADAA,EA+BJ,SAA8BC,GAS5B,IAT6D,IAAvBjgB,EAAsB,uDAAhB,eAQxCggB,EAAeC,EAAS,GACnBlgB,EAAI,EAAGA,EAAIkgB,EAASpf,OAAQd,IACnCigB,EAAeE,GAAiBF,EAAcC,EAASlgB,GAAIC,GAE7D,OAAOggB,EA3CUG,CAAqB5Z,OAAOC,OAAO0W,KACtBpd,IAAIwd,GAAQpgB,IAClB,CAACA,IAEzB,MAAO,CAAC8iB,EAAc,IAhYdI,CAAiBxb,KAAKoY,MAAMpY,KAAKC,UAAUia,QACjD,CAACA,KA5O+B,qBA0O3BuB,GA1O2B,MA0ObC,GA1Oa,MA8O5BC,GAAgBna,IAAMC,SAC1B,kBACEmZ,GACEa,GACAC,IAAgB,GAChBzB,GACA/U,EAAU9F,QACViG,EACAF,GACAN,EACAgC,KAEJ,CACE4U,GACAC,GACAzB,GACA5U,EACAF,GACAN,EACAgC,IAGE+U,GAAgBpa,IAAMC,SAC1B,kBAAMga,GAAa3e,OAAOqd,GAAW,CAAElV,eAAgBA,OACvD,CAACwW,GAAcxW,IAGjB,GAA8B,IAA1B5M,EAAO+G,QAAQnD,OAAc,CAI/BvE,QAAQK,IAAI,qBAAsB4iB,IAClCjjB,QAAQK,IAAI,eAAgB8iB,IAC5BnjB,QAAQK,IAAI,qBAAsB4jB,IAGlC,IAAM9I,GAAU,IAAIrN,KAClBP,EAAe,IAAMC,EAAU9F,QAAQ8F,EAAU9F,QAAQnD,OAAS,IAE9D+S,GAAY,IAAIxJ,KACpBP,EAAe,IAAMC,EAAU9F,QAAQ8F,EAAU9F,QAAQnD,OAAS,IAGpE,OADA+S,GAAUE,QAAQF,GAAUG,UAAYhK,IAEtC,yBAAKlM,UAAU,gBACb,kBAACD,EAAA,EAAD,KACE,kBAAC,GAAD,CACEuK,SAAUA,EAASnE,QACnB8F,UAAWA,EAAU9F,QACrB6F,eAAgBA,EAChBD,kBAAmBA,EACnBG,SAAUA,GACVC,YAAaA,GACbC,OAAQA,EACRC,UAAWA,EACX9B,KAAMA,EACNC,QAASA,EACTC,MAAOA,EACPC,SAAUA,EACVC,MAAOA,EACPC,SAAUA,EACVgB,eAAgBA,EAChBC,kBAAmBA,GACnBkB,aAAcA,EACdE,WAAYA,EACZC,SAAUA,EACVJ,aAAcA,GACdD,gBAAiBA,GACjB3B,MAAOA,GACPC,SAAUA,GACVC,sBAAuBA,GACvBC,yBAA0BA,GAC1BC,aAAcA,GACdC,gBAAiBA,GACjBC,YAAaA,GACbC,eAAgBA,KAElB,kBAAC,GAAD,CACE3L,GAAG,iBACH4J,MAAO,6BACP9E,KAAM0a,GACNvQ,QAAS8R,GACT7R,YAAY,EACZiE,eAAe,EACfjT,UAAU,SAEZ,kBAACkB,EAAA,EAAD,CAAKlB,UAAU,QACb,kBAACmB,EAAA,EAAD,CAAK0J,GAAI,GAAI5G,GAAuB,IAAnB+I,EAAQhK,OAAe,EAAI,IAC1C,kBAAC,GAAD,CACE0G,MAAO,wBACP2J,OAAQ,kCACRzO,KAAM8c,GACN1U,QACqB,IAAnBA,EAAQhK,OAAe0F,OAAO+E,KAAKnD,EAASnE,SAAW6G,EAEzDsG,MAAOrH,EAAU9F,QACjB8G,WAAYA,EACZjB,eAAgBA,EAChBD,kBAAmBA,EACnBwH,UAAWoN,GACXnN,aAAcA,MAGE,IAAnBxG,EAAQhK,OACP,kBAAC7B,EAAA,EAAD,CAAK0J,GAAI,GAAI5G,GAAI,GACf,kBAAC,GAAD,CACEyF,MAAO,sBACP+J,SACGrH,EAMG,aANJ,eACY2J,GACLrB,cACAzR,MAAM,EAAG,IAHhB,eAG0B2W,GACnBlF,cACAzR,MAAM,EAAG,KAGlB2B,KAAM0a,GACNpT,SAAWE,GAAqB,EAAZF,GACpBwP,GAAKtP,EAAoByT,EAAW1Z,QAAtB6a,GACdhV,eAAgBA,EAChBD,kBAAmBA,EACnBwH,UAAWoN,GACXnN,aAAcA,MAGhB,MAELtI,GACC,kBAAC,GAAD,CACExB,MAAO,wBACP2J,OAAQ,6CACRzO,KAAMgd,GACNpW,YAAaA,GACbxL,UAAU,SAEV,KACJ,kBAACqG,EAAA,EAAD,CAAUC,GAA4B,IAAxBkc,GAAaxf,QACzB,6BACE,kBAAC9B,EAAA,EAAD,CAAKlB,UAAU,QACb,kBAACmB,EAAA,EAAD,CAAK0J,GAAI,GAAI5G,GAAI,GACf,kBAAC,GAAD,CACEyF,MAAO,mCACP2J,OAAQ,6CACRzO,KAAM8d,GACN1V,QACqB,IAAnBA,EAAQhK,OACJ,CAAC0F,OAAO+E,KAAKnD,EAASnE,SAASqH,KAAK,OACpC,CAACR,EAAQQ,KAAK,OAEpB8F,MAAOrH,EAAU9F,QACjB8G,WAAYA,EACZjB,eAAgBA,EAChBD,kBAAmBA,EACnBwH,UAAWoN,GACXnN,aAAcA,MAGlB,kBAACrS,EAAA,EAAD,CAAK0J,GAAI,GAAI5G,GAAI,GACf,kBAAC,GAAD,CACEyF,MAAO,iCACP+J,SACGrH,EAMG,aANJ,eACY2J,GACLrB,cACAzR,MAAM,EAAG,IAHhB,eAG0B2W,GACnBlF,cACAzR,MAAM,EAAG,KAGlB2B,KAAM+d,GACNzW,SAAWE,GAAqB,EAAZF,GACpBwP,GAAKtP,EAAoByT,EAAW1Z,QAAtB6a,GACdhV,eAAgBA,EAChBD,kBAAmBA,EACnBwH,UAAWoN,GACXnN,aAAcA,OAIpB,kBAAC,GAAD,CACE9J,MAAO,4BACP9E,KAAM+d,GACN5T,QAASgS,GACT/R,YAAY,EACZiE,eAAe,EACfjT,UAAU,YAKlB,kBAACwC,EAAA,EAAD,CACEF,KAAMiR,GACN9Q,OAAQie,GACRkC,gBAAgB,YAChBC,kBAAgB,wBAEhB,kBAACrgB,EAAA,EAAME,OAAP,CAAcC,aAAW,EAAC7C,GAAG,wBAC3B,kBAAC0C,EAAA,EAAMI,MAAP,wBAEF,kBAACJ,EAAA,EAAMK,KAAP,KACE,kBAAC,GAAD,CACE/C,GAAG,eACH4J,MAAO,GACP9E,KAAMuc,GACNpS,QAAS8R,GACT7R,YAAY,EACZiE,eAAe,EACfjT,UAAU,UAGd,kBAACwC,EAAA,EAAMY,OAAP,KACE,kBAAC/B,EAAA,EAAD,CAAQC,QAAQ,YAAYE,QAASkf,IAArC,YASV,OAAO,kBAAC,GAAD,OAKHQ,GAAa,SAAC,GAQb,IAAD,IAPJlV,sBAOI,MAPa,GAOb,MANJgB,eAMI,MANM,GAMN,MALJuT,aAKI,MALI,GAKJ,MAJJ3S,iBAII,MAJQ,GAIR,MAHJrD,YAGI,MAHG,GAGH,MAFJE,aAEI,MAFI,GAEJ,MADJE,aACI,MADI,GACJ,EAYJ,OAAO,SAAC/I,GACN,IAAIkhB,GAAoB,EACpBxB,GAAW,EACXyB,GAAU,EACVxB,GAAY,EACZyB,GAAS,EACTC,GAAU,EACVC,GAAU,EAEd,GAA8B,IAA1BlX,EAAehJ,OAAc,CAC/B,IAAMkZ,EAAW,IAAI3P,KAAK3K,EAAM4S,MADD,cAEFxI,EAFE,GAExB+J,EAFwB,KAEb6D,EAFa,KAG/BkJ,EACE5G,EAASC,WAAa,IAAI5P,KAAKwJ,GAAWoG,WAC1CD,EAASC,WAAa,IAAI5P,KAAKqN,GAASuC,UA0B5C,OAxBuB,IAAnBnP,EAAQhK,SACVse,EAAWtU,EAAQmW,SAASvhB,EAAM4W,SAEf,IAAjB+H,EAAMvd,SACR+f,EAAUxC,EAAM4C,SAASvhB,EAAMrB,OAER,IAArBqN,EAAU5K,SACZue,EAAY3T,EACT3L,KAAI,SAACkH,GAAD,OAASA,EAAIoE,SACjB4V,SAASvhB,EAAMmM,eAEA,IAAhBxD,EAAKvH,SACPggB,EACEphB,EAAMwhB,SAAW7Y,EAAK,IAAM,IAAM3I,EAAMwhB,SAAW7Y,EAAK,IAAM,MAE7C,IAAjBE,EAAMzH,SACRigB,EACErhB,EAAMyhB,UAAY5Y,EAAM,IAAM,IAAM7I,EAAMyhB,UAAY5Y,EAAM,IAAM,MAEjD,IAAjBE,EAAM3H,SACRkgB,EACEthB,EAAM0hB,YAAc3Y,EAAM,IAAM,IAChC/I,EAAM0hB,YAAc3Y,EAAM,IAAM,MAGlCmY,GACAxB,GACAyB,GACAxB,GACAyB,GACAC,GACAC,IAoBN,SAAStD,GAAQ2D,EAASC,GAOxB,OAAuB,IAAnBD,EAAQvgB,OACH+D,KAAKoY,MAAMpY,KAAKC,UAAUuc,EAAQ,GAAGC,KAEvC,GAGT,SAAS/D,GAAQjH,GAMf,OAAO,SAAC5W,GAEN,OADAA,EAAM4W,OAASA,EACR5W,GAmDX,SAASygB,GAAiBoB,EAAOC,EAAOvhB,GAAwB,IAAnBwhB,IAAkB,yDAO7D,GAAIxhB,EAAK,CACP,IAAI/C,EAASqkB,EAAM5f,QACfuY,EAEC,IAAIzO,IAAI+V,EAAMzhB,KAAI,SAAC2hB,GAAD,OAAUA,EAAKzhB,OAF1B,SAACyhB,GACT,OAAOD,IAAcvH,EAAItO,IAAI8V,EAAKzhB,OAGtC,OAAO/C,EAEP,IANIgd,EAMEhd,EAASqkB,EAAM5f,OAClB,SAACuY,GAAD,OAAS,SAACwH,GACT,OAAOD,IAAcvH,EAAItO,IAAI8V,IAD9B,CAEE,IAAIjW,IAAI+V,EAAMzhB,KAAI,SAAC2hB,GAAD,OAAUA,QAEjC,OAAOxkB,EAmBX,SAASykB,GAAUC,EAAMC,GAQvB,IAR8C,IAAjBC,EAAgB,uDAAH,EAQ1C,MAAgBtb,OAAO+E,KAAKsW,GAA5B,eAAmC,CAA9B,IAAI5hB,EAAG,KACV2hB,EAAK3hB,IAAQ2hB,EAAK3hB,IAAQ6hB,GAAcD,EAAK5hB,GAE/C,OAAO2hB,EAGT,SAAS3D,GAAgB8D,EAAS/X,EAAUoH,GAO1C,IAPiD,EAO3C4Q,EAAgB,GAP2B,cAQ9B5Q,GAR8B,IAQjD,2BAA0B,CAAC,IAAhBkB,EAAe,QAClBsN,EAAM,IAAIvV,KAAKiI,GACf+C,EAAQ,IAAIhL,KAAKiI,GACvB+C,EAAMtB,QAAQsB,EAAMrB,UAAYhK,GAEhC,IADA,IAAIiY,EAAe,CAAEC,MAAO,GACnBxF,EAAIrH,EAAOqH,GAAKkD,EAAKlD,EAAE3I,QAAQ2I,EAAE1I,UAAY,GAAI,CAExDiO,EAAeN,GAAUM,EAAcF,EADvBrF,EAAElK,cAAczR,MAAM,EAAG,MACkB,IAE7DihB,EAAc1P,GAAQ2P,GAjByB,8BAoBjD,OAAOD,EAGT,SAASG,GAAkBJ,EAASrW,EAAW4G,GAQ7C,OAAyB,IAArB5G,EAAU5K,OACLihB,EAAQzP,GAAM4P,MAETxW,EAAU1H,QAAO,SAACoe,EAAS7L,GAEvC,OADA6L,GAAWL,EAAQzP,GAAMiE,EAAQ7W,QAAU,IAE1C,GAIL,SAAS+f,GACPtC,EACAE,EACA0E,EACA3Q,EACAlH,EACAF,EACAqY,GAEC,IADD3W,EACA,uDADY,GAYN4W,EAAe,GACrB,GAA6B,IAAzBnF,EAAcrc,OAAc,OAAOwhB,EACvC,IAbA,EAaMC,EAAerY,EASjBiT,EAAcnZ,QAAO,SAAC9G,EAAQyJ,GAC5B,IAAM6b,EAAOtlB,EAAOyJ,EAAQ2P,SAAW,GAGvC,OAFAkM,EAAKzd,KAAK4B,GACVzJ,EAAOyJ,EAAQ2P,QAAUkM,EAClBtlB,IACN,IAbHigB,EAAcnZ,QAAO,SAAC9G,EAAQyJ,GAC5B,IAAM6b,EAAOtlB,EAAOyJ,EAAQ2P,SAAW,GACjCmM,EAAYD,EAAK7b,EAAQ2L,OAAS,GAIxC,OAHAmQ,EAAU1d,KAAK4B,GACf6b,EAAK7b,EAAQ2L,MAAQmQ,EACrBvlB,EAAOyJ,EAAQ2P,QAAUkM,EAClBtlB,IACN,IArBP,cA4ByBmgB,GA5BzB,yBA4BWC,EA5BX,QA6BEgF,EAAavd,KACXqM,EAAMrR,KAAI,SAACuS,GACT,IAAM0H,EAAW,IAAI3P,KAAKiI,GACtBoQ,EAAc,GACdC,EAAe,GACnB,GAAKzY,EAkBHwY,EAAcH,EAAYjF,GAAY3b,QAAO,SAACjC,GAE5C,OADoB,IAAI2K,KAAK3K,EAAM4S,MAChB2H,WAAaD,EAASC,aAE3C0I,EAAeJ,EAAYjF,GAAY3b,QAAO,SAACjC,GAE7C,OADoB,IAAI2K,KAAK3K,EAAM4S,MAErB2H,WAAaD,EAASC,WAA+B,IAAlBva,EAAMyhB,eAzB9C,CACX,IAAM7W,EAAU,IAAID,KAAKiI,GACzBhI,EAAQyJ,QAAQzJ,EAAQ0J,UAAYhK,GACpC,IACE,IAAI4Y,EAAQtY,EACZsY,GAAS5I,EACT4I,EAAM7O,QAAQ6O,EAAM5O,UAAY,GAEhC0O,EAAY3d,KAAKoS,MACfuL,EACAH,EAAYjF,GAAYsF,EAAMpQ,cAAczR,MAAM,EAAG,MAEvD4hB,EAAa5d,KAAKoS,MAChBwL,EACAJ,EAAYjF,GAAYsF,EAAMpQ,cAAczR,MAAM,EAAG,MAe3D2hB,EAAcA,EAAY1e,QAAO,SAAC9G,EAAQyJ,GAExC,OADAzJ,EAAO4O,IAAInF,EAAQkc,YACZ3lB,IACN,IAAIuO,KAAOpM,KACdsjB,EAAeA,EAAa3e,QAAO,SAAC9G,EAAQyJ,GAE1C,OADAzJ,EAAO4O,IAAInF,EAAQkc,YACZ3lB,IACN,IAAIuO,KAAOpM,KACd,IAAMyjB,EAAgBT,EAClBF,GAAkBJ,EAASrW,EAAW4G,GACtCyP,EAAQzP,GAAM4P,MAElB,MAAO,CACL5P,KAAMA,EACNnV,KAAMmgB,EACN/I,cAAgBmO,EAAcI,EAAiB,KAAKvgB,QAAQ,GAC5DiS,eAAiBmO,EAAeG,EAAiB,KAAKvgB,QAAQ,GAC9D8R,aAAcqO,EACdpO,cAAeqO,EACfxO,iBAAkB2O,EAClB9Y,SAAUE,GAAU,EAAIF,EACxBoK,qBAAsB1I,QAxD9B,2BAAuC,IA5BvC,8BAyFA,OAAO4W,E,cCjzBMS,OA1Bf,WAAgB,IAAD,EACiBrkB,mBAAS,MAD1B,mBACNqe,EADM,KACGja,EADH,KAEb,OACE,kBAAC,IAAD,CAAQkgB,SAAS,sCACf,kBAAC,IAAD,CAAMC,GAAG,IAAItL,MAAO,CAAEuL,eAAgB,SACpC,wBAAIplB,UAAU,SAAd,mBAGF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOqlB,OAAO,EAAMC,KAAK,KACvB,kBAAC,EAAD,CAAYtgB,WAAYA,KAE1B,kBAAC,IAAD,CAAOqgB,OAAO,EAAMC,KAAK,qBACvB,kBAAC,GAAD,CAAYrG,QAASA,KAEvB,kBAAC,IAAD,CAAOqG,KAAK,YACV,kBAAC,GAAD,CAAYrG,QAASA,KAEvB,kBAAC,IAAD,CAAOqG,KAAK,KACV,wDCfUC,QACW,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS/a,MACvB,2DCZJgb,IAAS5T,OACP,kBAAC,IAAM6T,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBpf,MAAK,SAAAqf,GACJA,EAAaC,gBAEdjf,OAAM,SAAAkf,GACL3nB,QAAQ2nB,MAAMA,EAAMznB,c","file":"static/js/main.84bc651b.chunk.js","sourcesContent":["export const validateFormat = (content) => {\r\n  let format = /^>fwd[\\s\\S]{2}[ACGTacgt]+[\\s\\S]{1,2}>rev[\\s\\S]{1,2}[ACGTacgt]+[\\s\\S]{1,2}>prb[\\s\\S]{1,2}[ACGTacgt]+[\\s\\S]{1,2}$/;\r\n  let correct_format = format.exec(content);\r\n  return correct_format !== null;\r\n};\r\n\r\nexport const getRandomInt = (min, max) => {\r\n  const lower_r = Math.floor(min);\r\n  const upper_r = Math.floor(max);\r\n  return Math.floor(lower_r + Math.random() * (upper_r - lower_r));\r\n};\r\n\r\n// credit: https://davidwalsh.name/function-debounce\r\n// Returns a function, that, as long as it continues to be invoked, will not\r\n// be triggered. The function will be called after it stops being called for\r\n// N milliseconds. If `immediate` is passed, trigger the function on the\r\n// leading edge, instead of the trailing.\r\nexport function debounce(func, wait, immediate) {\r\n  let timeout;\r\n  return function () {\r\n    let context = this,\r\n      args = arguments;\r\n    let later = function () {\r\n      timeout = null;\r\n      if (!immediate) func.apply(context, args);\r\n    };\r\n    let callNow = immediate && !timeout;\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(later, wait);\r\n    if (callNow) func.apply(context, args);\r\n  };\r\n}\r\n","import React from 'react';\r\nimport './dropzone.css';\r\nimport { validateFormat } from '../util';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\n\r\nconst DropZone = ({ selectedFiles, setSelectedFiles, setErrorMessage }) => {\r\n\r\n    const dragOver = (e) => {\r\n        e.preventDefault();\r\n    }\r\n    const dragEnter = (e) => {\r\n        e.preventDefault();\r\n    }\r\n    const dragLeave = (e) => {\r\n        e.preventDefault();\r\n    }\r\n    const fileDrop = (e) => {\r\n        e.preventDefault();\r\n        const data = e.dataTransfer\r\n        const files = data.files;\r\n        checkFiles(files)\r\n    }\r\n\r\n    const filesSelected = async (e) => {\r\n        const files = e.target.files;\r\n        await checkFiles(files)\r\n    }\r\n    const checkFiles = async (files) => {\r\n        let to_store = []\r\n        for (let file of files) {\r\n            to_store = to_store.concat(await handleFile(file))\r\n        }\r\n        setSelectedFiles(selectedFiles.concat(...to_store))\r\n    }\r\n    const handleFile = async (file) => {\r\n        try {\r\n            const to_return = await readFile(file)\r\n            return to_return\r\n        } catch (e) {\r\n            console.warn(e.message)\r\n        }\r\n    }\r\n\r\n    const readFile = (file) => {\r\n        const reader = new FileReader();\r\n        console.log(file)\r\n        return new Promise((resolve, reject) => {\r\n            reader.onload = function (event) {\r\n                if (validateFormat(event.target.result)) {\r\n                    file['invalid'] = false\r\n                    file['content'] = event.target.result\r\n                    file['id'] = file.name\r\n                } else {\r\n                    console.log('file loaded but invalid format');\r\n                    setErrorMessage('File not a recognized format. Please check')\r\n                    file['invalid'] = true\r\n                }\r\n                resolve(file);\r\n            }\r\n            reader.onerror = function () {\r\n                reader.abort()\r\n                reject(new DOMException(\"Problem parsing input file.\"));\r\n            }\r\n\r\n            reader.readAsText(file, \"UTF-8\");\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Form.Group controlId='fasta-sequence'>\r\n            <label htmlFor='fasta-input' id='fasta-input-label'>\r\n                <Container className='drop-container' onDragOver={dragOver}\r\n                    onDragEnter={dragEnter}\r\n                    onDragLeave={dragLeave}\r\n                    onDrop={fileDrop}>\r\n                    <div className=\"drop-message\">\r\n                        <div className=\"upload-icon\"></div>\r\n                        Drag & Drop files here or click to upload\r\n                    </div>\r\n                    <input\r\n                        className=\"file-input\"\r\n                        id=\"fasta-input\"\r\n                        type=\"file\"\r\n                        onChange={filesSelected}\r\n                        multiple\r\n                    />\r\n                </Container>\r\n            </label>\r\n        </Form.Group>\r\n    );\r\n}\r\n\r\nexport default DropZone;","\r\nimport React, { useState, useEffect } from 'react'\r\nimport './textArea.css'\r\nimport Form from 'react-bootstrap/Form'\r\nimport { validateFormat } from '../util'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nconst TextArea = ({ setTextFieldFasta }) => {\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n    const [textAreaValue, setTextAreaValue] = useState('')\r\n    // const [fileAttached, setFileAttached] = useState(false)\r\n    const inputSample = `>fwd\\nGTGAAATGGTCATGTGTGGCGG\\n>rev\\nTATGCTAATAGTGTTTTTAACATTTG\\n>prb\\nCAGGTGGAACCTCATCAGGAGATGC`\r\n\r\n    useEffect(() => {\r\n        if (validateFormat(textAreaValue)) {\r\n            console.log('sequence oKAY!', textAreaValue);\r\n            // const lastMod = Date.now()\r\n            // const tempDate = new Date(lastMod)\r\n            // const file = {\r\n            //     \"content\": textAreaValue,\r\n            //     \"invalid\": false,\r\n            //     \"lastModified\": lastMod,\r\n            //     \"lastModifiedDate\": tempDate,\r\n            //     \"name\": `fasta${lastMod}`,\r\n            //     'size': getRandomInt(80, 90)\r\n            // }\r\n            setTextFieldFasta([{\r\n                \"invalid\": false,\r\n                \"content\": textAreaValue,\r\n                \"id\": \"text_input_fasta\",\r\n            }])\r\n        } else {\r\n            console.log('Nope');\r\n            setTextFieldFasta([])\r\n            setErrorMessage('Sequence not recognized! Please check.')\r\n        }\r\n    }, [textAreaValue, setTextFieldFasta])\r\n\r\n    const handleChange = (e) => {\r\n        const content = e.target.value\r\n        setTextAreaValue(content)\r\n    }\r\n    const enterSample = () => {\r\n        setTextAreaValue(inputSample)\r\n    }\r\n    return (\r\n        <Form.Group controlId='fasta-sequence'>\r\n            <Row className='fasta-input-header'>\r\n                <Col>\r\n                    <Form.Label className='fasta-input-title'>\r\n                        Fasta Sequence\r\n                    </Form.Label>\r\n                </Col>\r\n                <Col className=\"sample-fasta\">\r\n                    <Button variant='secondary' size='sm' onClick={enterSample}>Sample Input</Button>\r\n                </Col>\r\n            </Row>\r\n            <Form.Control\r\n                as='textarea'\r\n                placeholder=\"Input Fasta Seq here.\"\r\n                onChange={handleChange}\r\n                type=\"text\"\r\n                value={textAreaValue}\r\n                className='mx-sm-lg-auto'\r\n                aria-describedby=\"fastaSequenceHelpBlock\"\r\n            />\r\n            <Form.Text id=\"fastaSequenceHelpBlock\" muted>\r\n                Format for the primer sequence should be as follows:{<br />}\r\n                <strong>\r\n                    {inputSample\r\n                        .split('\\n')\r\n                        .map((value, i) => <p key={i}>{value}</p>)}\r\n                </strong>\r\n            </Form.Text>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n                {errorMessage}\r\n            </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n    )\r\n}\r\n\r\nexport default TextArea","import './previewPane.css'\r\nimport React from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\nconst PreviewPane = ({ show, handleClose, content }) => {\r\n    const formatContent = (content) => {\r\n        const regex = /\\s+/g;\r\n        const newline_matches = [...content.matchAll(regex)]\r\n        let result = []\r\n        for (let i = 0; i < newline_matches.length; i++) {\r\n            if (i === 0) {\r\n                result = result.concat(content.slice(0, newline_matches[0].index))\r\n            }\r\n            else {\r\n\r\n                result = result.concat(content.slice(newline_matches[i - 1].index + 1, newline_matches[i].index))\r\n            }\r\n        }\r\n        return result\r\n    }\r\n    return (\r\n        <Modal show={show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Fasta Primer Preview</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>{formatContent(content).map((value, index) => <p key={index}>{value}</p>)}</Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"primary\" onClick={handleClose}>\r\n                    Close\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>)\r\n}\r\n\r\nexport default PreviewPane","import './fileDisplay.css';\r\nimport React, { useState } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport PreviewPane from '../previewPane/previewPane';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst FileDisplay = ({ file, errorMessage, setSelectedFiles }) => {\r\n    const [preview, setPreview] = useState('')\r\n    const [previewOpen, setPreviewOpen] = useState(false)\r\n    const fileSize = (size) => {\r\n        if (size === 0) return '0 Bytes';\r\n        const k = 1024;\r\n        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n        const i = Math.floor(Math.log(size) / Math.log(k));\r\n        return parseFloat((size / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n    }\r\n\r\n    const fileType = (fileName) => {\r\n        const fileType = fileName.substring(fileName.lastIndexOf('.') + 1, fileName.length)\r\n        if (fileType.length === fileName.length) {\r\n            return 'Fasta'\r\n        }\r\n        else {\r\n            return fileType\r\n        }\r\n    }\r\n\r\n    const removeFile = (fileName) => {\r\n        setSelectedFiles(prevFiles => prevFiles.filter(file => file.name !== fileName))\r\n    }\r\n    const openPreview = (file) => {\r\n        setPreview(file.content)\r\n        setPreviewOpen(true)\r\n    }\r\n\r\n    return <Container className=\"file-status-bar\">\r\n        <Row>\r\n            <div className=\"file-type-logo\"></div>\r\n            <div className=\"file-type\">{fileType(file.name)}</div>\r\n            <Col lg={5} md={12} className='file-info'>\r\n                <div className={`file-name ${file.invalid ? 'file-error' : ''}`} onClick={file.invalid ? () => removeFile(file.name) : () => openPreview(file)}>{file.name}</div>\r\n                <div className=\"file-size\">({fileSize(file.size)})</div>\r\n            </Col>\r\n            <Col lg={4} md={8} className='file-error-message'>\r\n                {file.invalid\r\n                    ? <div className='file-error-message-text'>({errorMessage})</div>\r\n                    : null}\r\n            </Col>\r\n            <Col lg={2} md={2} className=\"file-remove\" >\r\n                <Button onClick={() => removeFile(file.name)} variant='danger' size='sm'>Remove</Button>\r\n            </Col>\r\n        </Row>\r\n        <PreviewPane show={previewOpen} handleClose={() => setPreviewOpen(false)} content={preview} />\r\n    </Container >\r\n}\r\n\r\nexport default FileDisplay;","import axios from \"axios\";\r\n\r\n// const baseURL =\r\n//   \"https://mendel2.bii.a-star.edu.sg/METHODS/corona/gamma/cgi-bin/cgi_scripts/primerMVP.py\";\r\nconst baseURL = \"http://localhost:3001\";\r\n\r\nconst checkFile = (file) => {\r\n  return axios.post(`${baseURL}`, file);\r\n};\r\n\r\nconst checkFiles = (files) => {\r\n  const to_send = { data: files };\r\n  // return axios.post(`${baseURL}`, to_send);\r\n  return axios.post(`${baseURL}/check_primers`, to_send);\r\n};\r\n\r\nexport default { checkFile, checkFiles };\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Collapse from \"react-bootstrap/Collapse\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport Fade from \"react-bootstrap/Fade\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport DropZone from \"../../components/dropzone/dropzone\";\r\nimport TextArea from \"../../components/textArea/textArea\";\r\nimport FileDisplay from \"../../components/fileDisplay/fileDisplay\";\r\nimport primerCheckService from \"../..//services/primerCheck\";\r\nimport \"./uploadPage.css\";\r\n\r\nconst UploadPage = ({ setResults }) => {\r\n  const [showSubmit, setShowSubmit] = useState(false);\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n  const [displayedFiles, setDisplayedFiles] = useState([]);\r\n  const [validFiles, setValidFiles] = useState([]);\r\n  const [textFieldFasta, setTextFieldFasta] = useState([]);\r\n  const [fileErrorMessage, setFileErrorMessage] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [open, setOpen] = useState(true);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const openId = \"open-containers\";\r\n\r\n  useEffect(() => {\r\n    const filteredFiles = selectedFiles.reduce((files, current) => {\r\n      const match = files.find((file) => file.name === current.name);\r\n      if (match) {\r\n        return files;\r\n      } else {\r\n        return files.concat(current);\r\n      }\r\n    }, []);\r\n    setDisplayedFiles([...filteredFiles]);\r\n  }, [selectedFiles]);\r\n\r\n  useEffect(() => {\r\n    const filteredFiles = displayedFiles.reduce((files, current) => {\r\n      return current.invalid ? files : files.concat(current);\r\n    }, []);\r\n    setValidFiles(filteredFiles);\r\n  }, [displayedFiles]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      (validFiles.length === displayedFiles.length &&\r\n        validFiles.length !== 0 &&\r\n        textFieldFasta.length === 0) ||\r\n      (textFieldFasta.length !== 0 && validFiles.length === 0)\r\n    ) {\r\n      console.log(validFiles);\r\n      setErrorMessage(\"\");\r\n      return setShowSubmit(true);\r\n    } else if (textFieldFasta.length !== 0 && validFiles.length !== 0) {\r\n      setShowSubmit(false);\r\n      setErrorMessage(\r\n        \"Either upload a single sequence through input or select files to upload! Not Both!\"\r\n      );\r\n    }\r\n    setShowSubmit(false);\r\n  }, [validFiles, displayedFiles, textFieldFasta]);\r\n\r\n  const resetStates = () => {\r\n    setShowSubmit(false);\r\n    setSelectedFiles([]);\r\n    setTextFieldFasta([]);\r\n    setFileErrorMessage(\"\");\r\n    setErrorMessage(\"\");\r\n  };\r\n  const submitForm = () => {\r\n    console.log(validFiles, textFieldFasta);\r\n    setOpen(!open);\r\n    setIsLoading(true);\r\n    setTimeout(() => {\r\n      primerCheckService\r\n        .checkFiles(validFiles.length === 0 ? textFieldFasta : validFiles)\r\n        .then((response) => {\r\n          resetStates();\r\n          setIsLoading(false);\r\n          console.log(\"response is\", response);\r\n          setResults(JSON.stringify(response.data));\r\n          history.push(\"/results/Overview\");\r\n        })\r\n        .catch((e) => console.log(e));\r\n    }, 500);\r\n  };\r\n  return (\r\n    <div>\r\n      <Collapse id={openId} in={open}>\r\n        <div className=\"collapse-container\">\r\n          <Container>\r\n            <Form noValidate>\r\n              <TextArea setTextFieldFasta={setTextFieldFasta} />\r\n              <p className=\"alternative-upload\">OR</p>\r\n              <DropZone\r\n                selectedFiles={selectedFiles}\r\n                setSelectedFiles={setSelectedFiles}\r\n                setErrorMessage={setFileErrorMessage}\r\n              />\r\n            </Form>\r\n            <Container className=\"file-display-container\">\r\n              {displayedFiles.map((file, index) => (\r\n                <FileDisplay\r\n                  file={file}\r\n                  errorMessage={fileErrorMessage}\r\n                  setSelectedFiles={setSelectedFiles}\r\n                  key={index}\r\n                />\r\n              ))}\r\n            </Container>\r\n          </Container>\r\n        </div>\r\n      </Collapse>\r\n      <Container>\r\n        <Row className=\"upload-error-message\">{errorMessage}</Row>\r\n        {showSubmit ? (\r\n          <Fade in={open}>\r\n            <Button\r\n              id={openId}\r\n              aria-controls={openId}\r\n              aria-expanded={open}\r\n              onClick={submitForm}\r\n              disabled={isLoading}\r\n            >\r\n              {isLoading ? (\r\n                <Spinner\r\n                  as=\"span\"\r\n                  className=\"loader\"\r\n                  animation=\"border\"\r\n                  size=\"sm\"\r\n                  role=\"status\"\r\n                  aria-hidden=\"true\"\r\n                />\r\n              ) : null}\r\n              {isLoading ? \"Loading...\" : \"Submit\"}\r\n            </Button>\r\n          </Fade>\r\n        ) : null}\r\n        {isLoading ? (\r\n          <Fade in={!open}>\r\n            <Container className=\"loading-container\">\r\n              <Spinner\r\n                id={openId}\r\n                as=\"span\"\r\n                animation=\"border\"\r\n                role=\"status\"\r\n                variant=\"dark\"\r\n              />\r\n            </Container>\r\n          </Fade>\r\n        ) : null}\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadPage;\r\n","import React from \"react\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\n\r\nconst animatedComponents = makeAnimated();\r\n\r\nfunction SelectDropdown({\r\n  onChange,\r\n  options,\r\n  placeholder,\r\n  // value = [],\r\n  isLoading = false,\r\n  defaultValue = [],\r\n}) {\r\n  /**\r\n   * @param {function} onChange: Takes in Array(Objects) of selected objects, null if nothing is selected\r\n   * @param {Object} Options: Select Options. Should contain a \"value\" and \"label\" key\r\n   * @param {Array} defaultValue: The list of default options\r\n   * @param {bool} isLoading: Indicates if loading animation shows or not\r\n   * @param {string} placeholder: Hint text when there is nothing selected\r\n   * @param {Array} value: list of items that is selected\r\n   */\r\n  return (\r\n    <Select\r\n      closeMenuOnSelect={false}\r\n      components={animatedComponents}\r\n      defaultValue={defaultValue}\r\n      // value={value}\r\n      isMulti\r\n      isSearchable\r\n      isClearable\r\n      isLoading={isLoading}\r\n      placeholder={placeholder}\r\n      onChange={onChange}\r\n      options={options}\r\n    />\r\n  );\r\n}\r\nexport default SelectDropdown;\r\n","import React from \"react\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nfunction NumberRangeFilter({\r\n  data,\r\n  id,\r\n  value,\r\n  minVal,\r\n  maxVal,\r\n  step,\r\n  setFilter,\r\n}) {\r\n  const [min, max] = React.useMemo(() => {\r\n    const primerDetails = Object.values(data);\r\n    const combinedList = primerDetails.reduce((combined, currVal) => {\r\n      combined.push(...currVal);\r\n      return combined;\r\n    }, []);\r\n    let min = combinedList.length ? combinedList[0][id] : 0;\r\n    let max = combinedList.length ? combinedList[0][id] : 0;\r\n    combinedList.forEach((row) => {\r\n      min = Math.min(row[id], min);\r\n      max = Math.max(row[id], max);\r\n    });\r\n    return [min, max];\r\n  }, [data, id]);\r\n\r\n  const debounceFilter = (val, isMin) => {\r\n    isMin\r\n      ? setFilter((old = []) => [val, old[1]])\r\n      : setFilter((old = []) => [old[0], val]);\r\n  };\r\n\r\n  return (\r\n    <Form className=\"filter\">\r\n      <Form.Row>\r\n        <Col className=\"pr-md-0\" sm={12} md={6} lg={12}>\r\n          <Form.Control\r\n            as=\"input\"\r\n            value={value[0] || \"\"}\r\n            type=\"number\"\r\n            onChange={(e) => {\r\n              const val = step.isInteger\r\n                ? parseInt(e.target.value, 10) || 0\r\n                : parseFloat(e.target.value || 0);\r\n              debounceFilter(val, true);\r\n            }}\r\n            placeholder={`Min (${min})`}\r\n            size=\"sm\"\r\n            min={minVal}\r\n            max={maxVal}\r\n            step={step}\r\n          />\r\n        </Col>\r\n        <Col className=\"pr-md-0\" sm={12} md={6} lg={12}>\r\n          <Form.Control\r\n            value={value[1] || \"\"}\r\n            type=\"number\"\r\n            onChange={(e) => {\r\n              const val = step.isInteger\r\n                ? parseInt(e.target.value, 10) || 0\r\n                : parseFloat(e.target.value || 0);\r\n              debounceFilter(val, false);\r\n            }}\r\n            placeholder={`Max (${max})`}\r\n            size=\"sm\"\r\n            min={minVal}\r\n            max={maxVal}\r\n            step={step}\r\n          />\r\n        </Col>\r\n      </Form.Row>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default NumberRangeFilter;\r\n","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Collapse from \"react-bootstrap/Collapse\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { AiFillCaretDown, AiFillCaretRight } from \"react-icons/ai\";\r\nfunction FilterGroup({\r\n  title,\r\n  groupId,\r\n  buttonText,\r\n  component,\r\n  variant = \"light\",\r\n  isOpen = false,\r\n  size = \"sm\",\r\n}) {\r\n  const [show, setShow] = React.useState(isOpen);\r\n  return (\r\n    <Col>\r\n      <Button\r\n        onClick={() => {\r\n          setShow(!show);\r\n        }}\r\n        className=\"show-group mb-3 mt-3\"\r\n        aria-controls={groupId}\r\n        aria-expanded={show}\r\n        variant={variant}\r\n        size={size}\r\n      >\r\n        {show ? <AiFillCaretDown /> : <AiFillCaretRight />}\r\n        {show ? `${buttonText}` : `${buttonText}`}\r\n      </Button>\r\n      <Collapse in={show}>\r\n        <div>{component}</div>\r\n      </Collapse>\r\n    </Col>\r\n  );\r\n}\r\nexport default FilterGroup;\r\n","import React from \"react\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AiOutlineQuestionCircle, AiTwotoneCalendar } from \"react-icons/ai\";\r\nimport DateRangePicker from \"@wojtekmaj/react-daterange-picker\";\r\nimport SelectDropdown from \"../selectDropdown/selectDropdown\";\r\nimport NumberRangeFilter from \"./minMaxFilter\";\r\n\r\nimport FilterGroup from \"./filterGroup\";\r\nimport \"./itemFilter.css\";\r\n\r\nconst help = {\r\n  miss:\r\n    \"Sets the min and max number of misses in the virus sequence to be consider a miss\",\r\n  miss3:\r\n    \"Sets the min and max number of misses in the 3' end (last 5 nucleotides) of the virus sequence to be considered a miss\",\r\n  match:\r\n    \"Sets the min and max percentage of match for a virus sequence to be considered a miss\",\r\n  primer: \"Select the primers to display\",\r\n  pType: \"Select which part of the primer to display\",\r\n  country:\r\n    \"Selects the countries to display. Total will be over selected countries then. To change, check extra settings\",\r\n  absDiff:\r\n    \"Show the difference from the current bar and the previous bar if enable (The last bar will be compared against another bar off charts)\",\r\n  daysBetweenCompare: \"Sets the number of days between comparison\",\r\n  numBars: \"Sets the number of bars to be displayed\",\r\n  countryTotal:\r\n    \"Sets whether selected country will be used as total or all submission within said time frame will be used as total\",\r\n  cumulative:\r\n    \"Divides daily mutation count by total number of submissions thus far\",\r\n  lookBack:\r\n    \"Sets the number of days to be used when aggregating the number of submissions and mutations\",\r\n  date: \"Selects the dates of interest.\",\r\n};\r\n\r\nconst Switch = ({\r\n  id,\r\n  className,\r\n  checked,\r\n  onChange,\r\n  ariaControls = \"\",\r\n  ariaExpanded = \"\",\r\n  disabled = false,\r\n}) => {\r\n  return (\r\n    <label\r\n      id={id}\r\n      className={`switch ${className}`}\r\n      aria-controls={ariaControls}\r\n      aria-expanded={ariaExpanded}\r\n    >\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={checked}\r\n        onChange={onChange}\r\n        disabled={disabled}\r\n      />\r\n      <span className=\"slider round\"></span>\r\n    </label>\r\n  );\r\n};\r\n\r\nconst MissDefinition = ({\r\n  baseData,\r\n  miss,\r\n  setMiss,\r\n  miss3,\r\n  setMiss3,\r\n  match,\r\n  setMatch,\r\n}) => {\r\n  return (\r\n    <Row>\r\n      <Col className=\"mb-3 pr-lg-0 \" xs={12} lg={4}>\r\n        <InputGroup size=\"sm\" className=\"\">\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text>\r\n              Total Misses\r\n              <AiOutlineQuestionCircle className=\"pl-1\" data-tip={help.miss} />\r\n            </InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <NumberRangeFilter\r\n            data={baseData}\r\n            minVal={0}\r\n            maxVal={100}\r\n            step={1}\r\n            value={miss}\r\n            setFilter={setMiss}\r\n            id=\"misses\"\r\n          />\r\n        </InputGroup>\r\n      </Col>\r\n\r\n      <Col className=\"mb-3 pr-lg-0 pl-lg-0\" xs={12} lg={4}>\r\n        <InputGroup size=\"sm\">\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text>\r\n              Misses in 3' End\r\n              <AiOutlineQuestionCircle className=\"pl-1\" data-tip={help.miss3} />\r\n            </InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <NumberRangeFilter\r\n            data={baseData}\r\n            minVal={0}\r\n            maxVal={100}\r\n            step={1}\r\n            value={miss3}\r\n            setFilter={setMiss3}\r\n            id=\"misses3\"\r\n          />\r\n        </InputGroup>\r\n      </Col>\r\n      <Col className=\"mb-3 pl-lg-0 pr-lg-0\" xs={12} lg={4}>\r\n        <InputGroup size=\"sm\">\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text>\r\n              Homology %\r\n              <AiOutlineQuestionCircle className=\"pl-1\" data-tip={help.match} />\r\n            </InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <NumberRangeFilter\r\n            data={baseData}\r\n            minVal={0}\r\n            maxVal={100}\r\n            step={0.01}\r\n            value={match}\r\n            setFilter={setMatch}\r\n            id=\"match_pct\"\r\n          />\r\n        </InputGroup>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nconst BarGraphSettings = ({\r\n  isBar,\r\n  setIsBar,\r\n  daysBetweenComparison,\r\n  setDaysBetweenComparison,\r\n  numberOfBars,\r\n  setNumberOfBars,\r\n  showAbsDiff,\r\n  setShowAbsDiff,\r\n}) => {\r\n  return (\r\n    <Row>\r\n      <Col sm={12} lg={2}>\r\n        <InputGroup className=\"mb-3\" size=\"sm\">\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text>Show</InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <Switch\r\n            type=\"checkbox\"\r\n            checked={isBar}\r\n            onChange={() => setIsBar(!isBar)}\r\n            aria-controls=\"use-bars\"\r\n            aria-expanded={isBar}\r\n          />\r\n        </InputGroup>\r\n      </Col>\r\n      <Col sm={12} lg={3}>\r\n        <InputGroup className=\"mb-3\" size=\"sm\">\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text>\r\n              Absolute Diff\r\n              <AiOutlineQuestionCircle\r\n                className=\"pl-1\"\r\n                data-tip={help.absDiff}\r\n              />\r\n            </InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <Switch\r\n            type=\"checkbox\"\r\n            checked={showAbsDiff}\r\n            onChange={() => setShowAbsDiff(!showAbsDiff)}\r\n            disabled={!isBar}\r\n          />\r\n        </InputGroup>\r\n      </Col>\r\n      <Col sm={12} lg={4}>\r\n        <InputGroup className=\"mb-3\" size=\"sm\">\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text>\r\n              Days between Comparison\r\n              <AiOutlineQuestionCircle\r\n                className=\"pl-1\"\r\n                data-tip={help.daysBetweenCompare}\r\n              />\r\n            </InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <Form.Control\r\n            value={daysBetweenComparison.toString()}\r\n            disabled={!isBar}\r\n            as=\"input\"\r\n            type=\"number\"\r\n            min={1}\r\n            max={200}\r\n            step={1}\r\n            onChange={(e) => {\r\n              const val = e.target.value;\r\n              setDaysBetweenComparison(parseInt(val, 10) || 0);\r\n            }}\r\n          />\r\n        </InputGroup>\r\n      </Col>\r\n      <Col sm={12} lg={3}>\r\n        <InputGroup className=\"mb-3\" size=\"sm\">\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text>\r\n              Number of bars\r\n              <AiOutlineQuestionCircle\r\n                className=\"pl-1\"\r\n                data-tip={help.numBars}\r\n              />\r\n            </InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <Form.Control\r\n            value={numberOfBars.toString()}\r\n            disabled={!isBar}\r\n            as=\"input\"\r\n            type=\"number\"\r\n            min={1}\r\n            max={20}\r\n            step={1}\r\n            onChange={(e) => {\r\n              const val = e.target.value;\r\n              setNumberOfBars(parseInt(val, 10) || 0);\r\n            }}\r\n          />\r\n        </InputGroup>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nconst LineGraphSettings = ({ countryAsTotal, setCountryAsTotal }) => {\r\n  return (\r\n    <InputGroup className=\"mb-3\" size=\"sm\">\r\n      <InputGroup.Prepend>\r\n        <InputGroup.Text htmlFor=\"country\">\r\n          Selected Countries as Total\r\n          <AiOutlineQuestionCircle\r\n            className=\"pl-1\"\r\n            data-tip={help.countryTotal}\r\n          />\r\n        </InputGroup.Text>\r\n      </InputGroup.Prepend>\r\n      <Switch\r\n        id=\"country\"\r\n        className=\"use-country\"\r\n        checked={countryAsTotal}\r\n        onChange={(e) => {\r\n          setCountryAsTotal(e.target.checked);\r\n        }}\r\n      />\r\n    </InputGroup>\r\n  );\r\n};\r\nconst GraphMapSetting = ({\r\n  isBar,\r\n  setIsBar,\r\n  daysBetweenComparison,\r\n  setDaysBetweenComparison,\r\n  numberOfBars,\r\n  setNumberOfBars,\r\n  showAbsDiff,\r\n  setShowAbsDiff,\r\n  countryAsTotal,\r\n  setCountryAsTotal,\r\n  setTimeFrameBrush,\r\n  timeFrameBrush,\r\n  dateRange,\r\n  lookBack,\r\n  setLookBack,\r\n  useCum,\r\n  setUseCum,\r\n  variant,\r\n}) => {\r\n  const dateChange = (e) => {\r\n    console.log(\"e :>> \", e);\r\n    setTimeFrameBrush((e || []).map((value) => new Date(value)) || []);\r\n  };\r\n\r\n  return (\r\n    <Col>\r\n      <Row>\r\n        <Col xs={12} lg={5} className=\"pr-lg-0\">\r\n          <InputGroup className=\"mb-3 \" size=\"sm\">\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text>\r\n                Date Range\r\n                <AiOutlineQuestionCircle\r\n                  className=\"pl-1\"\r\n                  data-tip={help.date}\r\n                />\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <DateRangePicker\r\n              maxDate={new Date(dateRange[dateRange.length - 1])}\r\n              minDate={new Date(dateRange[0])}\r\n              calendarIcon={<AiTwotoneCalendar />}\r\n              onChange={dateChange}\r\n              value={timeFrameBrush.length === 0 ? null : timeFrameBrush}\r\n            />\r\n          </InputGroup>\r\n        </Col>\r\n\r\n        <Col xs={12} lg={3} className=\"pr-lg-0 pl-lg-0\">\r\n          <InputGroup className=\"mb-3\" size=\"sm\">\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text htmlFor=\"cumulative\">\r\n                Cumulative\r\n                <AiOutlineQuestionCircle\r\n                  className=\"pl-1\"\r\n                  data-tip={help.cumulative}\r\n                />\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Switch\r\n              id=\"cumulative\"\r\n              className=\"use-cumulative\"\r\n              checked={useCum}\r\n              onChange={(e) => {\r\n                setUseCum(e.target.checked);\r\n              }}\r\n            />\r\n          </InputGroup>\r\n        </Col>\r\n\r\n        <Col xs={12} lg={4} className=\"pl-lg-0\">\r\n          <InputGroup className=\"mb-3 \" size=\"sm\">\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text>\r\n                Look Back\r\n                <AiOutlineQuestionCircle\r\n                  className=\"pl-1\"\r\n                  data-tip={help.lookBack}\r\n                />\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              value={lookBack.toString()}\r\n              disabled={useCum}\r\n              as=\"input\"\r\n              type=\"number\"\r\n              min={0}\r\n              max={200}\r\n              step={1}\r\n              onChange={(e) => {\r\n                const val = e.target.value;\r\n                setLookBack(parseInt(val, 10) || 0);\r\n              }}\r\n            />\r\n          </InputGroup>\r\n        </Col>\r\n      </Row>\r\n      <FilterGroup\r\n        variant={variant}\r\n        buttonText={\"Bar Graph Setting\"}\r\n        groupId={\"bar-graph-setting\"}\r\n        component={\r\n          <BarGraphSettings\r\n            isBar={isBar}\r\n            setIsBar={setIsBar}\r\n            daysBetweenComparison={daysBetweenComparison}\r\n            setDaysBetweenComparison={setDaysBetweenComparison}\r\n            numberOfBars={numberOfBars}\r\n            setNumberOfBars={setNumberOfBars}\r\n            showAbsDiff={showAbsDiff}\r\n            setShowAbsDiff={setShowAbsDiff}\r\n          />\r\n        }\r\n      />\r\n      <FilterGroup\r\n        variant={variant}\r\n        buttonText={\"Line Graph Settings\"}\r\n        groupId={\"line-graph-settings\"}\r\n        component={\r\n          <LineGraphSettings\r\n            countryAsTotal={countryAsTotal}\r\n            setCountryAsTotal={setCountryAsTotal}\r\n          />\r\n        }\r\n      />\r\n    </Col>\r\n  );\r\n};\r\n\r\nconst AdvanceFilters = ({\r\n  baseData,\r\n  dateRange,\r\n  timeFrameBrush,\r\n  setTimeFrameBrush,\r\n  lookBack,\r\n  setLookBack,\r\n  useCum,\r\n  setUseCum,\r\n  miss,\r\n  setMiss,\r\n  miss3,\r\n  setMiss3,\r\n  match,\r\n  setMatch,\r\n  countryAsTotal,\r\n  setCountryAsTotal,\r\n  isBar,\r\n  setIsBar,\r\n  daysBetweenComparison,\r\n  setDaysBetweenComparison,\r\n  numberOfBars,\r\n  setNumberOfBars,\r\n  showAbsDiff,\r\n  setShowAbsDiff,\r\n}) => {\r\n  const variant = \"light\";\r\n  return (\r\n    <FilterGroup\r\n      variant={variant}\r\n      buttonText={\"More Settings\"}\r\n      groupId=\"Advance-settings\"\r\n      component={\r\n        <>\r\n          <Row>\r\n            <FilterGroup\r\n              variant={variant}\r\n              buttonText={\"Adjust Miss Definition\"}\r\n              groupId={\"miss-definitions\"}\r\n              component={\r\n                <MissDefinition\r\n                  baseData={baseData}\r\n                  miss={miss}\r\n                  setMiss={setMiss}\r\n                  miss3={miss3}\r\n                  setMiss3={setMiss3}\r\n                  match={match}\r\n                  setMatch={setMatch}\r\n                />\r\n              }\r\n            />\r\n          </Row>\r\n          <Row>\r\n            <FilterGroup\r\n              variant={variant}\r\n              buttonText={\"Graph and Map Settings\"}\r\n              groupId={\"graph-map-setting\"}\r\n              component={\r\n                <GraphMapSetting\r\n                  variant={variant}\r\n                  setTimeFrameBrush={setTimeFrameBrush}\r\n                  timeFrameBrush={timeFrameBrush}\r\n                  dateRange={dateRange}\r\n                  lookBack={lookBack}\r\n                  setLookBack={setLookBack}\r\n                  useCum={useCum}\r\n                  setUseCum={setUseCum}\r\n                  isBar={isBar}\r\n                  setIsBar={setIsBar}\r\n                  daysBetweenComparison={daysBetweenComparison}\r\n                  setDaysBetweenComparison={setDaysBetweenComparison}\r\n                  numberOfBars={numberOfBars}\r\n                  setNumberOfBars={setNumberOfBars}\r\n                  showAbsDiff={showAbsDiff}\r\n                  setShowAbsDiff={setShowAbsDiff}\r\n                  countryAsTotal={countryAsTotal}\r\n                  setCountryAsTotal={setCountryAsTotal}\r\n                />\r\n              }\r\n            />\r\n          </Row>\r\n        </>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nfunction BasicFilters({\r\n  baseData,\r\n  setIsProcessing,\r\n  isProcessing,\r\n  setCountries,\r\n  primers,\r\n  setPrimers,\r\n  setPType,\r\n}) {\r\n  const history = useHistory();\r\n\r\n  function primerChange(setSelectedPrimers) {\r\n    return (selection) => {\r\n      setIsProcessing(true);\r\n      const toFilter = selection || [];\r\n      if (toFilter.length === 0) {\r\n        setSelectedPrimers(toFilter);\r\n        history.push(`/results/Overview`);\r\n      } else {\r\n        const selection = toFilter.map((val) => val.value);\r\n        setSelectedPrimers(selection);\r\n        history.push(`/results/${selection.join(\"&\")}`);\r\n      }\r\n    };\r\n  }\r\n\r\n  function selectionChange(setSelection) {\r\n    return (selection) => {\r\n      setIsProcessing(true);\r\n      const toFilter = selection || [];\r\n      if (toFilter.length === 0) {\r\n        setSelection(toFilter);\r\n      } else {\r\n        const selection = toFilter.map((val) => {\r\n          if (val.value === val.label) return val.value;\r\n          return val;\r\n        });\r\n        setSelection(selection);\r\n      }\r\n    };\r\n  }\r\n  return (\r\n    <FilterGroup\r\n      isOpen={true}\r\n      variant=\"light\"\r\n      buttonText={\"Basic Filters\"}\r\n      groupId=\"basic-settings\"\r\n      component={\r\n        <>\r\n          <Row className=\"mb-3\">\r\n            <Col xs={12} lg={7} className=\"mb-3\">\r\n              <Row>\r\n                <Col sm={12} lg={3} className=\"mr-0 pr-lg-0\">\r\n                  <InputGroup.Text>\r\n                    Primers\r\n                    <AiOutlineQuestionCircle\r\n                      className=\"pl-1\"\r\n                      data-tip={help.primer}\r\n                    />\r\n                  </InputGroup.Text>\r\n                </Col>\r\n                <Col sm={12} lg={9} className=\"pl-lg-0\">\r\n                  <SelectDropdown\r\n                    value={primers}\r\n                    onChange={primerChange(setPrimers)}\r\n                    options={React.useMemo(() => {\r\n                      return Object.keys(baseData).map((val) => {\r\n                        return { label: val, value: val };\r\n                      });\r\n                    }, [baseData])}\r\n                    placeholder={\"Select Primers to Display\"}\r\n                    isLoading={isProcessing}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n            <Col xs={12} lg={5} className=\"mb-3\">\r\n              <Row>\r\n                <Col sm={12} lg={5} className=\"mr-0 pr-lg-0\">\r\n                  <InputGroup.Text>\r\n                    Primer Type\r\n                    <AiOutlineQuestionCircle\r\n                      className=\"pl-1\"\r\n                      data-tip={help.pType}\r\n                    />\r\n                  </InputGroup.Text>\r\n                </Col>\r\n                <Col sm={12} lg={7} className=\"pl-lg-0\">\r\n                  <SelectDropdown\r\n                    onChange={selectionChange(setPType)}\r\n                    options={React.useMemo(\r\n                      () => [\r\n                        { label: \"fwd\", value: \"fwd\" },\r\n                        { label: \"rev\", value: \"rev\" },\r\n                        { label: \"prb\", value: \"prb\" },\r\n                      ],\r\n                      []\r\n                    )}\r\n                    placeholder={\"Specify Type\"}\r\n                    isLoading={isProcessing}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"mb-3\">\r\n            <Col sm={12} lg={2} className=\"mr-0 pr-lg-0\">\r\n              <InputGroup.Text>\r\n                Counties\r\n                <AiOutlineQuestionCircle\r\n                  className=\"pl-1\"\r\n                  data-tip={help.country}\r\n                />\r\n              </InputGroup.Text>\r\n            </Col>\r\n            <Col sm={12} lg={10} className=\"pl-lg-0\">\r\n              <SelectDropdown\r\n                className=\"country-picker\"\r\n                onChange={selectionChange(setCountries)}\r\n                options={React.useMemo(() => {\r\n                  const unique = new Set();\r\n                  const options = Object.values(baseData).reduce(\r\n                    (options, currVal) => {\r\n                      const countries = currVal.reduce((countries, virus) => {\r\n                        if (unique.has(virus.country_name)) {\r\n                          return countries;\r\n                        }\r\n                        unique.add(virus.country_name);\r\n                        countries.push({\r\n                          label: virus.country_name,\r\n                          value: virus.ISO_A3,\r\n                        });\r\n                        return countries;\r\n                      }, []);\r\n                      options.push(...countries);\r\n                      return options;\r\n                    },\r\n                    []\r\n                  );\r\n                  return options;\r\n                }, [baseData])}\r\n                placeholder={\"Filter Countries\"}\r\n                isLoading={isProcessing}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nconst ItemFilters = ({\r\n  baseData,\r\n  dateRange,\r\n  timeFrameBrush,\r\n  setTimeFrameBrush,\r\n  lookBack,\r\n  setLookBack,\r\n  useCum,\r\n  setUseCum,\r\n  miss,\r\n  setMiss,\r\n  miss3,\r\n  setMiss3,\r\n  match,\r\n  setMatch,\r\n  countryAsTotal,\r\n  setCountryAsTotal,\r\n  setCountries,\r\n  primers,\r\n  setPrimers,\r\n  setPType,\r\n  isProcessing,\r\n  setIsProcessing,\r\n  isBar,\r\n  setIsBar,\r\n  daysBetweenComparison,\r\n  setDaysBetweenComparison,\r\n  numberOfBars,\r\n  setNumberOfBars,\r\n  showAbsDiff,\r\n  setShowAbsDiff,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <BasicFilters\r\n          baseData={baseData}\r\n          isProcessing={isProcessing}\r\n          setIsProcessing={setIsProcessing}\r\n          setCountries={setCountries}\r\n          primers={primers}\r\n          setPrimers={setPrimers}\r\n          setPType={setPType}\r\n        />\r\n      </Row>\r\n      <Row>\r\n        <AdvanceFilters\r\n          baseData={baseData}\r\n          dateRange={dateRange}\r\n          timeFrameBrush={timeFrameBrush}\r\n          setTimeFrameBrush={setTimeFrameBrush}\r\n          lookBack={lookBack}\r\n          setLookBack={setLookBack}\r\n          useCum={useCum}\r\n          setUseCum={setUseCum}\r\n          miss={miss}\r\n          setMiss={setMiss}\r\n          miss3={miss3}\r\n          setMiss3={setMiss3}\r\n          match={match}\r\n          setMatch={setMatch}\r\n          countryAsTotal={countryAsTotal}\r\n          setCountryAsTotal={setCountryAsTotal}\r\n          setPType={setPType}\r\n          isBar={isBar}\r\n          setIsBar={setIsBar}\r\n          daysBetweenComparison={daysBetweenComparison}\r\n          setDaysBetweenComparison={setDaysBetweenComparison}\r\n          numberOfBars={numberOfBars}\r\n          setNumberOfBars={setNumberOfBars}\r\n          showAbsDiff={showAbsDiff}\r\n          setShowAbsDiff={setShowAbsDiff}\r\n        />\r\n      </Row>\r\n      <ReactTooltip html={true}></ReactTooltip>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemFilters;\r\n","// Code by React-table doc team\r\n\r\nimport React from \"react\";\r\nimport { useAsyncDebounce } from \"react-table\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\n// Define a default UI for filtering\r\nexport function GlobalFilter({\r\n  preGlobalFilteredRows,\r\n  globalFilter,\r\n  setGlobalFilter,\r\n  isHelpOn = true,\r\n}) {\r\n  const count = preGlobalFilteredRows.length;\r\n  const [value, setValue] = React.useState(globalFilter);\r\n  const onChange = useAsyncDebounce((value) => {\r\n    setGlobalFilter(value || undefined);\r\n  }, 200);\r\n\r\n  return (\r\n    <div className=\"general-search\">\r\n      <Form.Row>\r\n        <Form.Label column sm={12} lg={2}>\r\n          General Search\r\n        </Form.Label>\r\n        <Col sm={12} lg={10}>\r\n          <Form.Control\r\n            type=\"text\"\r\n            value={value || \"\"}\r\n            onChange={(e) => {\r\n              setValue(e.target.value);\r\n              onChange(e.target.value);\r\n            }}\r\n            placeholder={`Search the ${count} entries`}\r\n          />\r\n        </Col>\r\n      </Form.Row>\r\n      {isHelpOn ? (\r\n        <Form.Row>\r\n          <Form.Label column sm={0} lg={2}></Form.Label>\r\n          <Col sm={12} lg={10}>\r\n            <Form.Text className=\"text-muted\">\r\n              This does not affect plot data. If you want to set filters, set\r\n              the options above.\r\n            </Form.Text>\r\n          </Col>\r\n        </Form.Row>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\n// This is a custom UI for our 'between' or number range\r\n// filter. It uses two number boxes and filters rows to\r\n// ones that have values between the two\r\n// export function NumberRangeFilter({\r\n//   column: { filterValue = [], preFilteredRows, setFilter, id, Header },\r\n// }) {\r\n//   const [min, max] = React.useMemo(() => {\r\n//     let min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\r\n//     let max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\r\n//     preFilteredRows.forEach((row) => {\r\n//       min = Math.min(row.values[id], min);\r\n//       max = Math.max(row.values[id], max);\r\n//     });\r\n//     return [min, max];\r\n//   }, [id, preFilteredRows]);\r\n//   const debounceFilter = useAsyncDebounce((val) => {\r\n//     setFilter((old = []) => [val ? parseInt(val, 10) : undefined, old[1]]);\r\n//   }, 200);\r\n\r\n//   return (\r\n//     <Form className=\"filter\">\r\n//       <Form.Row>\r\n//         <Col>\r\n//           <Form.Control\r\n//             as=\"input\"\r\n//             value={filterValue[0] || \"\"}\r\n//             type=\"number\"\r\n//             onChange={(e) => {\r\n//               const val = e.target.value;\r\n//               debounceFilter(val);\r\n//             }}\r\n//             placeholder={`Min (${min})`}\r\n//             size=\"sm\"\r\n//             min={0}\r\n//             max={200}\r\n//           />\r\n//         </Col>\r\n//         <Col>\r\n//           <Form.Control\r\n//             value={filterValue[1] || \"\"}\r\n//             type=\"number\"\r\n//             onChange={(e) => {\r\n//               const val = e.target.value;\r\n//               setFilter((old = []) => [\r\n//                 old[0],\r\n//                 val ? parseInt(val, 10) : undefined,\r\n//               ]);\r\n//             }}\r\n//             placeholder={`Max (${max})`}\r\n//             size=\"sm\"\r\n//           />\r\n//         </Col>\r\n//       </Form.Row>\r\n//     </Form>\r\n//   );\r\n// }\r\n\r\n// Define a default UI for filtering\r\n// export function CountryColumnFilter({\r\n//   column: { filterValue, preFilteredRows, setFilter },\r\n// }) {\r\n//   //   const count = preFilteredRows.length;\r\n\r\n//   return (\r\n//     <Form.Control\r\n//       className=\"filter\"\r\n//       value={filterValue || \"\"}\r\n//       onChange={(e) => {\r\n//         setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\r\n//       }}\r\n//       placeholder={`Filter Country`}\r\n//     />\r\n//   );\r\n// }\r\n\r\n// // This is a custom filter UI for selecting\r\n// // a unique option from a list\r\n// export function SelectColumnFilter({\r\n//   column: { filterValue, setFilter, preFilteredRows, id, Header },\r\n// }) {\r\n//   // Calculate the options for filtering\r\n//   // using the preFilteredRows\r\n//   const options = React.useMemo(() => {\r\n//     const unique = new Set();\r\n//     preFilteredRows.forEach((row) => {\r\n//       unique.add(row.values[id]);\r\n//     });\r\n//     const options = [...unique.values()].map((val) => {\r\n//       return { value: val, label: val };\r\n//     });\r\n//     return [{ value: \"\", label: \"All\" }, ...options];\r\n//   }, [id, preFilteredRows]);\r\n\r\n//   // Render a multi-select box\r\n//   return (\r\n//     <SelectDropdown\r\n//       onChange={(e) => {\r\n//         const toFilter = e || [];\r\n//         const isAll = toFilter.find((val) => val.value === \"\");\r\n//         if (isAll || toFilter.length === 0) {\r\n//           setFilter(undefined);\r\n//         } else {\r\n//           const selection = toFilter.map((val) => val.value);\r\n//           setFilter(selection);\r\n//         }\r\n//       }}\r\n//       options={options}\r\n//       defaultValue={[]}\r\n//     />\r\n//   );\r\n// }\r\n\r\n// This is a custom filter UI that uses a\r\n// slider to set the filter value between a column's\r\n// min and max values\r\n// function SliderColumnFilter({\r\n//   column: { filterValue, setFilter, preFilteredRows, id },\r\n// }) {\r\n// Calculate the min and max\r\n// using the preFilteredRows\r\n\r\n//   const [min, max] = React.useMemo(() => {\r\n//     let min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\r\n//     let max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\r\n//     preFilteredRows.forEach((row) => {\r\n//       min = Math.min(row.values[id], min);\r\n//       max = Math.max(row.values[id], max);\r\n//     });\r\n//     return [min, max];\r\n//   }, [id, preFilteredRows]);\r\n\r\n//   return (\r\n//     <>\r\n//       <input\r\n//         className=\"filter\"\r\n//         type=\"range\"\r\n//         min={min}\r\n//         max={max}\r\n//         value={filterValue || min}\r\n//         onChange={(e) => {\r\n//           setFilter(parseInt(e.target.value, 10));\r\n//         }}\r\n//       />\r\n//       <button onClick={() => setFilter(undefined)}>Off</button>\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// Define a custom filter filter function!\r\n// function filterGreaterThan(rows, id, filterValue) {\r\n//   return rows.filter((row) => {\r\n//     const rowValue = row.values[id];\r\n//     return rowValue >= filterValue;\r\n//   });\r\n// }\r\n// export function filterContains(rows, id, filterValue) {\r\n//   return rows.filter((row) => {\r\n//     if (filterValue === undefined) {\r\n//       return true;\r\n//     }\r\n//     const rowValue = row.values[id];\r\n//     return filterValue.includes(rowValue);\r\n//   });\r\n// }\r\n\r\n// This is an autoRemove method on the filter function that\r\n// when given the new filter value and returns true, the filter\r\n// will be automatically removed. Normally this is just an undefined\r\n// check, but here, we want to remove the filter if it's not a number\r\n// filterGreaterThan.autoRemove = (val) => typeof val !== \"number\";\r\n\r\n// function App() {\r\n//   const columns = React.useMemo(\r\n//     () => [\r\n//       {\r\n//         Header: \"Name\",\r\n//         columns: [\r\n//           {\r\n//             Header: \"First Name\",\r\n//             accessor: \"firstName\",\r\n//           },\r\n//           {\r\n//             Header: \"Last Name\",\r\n//             accessor: \"lastName\",\r\n//             // Use our custom `fuzzyText` filter on this column\r\n//             filter: \"fuzzyText\",\r\n//           },\r\n//         ],\r\n//       },\r\n//       {\r\n//         Header: \"Info\",\r\n//         columns: [\r\n//           {\r\n//             Header: \"Age\",\r\n//             accessor: \"age\",\r\n//             Filter: SliderColumnFilter,\r\n//             filter: \"equals\",\r\n//           },\r\n//           {\r\n//             Header: \"Visits\",\r\n//             accessor: \"visits\",\r\n//             Filter: NumberRangeColumnFilter,\r\n//             filter: \"between\",\r\n//           },\r\n//           {\r\n//             Header: \"Status\",\r\n//             accessor: \"status\",\r\n//             Filter: SelectColumnFilter,\r\n//             filter: \"includes\",\r\n//           },\r\n//           {\r\n//             Header: \"Profile Progress\",\r\n//             accessor: \"progress\",\r\n//             Filter: SliderColumnFilter,\r\n//             filter: filterGreaterThan,\r\n//           },\r\n//         ],\r\n//       },\r\n//     ],\r\n//     []\r\n//   );\r\n\r\n//   return (\r\n//     <div></div>\r\n//   );\r\n// }\r\n","import React from \"react\";\r\nimport {\r\n  usePagination,\r\n  useTable,\r\n  useGlobalFilter,\r\n  useFlexLayout,\r\n  useResizeColumns,\r\n  useSortBy,\r\n} from \"react-table\";\r\nimport BTable from \"react-bootstrap/Table\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Collapse from \"react-bootstrap/Collapse\";\r\nimport { AiFillCaretDown, AiFillCaretRight } from \"react-icons/ai\";\r\nimport { FaSort, FaSortDown, FaSortUp } from \"react-icons/fa\";\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nimport \"./tableDisplay.css\";\r\n\r\nimport { GlobalFilter } from \"./filter\";\r\n\r\nfunction DataTable({ title, data, columns, isCombined, isCollapsable }) {\r\n  const [showTable, setShowTable] = React.useState(true);\r\n\r\n  if (isCollapsable) {\r\n    return (\r\n      <>\r\n        <Button\r\n          onClick={() => {\r\n            setShowTable(!showTable);\r\n          }}\r\n          className=\"show-table mb-3 mt-3\"\r\n          aria-controls=\"collapse-table\"\r\n          aria-expanded={showTable}\r\n          variant=\"light\"\r\n        >\r\n          {showTable ? <AiFillCaretDown /> : <AiFillCaretRight />}\r\n          {showTable ? `Close Table` : `Show Table`}\r\n        </Button>\r\n        <Collapse in={showTable}>\r\n          <div>\r\n            <TableDisplay\r\n              id=\"collapse-table\"\r\n              title={title}\r\n              data={data}\r\n              columns={columns}\r\n              isCombined={isCombined}\r\n            />\r\n          </div>\r\n        </Collapse>\r\n      </>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <TableDisplay\r\n        id=\"collapse-table\"\r\n        title={title}\r\n        data={data}\r\n        columns={columns}\r\n        isCombined={isCombined}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction TableDisplay({ title, data, columns, isCombined }) {\r\n  const csv_headers = columns.map((header) => {\r\n    return { label: header.Header, key: header.accessor };\r\n  });\r\n  if (!isCombined) {\r\n    csv_headers.push(\r\n      ...[\r\n        {\r\n          label: \"ISO A3\",\r\n          key: \"ISO_A3\",\r\n        },\r\n        {\r\n          label: \"Virus Match Index (Start, End)\",\r\n          key: \"virus_match_idx\",\r\n        },\r\n        {\r\n          label: \"Primer Match Index (Start, End)\",\r\n          key: \"query_match_idx\",\r\n        },\r\n      ]\r\n    );\r\n  }\r\n\r\n  const filterTypes = React.useMemo(\r\n    () => ({\r\n      // Or, override the default text filter to use\r\n      // \"startWith\"\r\n      text: (rows, id, filterValue) => {\r\n        return rows.filter((row) => {\r\n          const rowValue = row.values[id];\r\n          return rowValue !== undefined\r\n            ? String(rowValue)\r\n                .toLowerCase()\r\n                .startsWith(String(filterValue).toLowerCase())\r\n            : true;\r\n        });\r\n      },\r\n    }),\r\n    []\r\n  );\r\n\r\n  const defaultColumn = React.useMemo(\r\n    () => ({\r\n      minWidth: 80,\r\n      width: 160,\r\n      maxWidth: 600,\r\n    }),\r\n    []\r\n  );\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    page,\r\n\r\n    // pagination details\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize },\r\n\r\n    // filtering details\r\n    state,\r\n    // visibleColumns,\r\n    preGlobalFilteredRows,\r\n    setGlobalFilter,\r\n    // filteredRows,\r\n    // rows,\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      initialState: { pageIndex: 0 },\r\n      defaultColumn,\r\n      filterTypes,\r\n    },\r\n    // useFilters,\r\n    useGlobalFilter,\r\n    useSortBy,\r\n    usePagination,\r\n    useFlexLayout,\r\n    useResizeColumns\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"table-title\">{title}</h2>\r\n      <GlobalFilter\r\n        preGlobalFilteredRows={preGlobalFilteredRows}\r\n        globalFilter={state.globalFilter}\r\n        setGlobalFilter={setGlobalFilter}\r\n      />\r\n\r\n      {/* <pre>\r\n        <code>{JSON.stringify(state, null, 2)}</code>\r\n      </pre> */}\r\n      <BTable\r\n        {...getTableProps()}\r\n        variant=\"light\"\r\n        //   size=\"lg\"\r\n        responsive\r\n        striped\r\n        bordered\r\n        hover\r\n      >\r\n        <thead className=\"thead\">\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => {\r\n                return (\r\n                  <th {...column.getHeaderProps()} className=\"table-header\">\r\n                    {column.render(\"Header\")}\r\n                    <span {...column.getSortByToggleProps()}>\r\n                      {column.isSorted ? (\r\n                        column.isSortedDesc ? (\r\n                          <FaSortDown className=\"pl-1\" />\r\n                        ) : (\r\n                          <FaSortUp className=\"pl-1\" />\r\n                        )\r\n                      ) : (\r\n                        <FaSort className=\"pl-1\" />\r\n                      )}\r\n                    </span>\r\n                    {column.canResize && (\r\n                      <div\r\n                        {...column.getResizerProps()}\r\n                        className={`resizer ${\r\n                          column.isResizing ? \"isResizing\" : \"\"\r\n                        }`}\r\n                      />\r\n                    )}\r\n                    {/* {column.canFilter ? (\r\n                      <div>{column.render(\"Filter\")}</div>\r\n                    ) : null} */}\r\n                  </th>\r\n                );\r\n              })}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()} className=\"tbody\">\r\n          {page.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  if (cell.column.id === \"match_diag\") {\r\n                    const display_str = cell.value.split(\" \").map((val) => {\r\n                      return val.split(\"\");\r\n                    });\r\n                    return (\r\n                      <td\r\n                        {...cell.getCellProps()}\r\n                        className=\"table-cell match-diag\"\r\n                      >\r\n                        {display_str.map((val, idx) => {\r\n                          return (\r\n                            <div key={idx}>\r\n                              {val.map((char, idx) => {\r\n                                return (\r\n                                  <span key={idx} className={char}>\r\n                                    {char}\r\n                                  </span>\r\n                                );\r\n                              })}\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </td>\r\n                    );\r\n                  }\r\n                  return (\r\n                    <td\r\n                      {...cell.getCellProps()}\r\n                      className={`table-cell ${\r\n                        cell.column.id === \"country_name\" ||\r\n                        cell.column.id === \"virus_name\"\r\n                          ? \"text-align-start\"\r\n                          : \"\"\r\n                      }`}\r\n                    >\r\n                      {cell.render(\"Cell\")}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n          {!canNextPage ? (\r\n            <tr className=\"end-of-data\">\r\n              <td>{`---------- All Data Displayed ----------`}</td>\r\n            </tr>\r\n          ) : null}\r\n        </tbody>\r\n      </BTable>\r\n      <Row className=\"pagination\">\r\n        <Col className=\"page-controls\" sm={12} md={4}>\r\n          <Button\r\n            variant=\"light\"\r\n            onClick={() => gotoPage(0)}\r\n            disabled={!canPreviousPage}\r\n          >\r\n            {\"<<\"}\r\n          </Button>\r\n          <Button\r\n            variant=\"light\"\r\n            onClick={() => previousPage()}\r\n            disabled={!canPreviousPage}\r\n          >\r\n            {\"<\"}\r\n          </Button>\r\n          <Button\r\n            variant=\"light\"\r\n            onClick={() => nextPage()}\r\n            disabled={!canNextPage}\r\n          >\r\n            {\">\"}\r\n          </Button>\r\n          <Button\r\n            variant=\"light\"\r\n            onClick={() => gotoPage(pageCount - 1)}\r\n            disabled={!canNextPage}\r\n          >\r\n            {\">>\"}\r\n          </Button>\r\n          <p>\r\n            {\" \"}\r\n            Page <strong>{pageIndex + 1} </strong> of{\" \"}\r\n            <strong>{pageOptions.length}</strong>\r\n          </p>\r\n        </Col>\r\n        <Col className=\"manual-page-selection\" sm={12} md={4}>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"page-info\">Go to page:</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              type=\"number\"\r\n              defaultValue={pageIndex + 1}\r\n              onChange={(e) => {\r\n                const page = e.target.value ? Number(e.target.value) - 1 : 0;\r\n                gotoPage(page);\r\n              }}\r\n              aria-label=\"Go To Page\"\r\n              aria-describedby=\"page-info\"\r\n            />\r\n          </InputGroup>\r\n        </Col>\r\n        <Col className=\"results-per-page\" sm={12} md={4}>\r\n          <Form.Control\r\n            value={pageSize}\r\n            onChange={(e) => {\r\n              setPageSize(Number(e.target.value));\r\n            }}\r\n            as=\"select\"\r\n          >\r\n            {[10, 20, 30, 40, 50].map((pageSize) => (\r\n              <option key={pageSize} value={pageSize}>\r\n                Show {pageSize}\r\n              </option>\r\n            ))}\r\n          </Form.Control>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <CSVLink\r\n          data={data}\r\n          headers={csv_headers}\r\n          filename={isCombined ? \"combined_miss.csv\" : \"sensitivity_miss.csv\"}\r\n          className=\"btn btn-dark\"\r\n          target=\"_blank\"\r\n        >\r\n          Download Table\r\n        </CSVLink>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\nexport default DataTable;\r\n","import React from \"react\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\nimport { debounce } from \"../util\";\r\n\r\nconst LineGraph = ({\r\n  title,\r\n  title2,\r\n  data,\r\n  primers,\r\n  dates,\r\n  setTimeFrameBrush,\r\n  timeFrameBrush,\r\n  showModal,\r\n  setModalInfo,\r\n  subtitle = \"\",\r\n  subtitle2 = \"\",\r\n}) => {\r\n  function buildDataSet(data) {\r\n    const datasets = [];\r\n    for (const dataset of data) {\r\n      datasets.push({\r\n        dimensions: [\r\n          \"countries_considered\",\r\n          \"date\",\r\n          \"mutation3_abs\",\r\n          \"mutation3_pct\",\r\n          \"mutation_abs\",\r\n          \"mutation_pct\",\r\n          \"name\",\r\n          \"submission_count\",\r\n        ],\r\n        source: dataset,\r\n      });\r\n    }\r\n    return datasets;\r\n  }\r\n  function getMutationPlot(primers, dataPlot, xIndex, yIndex) {\r\n    const plots = [];\r\n    for (let i = 0; i < primers.length; i++) {\r\n      plots.push({\r\n        name: `${primers[i]}`,\r\n        type: \"line\",\r\n        hoverAnimation: false,\r\n        xAxisIndex: xIndex,\r\n        yAxisIndex: yIndex,\r\n        encode: {\r\n          x: \"date\",\r\n          y: dataPlot,\r\n        },\r\n        datasetIndex: i,\r\n      });\r\n    }\r\n    return plots;\r\n  }\r\n  function getDateIndex(date, dates) {\r\n    if (date === undefined) return undefined;\r\n    const index = dates.findIndex((val) => {\r\n      const dateString = date.toISOString().slice(0, 10);\r\n      return dateString === val;\r\n    });\r\n    return index === -1 ? undefined : index;\r\n  }\r\n  function getStartDate(dates, date, lookBack) {\r\n    const initDate = new Date(dates[0]);\r\n    let startDate = new Date(date);\r\n    startDate.setDate(startDate.getDate() - lookBack);\r\n    if (startDate < initDate) {\r\n      startDate = initDate;\r\n    }\r\n    return startDate.toISOString().slice(0, 10);\r\n  }\r\n\r\n  const startIndex =\r\n    ((getDateIndex(timeFrameBrush[0], dates) || 0) * 100) / dates.length;\r\n  const endIndex =\r\n    ((getDateIndex(timeFrameBrush[1], dates) + 1 || dates.length) * 100) /\r\n    dates.length;\r\n\r\n  const mutationPlot = getMutationPlot(primers, \"mutation_pct\", 0, 0);\r\n  const mutation3Plot = getMutationPlot(primers, \"mutation3_pct\", 1, 1);\r\n  const datasets = buildDataSet(data, primers);\r\n  // console.log(\"data :>> \", data);\r\n  // console.log(\"mutationPlot :>> \", mutationPlot);\r\n  // console.log(\"datasets :>> \", datasets);\r\n\r\n  const option = {\r\n    title: [\r\n      {\r\n        text: title,\r\n        subtext: subtitle,\r\n        left: \"center\",\r\n      },\r\n      {\r\n        text: title2,\r\n        subtext: subtitle2,\r\n        left: \"center\",\r\n        top: \"center\",\r\n      },\r\n    ],\r\n    tooltip: {\r\n      trigger: \"axis\",\r\n      axisPointer: {\r\n        type: \"cross\",\r\n        animation: false,\r\n      },\r\n      backgroundColor: \"rgba(50,50,50, 0.9)\",\r\n      formatter: function (params) {\r\n        let baseDetails = params[0].data;\r\n        let date = baseDetails.date;\r\n        let startDate =\r\n          baseDetails.lookBack === -1\r\n            ? dates[0]\r\n            : getStartDate(dates, date, baseDetails.lookBack);\r\n        let submissionCount = baseDetails.submission_count;\r\n        let countries =\r\n          baseDetails.countries_considered.length === 0\r\n            ? \"all available Countries\"\r\n            : `${baseDetails.countries_considered.length} countries`;\r\n\r\n        let tooltip = `<div>Details from ${startDate} to ${date}<br/>Total Submissions: ${submissionCount} from ${countries}</div><br/>`;\r\n\r\n        for (let i = 0; i < primers.length; i++) {\r\n          tooltip += `<div>${params[i].data.name}\r\n            <br/>\r\n            <strong>Abs Mutation:</strong> ${params[i].data.mutation_abs}<br/>\r\n            <strong>Abs Mutation in 3' end:</strong> ${params[i].data.mutation3_abs}<br/>\r\n            <strong>Mutation %:</strong> ${params[i].data.mutation_pct}<br/>\r\n            <strong>Mutation % in 3' end:</strong> ${params[i].data.mutation3_pct}</div><br/>`;\r\n        }\r\n        return tooltip;\r\n      },\r\n      position: function (pos, params, el, elRect, size) {\r\n        let obj = {};\r\n        obj[[\"top\", \"bottom\"][+(pos[1] < size.viewSize[1] / 2)]] = 10;\r\n        obj[[\"left\", \"right\"][+(pos[0] < size.viewSize[0] / 2)]] = 30;\r\n        return obj;\r\n      },\r\n    },\r\n    legend: {\r\n      data: primers,\r\n      orient: \"vertical\",\r\n      type: \"scroll\",\r\n      top: \"5%\",\r\n      right: 0,\r\n    },\r\n    // toolbox: {\r\n    //   feature: {\r\n    //     dataZoom: {\r\n    //       yAxisIndex: \"none\",\r\n    //     },\r\n    //     restore: {},\r\n    //     saveAsImage: {},\r\n    //   },\r\n    // },\r\n    axisPointer: {\r\n      link: { xAxisIndex: \"all\" },\r\n    },\r\n    dataZoom: [\r\n      {\r\n        type: \"slider\",\r\n        show: true,\r\n        realtime: true,\r\n        start: startIndex,\r\n        end: endIndex,\r\n        xAxisIndex: [0, 1],\r\n        top: \"95%\",\r\n      },\r\n      {\r\n        type: \"inside\",\r\n        realtime: true,\r\n        start: startIndex,\r\n        end: endIndex,\r\n        xAxisIndex: [0, 1],\r\n      },\r\n    ],\r\n    grid: [\r\n      { bottom: \"60%\", right: \"15%\" },\r\n      { top: \"57%\", right: \"15%\" },\r\n    ],\r\n    xAxis: [\r\n      {\r\n        name: \"date\",\r\n        nameLocation: \"middle\",\r\n        nameTextStyle: {\r\n          align: \"center\",\r\n          verticalAlign: \"top\",\r\n          padding: [6, 0, 0, 0],\r\n        },\r\n        gridIndex: 0,\r\n        type: \"category\",\r\n      },\r\n      {\r\n        name: \"date\",\r\n        nameLocation: \"middle\",\r\n        nameTextStyle: {\r\n          align: \"center\",\r\n          verticalAlign: \"top\",\r\n          padding: [6, 0, 0, 0],\r\n        },\r\n\r\n        gridIndex: 1,\r\n        type: \"category\",\r\n      },\r\n    ],\r\n    yAxis: [\r\n      {\r\n        name: \"Total Percentage (%)\",\r\n        gridIndex: 0,\r\n        nameLocation: \"middle\",\r\n        nameGap: 25,\r\n      },\r\n      {\r\n        name: \"Total Percentage (%)\",\r\n        gridIndex: 1,\r\n        nameLocation: \"middle\",\r\n        nameGap: 25,\r\n      },\r\n    ],\r\n    dataset: datasets,\r\n    series: [...mutationPlot, ...mutation3Plot],\r\n  };\r\n\r\n  const seeEvent = (e) => {\r\n    console.log(e);\r\n    setModalInfo((prev) => {\r\n      return {\r\n        ...prev,\r\n        date: e.data.date,\r\n        lookBack: e.data.lookBack,\r\n        primer: e.data.name,\r\n        country: null,\r\n      };\r\n    });\r\n    showModal();\r\n  };\r\n\r\n  function legendChange({ selected }) {\r\n    // TODO (Eb): Figure out how to handle legend selection\r\n    // const primers = [];\r\n    // for (const primer of Object.keys(selected)) {\r\n    //   if (selected[primer]) {\r\n    //     primers.push(primer);\r\n    //   }\r\n    // }\r\n    // setPrimers(primers);\r\n  }\r\n\r\n  const dataZoomChange = debounce((e) => {\r\n    let data = e;\r\n    if (e.batch !== undefined) {\r\n      data = e.batch[0];\r\n    }\r\n    const startIndex = Math.floor((dates.length * data.start) / 100);\r\n    const endIndex = Math.floor((dates.length * data.end) / 100);\r\n    const startStringDate = dates[startIndex] || dates[0];\r\n    const endStringDate = dates[endIndex] || dates[dates.length - 1];\r\n    let startDate = new Date(startStringDate);\r\n    let endDate = new Date(endStringDate);\r\n    startDate.setDate(startDate.getDate());\r\n    endDate.setDate(endDate.getDate());\r\n    setTimeFrameBrush([startDate, endDate]);\r\n  }, 800);\r\n\r\n  let onEvents = {\r\n    click: seeEvent,\r\n    legendselectchanged: legendChange,\r\n    dataZoom: dataZoomChange,\r\n  };\r\n  return (\r\n    <ReactEcharts\r\n      option={option}\r\n      style={{ height: \"475px\", width: \"100%\" }}\r\n      onEvents={onEvents}\r\n      notMerge={true}\r\n    />\r\n  );\r\n};\r\n\r\nexport default LineGraph;\r\n","import React from \"react\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\n\r\nconst BarGraph = ({\r\n  title,\r\n  title2,\r\n  data,\r\n  showAbsDiff,\r\n  subtitle = \"\",\r\n  subtitle2 = \"\",\r\n}) => {\r\n  function getBarLabel(data, idx, toPlot) {\r\n    const fontSize = 9;\r\n    return {\r\n      show: true,\r\n      position: \"insideTop\",\r\n      distance: 10,\r\n      align: \"center\",\r\n      verticalAlign: \"top\",\r\n      rotate: 0,\r\n      formatter: function (params) {\r\n        if (!showAbsDiff) {\r\n          return `${params.data[toPlot]}%`;\r\n        }\r\n        const primer = params.data.name;\r\n        const currVal = data[idx].filter((val) => val.name === primer)[0][\r\n          toPlot\r\n        ];\r\n        const prevVal = data[idx - 1].filter((val) => val.name === primer)[0][\r\n          toPlot\r\n        ];\r\n        const difference = (currVal - prevVal).toFixed(2);\r\n        let label = difference > 0 ? `{p|+` : difference < 0 ? `{n|` : \"{zero|\";\r\n        return `${label}${difference}%}`;\r\n      },\r\n      fontSize: fontSize,\r\n      backgroundColor: \"#232323\",\r\n      textBorderColor: \"transparent\",\r\n      padding: [4, 5, 2, 5],\r\n      rich: {\r\n        p: { color: \"#88ff88\", fontSize: fontSize },\r\n        n: { color: \"#ff8677\", fontSize: fontSize },\r\n        zero: { color: \"#eef\", fontSize: fontSize },\r\n      },\r\n    };\r\n  }\r\n\r\n  function buildDataset(datasets) {\r\n    const data = [];\r\n    for (const dataset of datasets) {\r\n      data.push({\r\n        dimensions: [\r\n          \"countries_considered\",\r\n          \"date\",\r\n          \"mutation3_abs\",\r\n          \"mutation3_pct\",\r\n          \"mutation_abs\",\r\n          \"mutation_pct\",\r\n          \"name\",\r\n          \"submission_count\",\r\n        ],\r\n        source: dataset,\r\n      });\r\n    }\r\n    return data;\r\n  }\r\n\r\n  function buildBarPlot(data, toPlot, xAxisIndex, yAxisIndex) {\r\n    const plots = [];\r\n    for (let i = 1; i < data.length; i++) {\r\n      plots.push({\r\n        name: (data[i][0] || {}).date,\r\n        type: \"bar\",\r\n        barMaxWidth: 40,\r\n        xAxisIndex: xAxisIndex,\r\n        yAxisIndex: yAxisIndex,\r\n        label: getBarLabel(data, i, toPlot),\r\n        encode: {\r\n          x: \"name\",\r\n          y: toPlot,\r\n        },\r\n        datasetIndex: i,\r\n      });\r\n    }\r\n    return plots;\r\n  }\r\n\r\n  const dataset = buildDataset(data);\r\n  const mutation = buildBarPlot(data, \"mutation_pct\", 0, 0);\r\n  const mutation3 = buildBarPlot(data, \"mutation3_pct\", 1, 1);\r\n  // console.log(\"dataset :>> \", dataset);\r\n  // console.log(\"mutation :>> \", mutation);\r\n  // console.log(\"mutation3 :>> \", mutation3);\r\n  const option = {\r\n    title: [\r\n      {\r\n        text: title,\r\n        subtext: subtitle,\r\n        left: \"center\",\r\n      },\r\n      {\r\n        text: title2,\r\n        subtext: subtitle2,\r\n        left: \"center\",\r\n        top: \"52%\",\r\n      },\r\n    ],\r\n    tooltip: {\r\n      trigger: \"axis\",\r\n      formatter: function (params) {\r\n        console.log(\"params :>> \", params);\r\n      },\r\n      axisPointer: {\r\n        type: \"shadow\",\r\n        animation: false,\r\n      },\r\n      position: function (pos, params, el, elRect, size) {\r\n        var obj = { top: 10 };\r\n        obj[[\"left\", \"right\"][+(pos[0] < size.viewSize[0] / 2)]] = 30;\r\n        return obj;\r\n      },\r\n    },\r\n    axisPointer: {\r\n      link: { xAxisIndex: \"all\" },\r\n    },\r\n    grid: [\r\n      { top: \"8%\", bottom: \"65%\" },\r\n      { top: \"57%\", bottom: \"20%\" },\r\n    ],\r\n    xAxis: [\r\n      {\r\n        name: \"primers\",\r\n        gridIndex: 0,\r\n        type: \"category\",\r\n        axisLabel: {\r\n          rotate: 45,\r\n          margin: 15,\r\n        },\r\n      },\r\n      {\r\n        name: \"primers\",\r\n        gridIndex: 1,\r\n        type: \"category\",\r\n        axisLabel: {\r\n          rotate: 45,\r\n          margin: 15,\r\n        },\r\n      },\r\n    ],\r\n    yAxis: [\r\n      {\r\n        name: \"Total Percentage (%)\",\r\n        gridIndex: 0,\r\n        nameLocation: \"middle\",\r\n        nameGap: 50,\r\n      },\r\n      {\r\n        name: \"Total Percentage (%)\",\r\n        gridIndex: 1,\r\n        nameLocation: \"middle\",\r\n        nameGap: 50,\r\n      },\r\n    ],\r\n    dataset: dataset,\r\n    series: [...mutation, ...mutation3],\r\n  };\r\n  const seeEvent = (e) => {\r\n    console.log(e);\r\n  };\r\n  let onEvents = {\r\n    click: seeEvent,\r\n  };\r\n  return (\r\n    <ReactEcharts\r\n      option={option}\r\n      style={{ height: \"600px\", width: \"100%\" }}\r\n      notMerge={true}\r\n      onEvents={onEvents}\r\n    />\r\n  );\r\n};\r\n\r\nexport default BarGraph;\r\n","import React from \"react\";\r\nimport { scaleLinear } from \"d3-scale\";\r\nimport { extent } from \"d3-array\";\r\nimport {\r\n  ZoomableGroup,\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n} from \"react-simple-maps\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nconst geoUrl =\r\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\r\n\r\nconst colorScale = scaleLinear().domain([0, 1]).range([\"#ffedea\", \"#ff5233\"]);\r\n\r\nconst PrimerMap = ({\r\n  title,\r\n  setTooltipContent,\r\n  data,\r\n  lookBack,\r\n  db,\r\n  timeFrameBrush,\r\n  setTimeFrameBrush,\r\n  showModal,\r\n  setModalInfo,\r\n  subtitle = \"\",\r\n}) => {\r\n  const [downloadData, setDownloadData] = React.useState([]);\r\n  const headers = [\r\n    {\r\n      label: \"Country\",\r\n      key: \"country\",\r\n    },\r\n    {\r\n      label: \"ISO A3\",\r\n      key: \"ISO_A3\",\r\n    },\r\n    {\r\n      label: \"Missed %\",\r\n      key: \"missed_pct\",\r\n    },\r\n    {\r\n      label: \"Absolute Misses\",\r\n      key: \"abs_miss\",\r\n    },\r\n    {\r\n      label: \"Submitted Virus\",\r\n      key: \"country_total\",\r\n    },\r\n\r\n    {\r\n      label: \"Start Date\",\r\n      key: \"startDate\",\r\n    },\r\n    {\r\n      label: \"End Date\",\r\n      key: \"endDate\",\r\n    },\r\n  ];\r\n\r\n  function handleClick(countryISO3, endDate, lookBack) {\r\n    const timeFrame = extent(\r\n      data.reduce((dates, data) => {\r\n        if (data.ISO_A3 === countryISO3) {\r\n          dates.push(new Date(data.date));\r\n          return dates;\r\n        } else {\r\n          return dates;\r\n        }\r\n      }, [])\r\n    );\r\n    showModal();\r\n    setModalInfo((prev) => {\r\n      return {\r\n        ...prev,\r\n        primer: null,\r\n        country: countryISO3,\r\n        lookBack: lookBack,\r\n        date: endDate,\r\n      };\r\n    });\r\n  }\r\n\r\n  function downloadDataClick(\r\n    countryMisses,\r\n    countryMissesPct,\r\n    startDate,\r\n    endDate,\r\n    data\r\n  ) {\r\n    return () => {\r\n      const toDownload = [];\r\n      for (const [countryISO, absMiss] of countryMisses) {\r\n        toDownload.push({\r\n          country: data.find((element) => element.ISO_A3 === countryISO)\r\n            .country_name,\r\n          ISO_A3: countryISO,\r\n          country_total: absMiss / (countryMissesPct.get(countryISO) / 100),\r\n          missed_pct: countryMissesPct.get(countryISO),\r\n          abs_miss: absMiss,\r\n          startDate: startDate,\r\n          endDate: endDate,\r\n        });\r\n      }\r\n      console.log(\"fired\", toDownload);\r\n      setDownloadData(toDownload);\r\n    };\r\n  }\r\n\r\n  function getCountryMissCounts(data, lookBack, date) {\r\n    /**\r\n     * @param {Array} data: contains a list of missed virus Objects to be visualized on the map.\r\n     * @returns {Map} Containing the number of misses per country.\r\n     */\r\n    let currData = data;\r\n    if (lookBack >= 0) {\r\n      const endDate = new Date(date);\r\n      const startDate = new Date(date);\r\n      startDate.setDate(startDate.getDate() - lookBack);\r\n      currData = data.filter((val) => {\r\n        const currDate = new Date(val.date);\r\n        return (\r\n          currDate.getTime() <= endDate.getTime() &&\r\n          currDate.getTime() >= startDate.getTime()\r\n        );\r\n      });\r\n    }\r\n    return currData.reduce((count, currData) => {\r\n      count.has(currData.ISO_A3)\r\n        ? count.set(currData.ISO_A3, count.get(currData.ISO_A3) + 1)\r\n        : count.set(currData.ISO_A3, 1);\r\n      return count;\r\n    }, new Map());\r\n  }\r\n\r\n  function getDates(timeFrameBrush, db) {\r\n    if (timeFrameBrush.length === 0) {\r\n      return [Object.keys(db)[0], Object.keys(db)[Object.keys(db).length - 1]];\r\n    } else {\r\n      let startDate = getDateString(timeFrameBrush[0]);\r\n      let endDate = getDateString(timeFrameBrush[1]);\r\n      if (endDate > Object.keys(db)[Object.keys(db).length - 1]) {\r\n        endDate = Object.keys(db)[Object.keys(db).length - 1];\r\n      }\r\n      if (startDate < Object.keys(db)[0]) {\r\n        startDate = Object.keys(db)[0];\r\n      }\r\n      return [startDate, endDate];\r\n    }\r\n  }\r\n\r\n  function getDateString(time) {\r\n    var date = new Date(time);\r\n    return date.toISOString().slice(0, 10);\r\n  }\r\n\r\n  const [startDate, endDate] = getDates(timeFrameBrush, db);\r\n  const countryMisses = getCountryMissCounts(data, lookBack, endDate);\r\n  const countryMissesPct = Array.from(countryMisses.keys()).reduce(\r\n    (accumulated, country) => {\r\n      accumulated.set(\r\n        country,\r\n        (\r\n          (countryMisses.get(country) / (db[endDate][country] || 100)) *\r\n          100\r\n        ).toFixed(2)\r\n      );\r\n      return accumulated;\r\n    },\r\n    new Map()\r\n  );\r\n\r\n  console.log(\"countryMisses :>> \", countryMisses);\r\n  console.log(\"startDate, endDate :>> \", startDate, endDate);\r\n  console.log(\"countryMissesPct :>> \", countryMissesPct);\r\n  const maxPctMiss = Math.max(...Array.from(countryMissesPct.values()));\r\n  console.log(\"maxPctMiss :>> \", maxPctMiss);\r\n  return (\r\n    <Container>\r\n      <h2 className=\"map-title\">{title}</h2>\r\n      <h3 className=\"map-title map-subtitle\">{subtitle}</h3>\r\n      <ComposableMap data-tip=\"\" projectionConfig={{ scale: 200 }}>\r\n        <ZoomableGroup>\r\n          <Geographies geography={geoUrl}>\r\n            {({ geographies }) =>\r\n              geographies.map((geo) => {\r\n                const missCount = countryMisses.get(geo.properties.ISO_A3) || 0;\r\n                const pctMiss =\r\n                  countryMissesPct.get(geo.properties.ISO_A3) || 0;\r\n                return (\r\n                  <Geography\r\n                    key={geo.rsmKey}\r\n                    geography={geo}\r\n                    onMouseEnter={() => {\r\n                      const { NAME } = geo.properties;\r\n                      setTooltipContent(\r\n                        `${NAME}: <br/> \r\n                          ${\r\n                            db[endDate][geo.properties.ISO_A3] || 0\r\n                          } submissions <br/>\r\n                          ${missCount} Absolute Misses.<br/> \r\n                          ${pctMiss}% Miss <br/>\r\n                          `\r\n                      );\r\n                    }}\r\n                    onMouseLeave={() => {\r\n                      setTooltipContent(\"\");\r\n                    }}\r\n                    onClick={() => {\r\n                      handleClick(geo.properties.ISO_A3, endDate, lookBack);\r\n                    }}\r\n                    style={{\r\n                      default: {\r\n                        fill:\r\n                          parseFloat(pctMiss) !== 0\r\n                            ? colorScale(pctMiss / maxPctMiss)\r\n                            : \"#949494\",\r\n                        outline: \"none\",\r\n                      },\r\n                      hover: {\r\n                        fill: \"#afca9d\",\r\n                        cursor: missCount ? \"pointer\" : \"auto\",\r\n                        outline: \"none\",\r\n                      },\r\n                    }}\r\n                  />\r\n                );\r\n              })\r\n            }\r\n          </Geographies>\r\n        </ZoomableGroup>\r\n      </ComposableMap>\r\n      <CSVLink\r\n        data={downloadData}\r\n        headers={headers}\r\n        filename={\"geo_misses.csv\"}\r\n        className=\"btn btn-dark\"\r\n        target=\"_blank\"\r\n        onClick={downloadDataClick(\r\n          countryMisses,\r\n          countryMissesPct,\r\n          startDate,\r\n          endDate,\r\n          data\r\n        )}\r\n      >\r\n        Download Map Data\r\n      </CSVLink>\r\n    </Container>\r\n  );\r\n};\r\nexport default React.memo(PrimerMap);\r\n","import React from \"react\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nimport PrimerMap from \"./primerMap\";\r\nimport \"./primerMap.css\";\r\n\r\nconst MapWithToolTip = ({\r\n  title,\r\n  data,\r\n  lookBack,\r\n  db,\r\n  timeFrameBrush,\r\n  setTimeFrameBrush,\r\n  showModal,\r\n  setModalInfo,\r\n  subtitle = \"\",\r\n}) => {\r\n  const [tooltipContent, setTooltipContent] = React.useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      <PrimerMap\r\n        title={title}\r\n        subtitle={subtitle}\r\n        setTooltipContent={setTooltipContent}\r\n        data={data}\r\n        lookBack={lookBack}\r\n        db={db}\r\n        timeFrameBrush={timeFrameBrush}\r\n        setTimeFrameBrush={setTimeFrameBrush}\r\n        showModal={showModal}\r\n        setModalInfo={setModalInfo}\r\n      />\r\n      <ReactTooltip html={true}>{tooltipContent}</ReactTooltip>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MapWithToolTip;\r\n","import React from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Collapse from \"react-bootstrap/Collapse\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./resultsPage.css\";\r\nimport ItemFilters from \"../../components/ItemFilter/itemFilters\";\r\nimport DataTable from \"../../components/tableDisplay/tableDisplay\";\r\nimport LineGraph from \"../../components/mutGraphs/lineGraph\";\r\nimport BarGraph from \"../../components/mutGraphs/barGraph\";\r\nimport MapWithToolTip from \"../../components/primerMap/mapWithToolTip\";\r\n\r\nDate.prototype.sameDay = function (d) {\r\n  return (\r\n    this.getFullYear() === d.getFullYear() &&\r\n    this.getDate() === d.getDate() &&\r\n    this.getMonth() === d.getMonth()\r\n  );\r\n};\r\n\r\nconst InputData = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <Container>\r\n      <p className=\"no-data\">\r\n        Please make sure that you've uploaded some data first!\r\n      </p>\r\n      <Button onClick={() => history.push(\"/\")}>Upload Data</Button>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst ResultPage = ({ results }) => {\r\n  // Base results from blast\r\n  const result = React.useRef(JSON.parse(results));\r\n  console.log(\"result\", result);\r\n  const baseData = React.useRef(result.current[0] || {});\r\n  const baseTableData = React.useRef(makeTableData(baseData.current));\r\n  const dbCountDaily = React.useRef(parseDb(result.current, 1));\r\n  const dbCountCum = React.useRef(parseDb(result.current, 0));\r\n  const dateRange = React.useRef(Object.keys(dbCountCum.current) || []);\r\n  const dbDailyRangeCache = React.useRef(\r\n    cacheRange(dbCountDaily.current, 0, 14, dateRange.current)\r\n  );\r\n\r\n  const { display } = useParams();\r\n  const toDisplay = display.split(\"&\");\r\n\r\n  // Filtering for table and graph data\r\n  const [miss, setMiss] = React.useState([]);\r\n  const [miss3, setMiss3] = React.useState([]);\r\n  const [match, setMatch] = React.useState([]);\r\n  const [timeFrameBrush, setTimeFrameBrush] = React.useState(\r\n    React.useMemo(() => [], [])\r\n  );\r\n  const [countries, setCountries] = React.useState(React.useMemo(() => [], []));\r\n  const [primers, setPrimers] = React.useState(React.useMemo(() => [], []));\r\n  const [pType, setPType] = React.useState([]);\r\n\r\n  // Filtering for graph data\r\n  const [useCum, setUseCum] = React.useState(false);\r\n  const [countryAsTotal, setCountryAsTotal] = React.useState(true);\r\n  const [lookBack, setLookBack] = React.useState(6);\r\n  const [isBar, setIsBar] = React.useState(true);\r\n  const [daysBetweenComparison, setDaysBetweenComparison] = React.useState(\r\n    lookBack\r\n  );\r\n  const [numberOfBars, setNumberOfBars] = React.useState(1);\r\n  const [showAbsDiff, setShowAbsDiff] = React.useState(true);\r\n\r\n  // Detail Modal\r\n  const [showModal, setShowModal] = React.useState(false);\r\n  const [modalInfo, setModalInfo] = React.useState({\r\n    date: null,\r\n    lookBack: null,\r\n    country: null,\r\n    primer: null,\r\n  });\r\n  const closeModalCb = () => setShowModal(false);\r\n  const showModalCb = React.useCallback(() => setShowModal(true), []);\r\n\r\n  // Misc items\r\n  const [isProcessing, setIsProcessing] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    setTimeout(() => setIsProcessing(false), 500);\r\n  }, [isProcessing]);\r\n\r\n  React.useEffect(() => {\r\n    setDaysBetweenComparison(lookBack === 0 ? 1 : lookBack);\r\n  }, [lookBack]);\r\n\r\n  const overviewColumns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Primer\",\r\n        accessor: \"primer\",\r\n        disableFilters: true,\r\n      },\r\n      {\r\n        Header: \"Accession ID\",\r\n        accessor: \"accession_id\",\r\n        disableFilters: true,\r\n      },\r\n      {\r\n        Header: \"Virus Name\",\r\n        accessor: \"virus_name\",\r\n        disableFilters: true,\r\n        width: 200,\r\n      },\r\n      {\r\n        Header: \"Diagram\",\r\n        accessor: \"match_diag\",\r\n        disableFilters: true,\r\n        width: 450,\r\n      },\r\n      {\r\n        Header: \"Primer Type\",\r\n        accessor: \"type\",\r\n        disableFilters: true,\r\n        width: 120,\r\n      },\r\n      {\r\n        Header: \"Homology %\",\r\n        accessor: \"match_pct\",\r\n      },\r\n      {\r\n        Header: \"Total Miss\",\r\n        accessor: \"misses\",\r\n      },\r\n      {\r\n        Header: \"Misses In 3' End\",\r\n        accessor: \"misses3\",\r\n      },\r\n      {\r\n        Header: \"Date Collected\",\r\n        accessor: \"date\",\r\n        disableFilters: true,\r\n        width: 140,\r\n        show: false,\r\n      },\r\n      {\r\n        Header: \"Country\",\r\n        accessor: \"country_name\",\r\n        disableFilters: true,\r\n      },\r\n    ],\r\n    []\r\n  );\r\n  const combinedCols = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Primer\",\r\n        accessor: \"primer\",\r\n        disableFilters: true,\r\n      },\r\n      {\r\n        Header: \"Accession ID\",\r\n        accessor: \"accession_id\",\r\n        disableFilters: true,\r\n      },\r\n      {\r\n        Header: \"Virus Name\",\r\n        accessor: \"virus_name\",\r\n        disableFilters: true,\r\n        width: 200,\r\n      },\r\n      {\r\n        Header: \"Date Collected\",\r\n        accessor: \"date\",\r\n        disableFilters: true,\r\n        width: 140,\r\n        show: false,\r\n      },\r\n      {\r\n        Header: \"Country\",\r\n        accessor: \"country_name\",\r\n        disableFilters: true,\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const dbActual = React.useMemo(\r\n    () =>\r\n      useCum\r\n        ? dbCountCum.current\r\n        : dbDailyRangeCache.current[lookBack] ||\r\n          getRangeDbCount(dbCountDaily.current, lookBack, dateRange.current),\r\n    [useCum, lookBack]\r\n  );\r\n  const graphBase = React.useMemo(\r\n    () =>\r\n      baseTableData.current.filter(\r\n        dataFilter({\r\n          primers: primers,\r\n          pType: pType,\r\n          countries: countries,\r\n          miss: miss,\r\n          miss3: miss3,\r\n          match: match,\r\n        })\r\n      ),\r\n    [primers, pType, countries, miss, miss3, match]\r\n  );\r\n  const tableData = React.useMemo(\r\n    () => graphBase.filter(dataFilter({ timeFrameBrush: timeFrameBrush })),\r\n    [graphBase, timeFrameBrush]\r\n  );\r\n  const modalData = React.useMemo(\r\n    () =>\r\n      tableData.filter((value) => {\r\n        let isSameDate = true;\r\n        let isWithinFrame = true;\r\n        let isPrimer = true;\r\n        let isCountry = true;\r\n        if (modalInfo[\"date\"] !== null) {\r\n          isSameDate = value.date === modalInfo[0];\r\n        }\r\n        if (modalInfo[\"lookBack\"] !== null || modalInfo[\"lookBack\"] !== -1) {\r\n          const valDate = new Date(value.date);\r\n          const selectedDate = new Date(modalInfo[\"date\"]);\r\n          const startDate = new Date(selectedDate);\r\n          startDate.setDate(startDate.getDate() - modalInfo[\"lookBack\"]);\r\n          isWithinFrame = valDate >= startDate && valDate <= selectedDate;\r\n        }\r\n        if (modalInfo[\"primer\"] !== null) {\r\n          isPrimer = value.primer === modalInfo[\"primer\"];\r\n        }\r\n        if (modalInfo[\"country\"] !== null) {\r\n          isCountry = value.ISO_A3 === modalInfo[\"country\"];\r\n        }\r\n        return (isSameDate || isWithinFrame) && isPrimer && isCountry;\r\n      }),\r\n    [tableData, modalInfo]\r\n  );\r\n\r\n  const graphOverview = React.useMemo(\r\n    () =>\r\n      makeOverview(\r\n        graphBase,\r\n        primers.length === 0 ? Object.keys(baseData.current) : primers,\r\n        dbActual,\r\n        dateRange.current,\r\n        useCum,\r\n        lookBack,\r\n        countryAsTotal,\r\n        countries\r\n      ),\r\n    [graphBase, primers, dbActual, useCum, lookBack, countryAsTotal, countries]\r\n  );\r\n\r\n  const barData = React.useMemo(\r\n    () =>\r\n      isBar\r\n        ? makeBarData(\r\n            graphOverview,\r\n            dateRange.current,\r\n            timeFrameBrush,\r\n            daysBetweenComparison,\r\n            numberOfBars\r\n          )\r\n        : {},\r\n    [graphOverview, numberOfBars, daysBetweenComparison, timeFrameBrush, isBar]\r\n  );\r\n\r\n  const [combinedBase, combinedName] = React.useMemo(\r\n    () => makeIntersection(JSON.parse(JSON.stringify(graphBase))),\r\n    [graphBase]\r\n  );\r\n  const graphCombined = React.useMemo(\r\n    () =>\r\n      makeOverview(\r\n        combinedBase,\r\n        combinedName || [],\r\n        dbActual,\r\n        dateRange.current,\r\n        useCum,\r\n        lookBack,\r\n        countryAsTotal,\r\n        countries\r\n      ),\r\n    [\r\n      combinedBase,\r\n      combinedName,\r\n      dbActual,\r\n      useCum,\r\n      lookBack,\r\n      countryAsTotal,\r\n      countries,\r\n    ]\r\n  );\r\n  const tableCombined = React.useMemo(\r\n    () => combinedBase.filter(dataFilter({ timeFrameBrush: timeFrameBrush })),\r\n    [combinedBase, timeFrameBrush]\r\n  );\r\n\r\n  if (result.current.length !== 0) {\r\n    // console.log(\"baseTableData :>> \", baseTableData);\r\n    // console.log(\"graphBase :>> \", graphBase);\r\n    // console.log(\"tableData :>> \", tableData);\r\n    console.log(\"graphOverview :>> \", graphOverview);\r\n    console.log(\"barData :>> \", barData);\r\n    console.log(\"graphCombined :>> \", graphCombined);\r\n    // console.log(\"tableCombined :>> \", tableCombined);\r\n\r\n    const endDate = new Date(\r\n      timeFrameBrush[1] || dateRange.current[dateRange.current.length - 1]\r\n    );\r\n    const startDate = new Date(\r\n      timeFrameBrush[1] || dateRange.current[dateRange.current.length - 1]\r\n    );\r\n    startDate.setDate(startDate.getDate() - lookBack);\r\n    return (\r\n      <div className=\"display-page\">\r\n        <Container>\r\n          <ItemFilters\r\n            baseData={baseData.current}\r\n            dateRange={dateRange.current}\r\n            timeFrameBrush={timeFrameBrush}\r\n            setTimeFrameBrush={setTimeFrameBrush}\r\n            lookBack={lookBack}\r\n            setLookBack={setLookBack}\r\n            useCum={useCum}\r\n            setUseCum={setUseCum}\r\n            miss={miss}\r\n            setMiss={setMiss}\r\n            miss3={miss3}\r\n            setMiss3={setMiss3}\r\n            match={match}\r\n            setMatch={setMatch}\r\n            countryAsTotal={countryAsTotal}\r\n            setCountryAsTotal={setCountryAsTotal}\r\n            setCountries={setCountries}\r\n            setPrimers={setPrimers}\r\n            setPType={setPType}\r\n            isProcessing={isProcessing}\r\n            setIsProcessing={setIsProcessing}\r\n            isBar={isBar}\r\n            setIsBar={setIsBar}\r\n            daysBetweenComparison={daysBetweenComparison}\r\n            setDaysBetweenComparison={setDaysBetweenComparison}\r\n            numberOfBars={numberOfBars}\r\n            setNumberOfBars={setNumberOfBars}\r\n            showAbsDiff={showAbsDiff}\r\n            setShowAbsDiff={setShowAbsDiff}\r\n          />\r\n          <DataTable\r\n            id=\"collapse-table\"\r\n            title={\"Overview of Missed Viruses\"}\r\n            data={tableData}\r\n            columns={overviewColumns}\r\n            isCombined={false}\r\n            isCollapsable={true}\r\n            className=\"mb-5\"\r\n          />\r\n          <Row className=\"mb-5\">\r\n            <Col xs={12} lg={primers.length === 1 ? 6 : 12}>\r\n              <LineGraph\r\n                title={\"Genomes with mutation\"}\r\n                title2={\"Genomes with mutation in 3' end\"}\r\n                data={graphOverview}\r\n                primers={\r\n                  primers.length === 0 ? Object.keys(baseData.current) : primers\r\n                }\r\n                dates={dateRange.current}\r\n                setPrimers={setPrimers}\r\n                timeFrameBrush={timeFrameBrush}\r\n                setTimeFrameBrush={setTimeFrameBrush}\r\n                showModal={showModalCb}\r\n                setModalInfo={setModalInfo}\r\n              />\r\n            </Col>\r\n            {primers.length === 1 ? (\r\n              <Col xs={12} lg={6}>\r\n                <MapWithToolTip\r\n                  title={\"Map of Virus Missed\"}\r\n                  subtitle={\r\n                    !useCum\r\n                      ? `From ${startDate\r\n                          .toISOString()\r\n                          .slice(0, 10)} to ${endDate\r\n                          .toISOString()\r\n                          .slice(0, 10)}`\r\n                      : \"Cumulative\"\r\n                  }\r\n                  data={tableData}\r\n                  lookBack={!useCum ? lookBack : -1}\r\n                  db={!useCum ? dbActual : dbCountCum.current}\r\n                  timeFrameBrush={timeFrameBrush}\r\n                  setTimeFrameBrush={setTimeFrameBrush}\r\n                  showModal={showModalCb}\r\n                  setModalInfo={setModalInfo}\r\n                />\r\n              </Col>\r\n            ) : null}\r\n          </Row>\r\n          {isBar ? (\r\n            <BarGraph\r\n              title={\"Genomes with mutation\"}\r\n              title2={\"Percent of genomes with mutation in 3' end\"}\r\n              data={barData}\r\n              showAbsDiff={showAbsDiff}\r\n              className=\"mb-5\"\r\n            />\r\n          ) : null}\r\n          <Collapse in={combinedBase.length !== 0}>\r\n            <div>\r\n              <Row className=\"mb-5\">\r\n                <Col xs={12} lg={6}>\r\n                  <LineGraph\r\n                    title={\"Genomes with mutation (Combined)\"}\r\n                    title2={\"Genomes with mutation in 3' end (Combined)\"}\r\n                    data={graphCombined}\r\n                    primers={\r\n                      primers.length === 0\r\n                        ? [Object.keys(baseData.current).join(\", \")]\r\n                        : [primers.join(\", \")]\r\n                    }\r\n                    dates={dateRange.current}\r\n                    setPrimers={setPrimers}\r\n                    timeFrameBrush={timeFrameBrush}\r\n                    setTimeFrameBrush={setTimeFrameBrush}\r\n                    showModal={showModalCb}\r\n                    setModalInfo={setModalInfo}\r\n                  />\r\n                </Col>\r\n                <Col xs={12} lg={6}>\r\n                  <MapWithToolTip\r\n                    title={\"Map of Virus Missed (Combined)\"}\r\n                    subtitle={\r\n                      !useCum\r\n                        ? `From ${startDate\r\n                            .toISOString()\r\n                            .slice(0, 10)} to ${endDate\r\n                            .toISOString()\r\n                            .slice(0, 10)}`\r\n                        : \"Cumulative\"\r\n                    }\r\n                    data={tableCombined}\r\n                    lookBack={!useCum ? lookBack : -1}\r\n                    db={!useCum ? dbActual : dbCountCum.current}\r\n                    timeFrameBrush={timeFrameBrush}\r\n                    setTimeFrameBrush={setTimeFrameBrush}\r\n                    showModal={showModalCb}\r\n                    setModalInfo={setModalInfo}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <DataTable\r\n                title={\"Missed Viruses (Combined)\"}\r\n                data={tableCombined}\r\n                columns={combinedCols}\r\n                isCombined={true}\r\n                isCollapsable={true}\r\n                className=\"mb-5\"\r\n              />\r\n            </div>\r\n          </Collapse>\r\n        </Container>\r\n        <Modal\r\n          show={showModal}\r\n          onHide={closeModalCb}\r\n          dialogClassName=\"modal-90w\"\r\n          aria-labelledby=\"missed-details-modal\"\r\n        >\r\n          <Modal.Header closeButton id=\"missed-details-modal\">\r\n            <Modal.Title>Missed Viruses</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <DataTable\r\n              id=\"detail-table\"\r\n              title={\"\"}\r\n              data={modalData}\r\n              columns={overviewColumns}\r\n              isCombined={false}\r\n              isCollapsable={false}\r\n              className=\"mb-5\"\r\n            />\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={closeModalCb}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <InputData />;\r\n};\r\n\r\nexport default ResultPage;\r\n\r\nconst dataFilter = ({\r\n  timeFrameBrush = [],\r\n  primers = [],\r\n  pType = [],\r\n  countries = [],\r\n  miss = [],\r\n  miss3 = [],\r\n  match = [],\r\n}) => {\r\n  /**\r\n   * A filter for gisaid table data in records orientation (list of objects where column names are mapped to their value for that row)\r\n   * @param {Array} timeFrameBrush: the min and max timeFrame for the sequence\r\n   * @param {Array} primers: specific name for a particular primer\r\n   * @param {Array} pType: the primer type, one of [\"fwd\", \"rev\", \"prb\"]\r\n   * @param {Array} countries: the list of country that the seq must be from\r\n   * @param {Array} miss:  the min and max misses for the sequence\r\n   * @param {Array} miss3: the min and max misses in 3' end\r\n   * @param {Array} match: the min and max homolog %\r\n   * @returns {function} A function that takes a value and filter for parameters above\r\n   */\r\n  return (value) => {\r\n    let isWithinTimeFrame = true;\r\n    let isPrimer = true;\r\n    let isPType = true;\r\n    let isCountry = true;\r\n    let isMiss = true;\r\n    let isMiss3 = true;\r\n    let isMatch = true;\r\n\r\n    if (timeFrameBrush.length !== 0) {\r\n      const currDate = new Date(value.date);\r\n      const [startDate, endDate] = timeFrameBrush;\r\n      isWithinTimeFrame =\r\n        currDate.getTime() >= new Date(startDate).getTime() &&\r\n        currDate.getTime() <= new Date(endDate).getTime();\r\n    }\r\n    if (primers.length !== 0) {\r\n      isPrimer = primers.includes(value.primer);\r\n    }\r\n    if (pType.length !== 0) {\r\n      isPType = pType.includes(value.type);\r\n    }\r\n    if (countries.length !== 0) {\r\n      isCountry = countries\r\n        .map((val) => val.label)\r\n        .includes(value.country_name);\r\n    }\r\n    if (miss.length !== 0) {\r\n      isMiss =\r\n        value.misses >= (miss[0] || 0) && value.misses <= (miss[1] || 100);\r\n    }\r\n    if (miss3.length !== 0) {\r\n      isMiss3 =\r\n        value.misses3 >= (miss3[0] || 0) && value.misses3 <= (miss3[1] || 100);\r\n    }\r\n    if (match.length !== 0) {\r\n      isMatch =\r\n        value.match_pct >= (match[0] || 0) &&\r\n        value.match_pct <= (match[1] || 100);\r\n    }\r\n    return (\r\n      isWithinTimeFrame &&\r\n      isPrimer &&\r\n      isPType &&\r\n      isCountry &&\r\n      isMiss &&\r\n      isMiss3 &&\r\n      isMatch\r\n    );\r\n  };\r\n};\r\nfunction cacheRange(dailyDb, rangeStart, rangeEnd, dates) {\r\n  /**\r\n   * Creates a daily database with lookBack from [rangeStart] to [rangeEnd]\r\n   * @param {Object} dailyDb: Contains the daily database count\r\n   * @param {Number} rangeStart: Indicate the minimum lookBack to calculate for\r\n   * @param {Number} rangeEnd: Indicate the maximum lookBack to calculate for\r\n   * @param {Object} dates: Contains the dates for which the rolling window are to\r\n   *                         be calculated for\r\n   *@returns {Object}: Mapping lookBack period to dbCounts\r\n   */\r\n  const toReturn = {};\r\n  for (let i = rangeStart; i < rangeEnd.length; i++) {\r\n    toReturn[i] = getRangeDbCount(dailyDb, i, dates);\r\n  }\r\n  return toReturn;\r\n}\r\nfunction parseDb(rawData, database) {\r\n  /**\r\n   * Retrieves that database count from [rawData]\r\n   * @param {Array} rawData: contains the primerDetails, databaseCounts (daily and cumulative), as well as primer filenames on server.\r\n   * @param {Number} database: 0 for cumulative, 1 for daily\r\n   * @returns {Object} The object mapping date -> countries -> submission count\r\n   */\r\n  if (rawData.length !== 0) {\r\n    return JSON.parse(JSON.stringify(rawData[1][database]));\r\n  }\r\n  return {};\r\n}\r\n\r\nfunction addName(primer) {\r\n  /**\r\n   * An annealing function that takes an object and adds [primer] to it with key under \"primer\"\r\n   * @param {string} primer: value to be added\r\n   * @returns {function} a function that takes in [value] and returns it after adding [primer] to it.\r\n   */\r\n  return (value) => {\r\n    value.primer = primer;\r\n    return value;\r\n  };\r\n}\r\n\r\nfunction makeTableData(primerDetails) {\r\n  /**\r\n   * Converts all the incoming data into a table format for subsequent data structure to be built off\r\n   * @param {Array} primerDetails: contains the primerDetails\r\n   * @returns {Array} Each item in the array corresponds to a single entry that has been missed.\r\n   **/\r\n  let tableData = [];\r\n  if (Object.keys(primerDetails).length !== 0) {\r\n    const primerNames = Object.keys(primerDetails);\r\n    for (const primerName of primerNames) {\r\n      tableData.push(...primerDetails[primerName].map(addName(primerName)));\r\n    }\r\n  }\r\n  return tableData;\r\n}\r\n\r\nfunction makeIntersection(tableData) {\r\n  /**\r\n   * Creates data for intersecting values if any\r\n   * @param {Array} tableData: contains the info on the primers to display\r\n   * @returns {Array}: List of virus that is missed by all primers\r\n   * @returns {string}: name of the combined primers\r\n   */\r\n  const names = new Set();\r\n  const primerDetails = tableData.reduce((primerDetails, primer) => {\r\n    if (names.has(primer.primer)) {\r\n      const details = primerDetails[primer.primer];\r\n      details.push(primer);\r\n      primerDetails[primer.primer] = details;\r\n      return primerDetails;\r\n    } else {\r\n      names.add(primer.primer);\r\n      primerDetails[primer.primer] = [primer];\r\n      return primerDetails;\r\n    }\r\n  }, {});\r\n  let intersection = [];\r\n  if (names.size > 1) {\r\n    const primerNames = Object.keys(primerDetails);\r\n    const name = primerNames.join(\", \");\r\n    intersection = findListIntersection(Object.values(primerDetails));\r\n    intersection = intersection.map(addName(name));\r\n    return [intersection, [name]];\r\n  }\r\n  return [intersection, []];\r\n}\r\n\r\nfunction findIntersection(list1, list2, key, intersect = true) {\r\n  /**\r\n   * Finds the intersection between two list\r\n   * @param {Bool} intersect: finds the intersection of [list1] and [list2] if true\r\n   *  otherwise, finds items in [list1] and not in [list2]\r\n   */\r\n\r\n  if (key) {\r\n    let result = list1.filter(\r\n      ((set) => (item) => {\r\n        return intersect === set.has(item[key]);\r\n      })(new Set(list2.map((item) => item[key])))\r\n    );\r\n    return result;\r\n  } else {\r\n    const result = list1.filter(\r\n      ((set) => (item) => {\r\n        return intersect === set.has(item);\r\n      })(new Set(list2.map((item) => item)))\r\n    );\r\n    return result;\r\n  }\r\n}\r\n\r\nfunction findListIntersection(itemList, key = \"accession_id\") {\r\n  /**\r\n   * Finds the intersecting items within each list\r\n   * @param   {Array}  itemList: Contains lists which contain info to find intersection of.\r\n   * @param   {string} keys: Optional choice to specify if items in lists are objects\r\n   * @returns {Array} An array containing items which are common across all list.\r\n   */\r\n  // List only contains one list, so we return it\r\n  let intersection = itemList[0];\r\n  for (let i = 1; i < itemList.length; i++) {\r\n    intersection = findIntersection(intersection, itemList[i], key);\r\n  }\r\n  return intersection;\r\n}\r\n\r\nfunction addObject(obj1, obj2, initialSum = 0) {\r\n  /**\r\n   * Adds the item in obj2 into obj1\r\n   * @param {Object} obj1: the obj in which items will be added too.\r\n   * @param {Object} obj2: The Object from which are retrieved to be added.\r\n   * @param {Any} initialSum: the value to be added when Obj2 contains an item Obj1 does not.\r\n   * @returns {Object} An object containing Obj1 + Obj2\r\n   */\r\n  for (let key of Object.keys(obj2)) {\r\n    obj1[key] = (obj1[key] || initialSum) + obj2[key];\r\n  }\r\n  return obj1;\r\n}\r\n\r\nfunction getRangeDbCount(dbCount, lookBack, dates) {\r\n  /**\r\n   * Calculates a rolling window for database\r\n   * @param {Object} dbCount: Contains the virus numbers in date -> country -> count order\r\n   * @param {Number} lookBack: the lookBack period. Only has effect if [useCum] is false\r\n   */\r\n  // TODO: Optimise maybe, remove repeated calculation each sliding window\r\n  const dateWindowCum = {};\r\n  for (const date of dates) {\r\n    const now = new Date(date);\r\n    const start = new Date(date);\r\n    start.setDate(start.getDate() - lookBack);\r\n    let dateCumCount = { total: 0 };\r\n    for (let d = start; d <= now; d.setDate(d.getDate() + 1)) {\r\n      const dateStr = d.toISOString().slice(0, 10);\r\n      dateCumCount = addObject(dateCumCount, dbCount[dateStr] || {});\r\n    }\r\n    dateWindowCum[date] = dateCumCount;\r\n  }\r\n\r\n  return dateWindowCum;\r\n}\r\n\r\nfunction getCountriesTotal(dbCount, countries, date) {\r\n  /**\r\n   * Retrieve the total number of submissions by [countries] on [date]\r\n   * @param {Object} dbCount: Maps date -> Object [country alpha 3 -> submission count]\r\n   * @param {Array} countries: list of countries\r\n   * @param {string} date: the date to obtain submission count for\r\n   * @returns {Number} the total number of submissions by [countries] on [date]\r\n   */\r\n  if (countries.length === 0) {\r\n    return dbCount[date].total;\r\n  }\r\n  const total = countries.reduce((prevVal, country) => {\r\n    prevVal += dbCount[date][country.value] || 0;\r\n    return prevVal;\r\n  }, 0);\r\n  return total;\r\n}\r\n\r\nfunction makeOverview(\r\n  primerDetails,\r\n  primerNames,\r\n  dbCount,\r\n  dates,\r\n  useCum,\r\n  lookBack,\r\n  isCountryAsTotal,\r\n  countries = []\r\n) {\r\n  /**\r\n   * Creates  data points used to plat overview graph\r\n   * @param {Array} primerDetails: Contains the list of filtered missed virus\r\n   * @param {Array} primerNames: Contains the list primer names\r\n   * @param {Object} dbCount: Contains the virus numbers in date -> country -> count order\r\n   * @param {bool} useCum: if the dbCount represents cumulated or daily values\r\n   * @param {Number} lookBack: the lookBack period. Only has effect if [useCum] is false\r\n   * @param {Array} countries: List of countries who should form the new total\r\n   * @returns {Array} List of Map containing \"date\", \"name\", \"mutation_pct\", \"mutation3_pct\", \"mutation_abs\", \"mutation3_abs\", \"submission_count\", and  \"countries_considered\"\r\n   */\r\n  const overviewData = [];\r\n  if (primerDetails.length === 0) return overviewData;\r\n  const nameDateMap = !useCum\r\n    ? primerDetails.reduce((result, currVal) => {\r\n        const temp = result[currVal.primer] || {};\r\n        const date_temp = temp[currVal.date] || [];\r\n        date_temp.push(currVal);\r\n        temp[currVal.date] = date_temp;\r\n        result[currVal.primer] = temp;\r\n        return result;\r\n      }, {})\r\n    : primerDetails.reduce((result, currVal) => {\r\n        const temp = result[currVal.primer] || [];\r\n        temp.push(currVal);\r\n        result[currVal.primer] = temp;\r\n        return result;\r\n      }, {});\r\n  for (const primerName of primerNames) {\r\n    overviewData.push(\r\n      dates.map((date) => {\r\n        const currDate = new Date(date);\r\n        let mutationAbs = [];\r\n        let mutation3Abs = [];\r\n        if (!useCum) {\r\n          const minDate = new Date(date);\r\n          minDate.setDate(minDate.getDate() - lookBack);\r\n          for (\r\n            let today = minDate;\r\n            today <= currDate;\r\n            today.setDate(today.getDate() + 1)\r\n          ) {\r\n            mutationAbs.push.apply(\r\n              mutationAbs,\r\n              nameDateMap[primerName][today.toISOString().slice(0, 10)]\r\n            );\r\n            mutation3Abs.push.apply(\r\n              mutation3Abs,\r\n              nameDateMap[primerName][today.toISOString().slice(0, 10)]\r\n            );\r\n          }\r\n        } else {\r\n          mutationAbs = nameDateMap[primerName].filter((value) => {\r\n            const primersDate = new Date(value.date);\r\n            return primersDate.getTime() <= currDate.getTime();\r\n          });\r\n          mutation3Abs = nameDateMap[primerName].filter((value) => {\r\n            const primersDate = new Date(value.date);\r\n            return (\r\n              primersDate.getTime() <= currDate.getTime() && value.misses3 !== 0\r\n            );\r\n          });\r\n        }\r\n        mutationAbs = mutationAbs.reduce((result, currVal) => {\r\n          result.add(currVal.virus_name);\r\n          return result;\r\n        }, new Set()).size;\r\n        mutation3Abs = mutation3Abs.reduce((result, currVal) => {\r\n          result.add(currVal.virus_name);\r\n          return result;\r\n        }, new Set()).size;\r\n        const databaseTotal = isCountryAsTotal\r\n          ? getCountriesTotal(dbCount, countries, date)\r\n          : dbCount[date].total;\r\n\r\n        return {\r\n          date: date,\r\n          name: primerName,\r\n          mutation_pct: ((mutationAbs / databaseTotal) * 100).toFixed(3),\r\n          mutation3_pct: ((mutation3Abs / databaseTotal) * 100).toFixed(3),\r\n          mutation_abs: mutationAbs,\r\n          mutation3_abs: mutation3Abs,\r\n          submission_count: databaseTotal,\r\n          lookBack: useCum ? -1 : lookBack,\r\n          countries_considered: countries,\r\n        };\r\n      })\r\n    );\r\n  }\r\n  return overviewData;\r\n}\r\n\r\nfunction makeBarData(\r\n  graphOverview,\r\n  dates,\r\n  timeFrameBrush,\r\n  daysBetweenComparison,\r\n  numberOfBars\r\n) {\r\n  /**\r\n   * Makes the bar data to be used for display\r\n   * @param {Array} graphBase: List of List of Map containing \"date\", \"name\", \"mutation_pct\", \"mutation3_pct\", \"mutation_abs\", \"mutation3_abs\", \"submission_count\", and  \"countries_considered\". Each list correspond to a primer in primerNames of the same index\r\n   * @param {Array} primerNames: Contains the list primer names\r\n   * @param {Object} dbCount: Contains the virus numbers in date -> country -> count order\r\n   * @param {Array} timeFrameBrush: Contains the minimum and maximum date of interest\r\n   * @returns {Array} Contains a List of List. Each list corresponds to a particular primer\r\n   */\r\n  const dateDetails = [];\r\n\r\n  const now = timeFrameBrush[1] || new Date(dates[dates.length - 1]);\r\n  const start = new Date(now);\r\n  start.setDate(start.getDate() - daysBetweenComparison * numberOfBars);\r\n  while (start.getTime() < new Date(dates[0])) {\r\n    start.setDate(start.getDate() + daysBetweenComparison);\r\n  }\r\n  for (\r\n    let d = start;\r\n    d <= now;\r\n    d.setDate(d.getDate() + daysBetweenComparison)\r\n  ) {\r\n    const primerMutations = [];\r\n    for (let i = 0; i < graphOverview.length; i++) {\r\n      const details = graphOverview[i].filter((val) =>\r\n        new Date(val.date).sameDay(d)\r\n      );\r\n      primerMutations.push(...details);\r\n    }\r\n    dateDetails.push(primerMutations);\r\n  }\r\n\r\n  return dateDetails;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport UploadPage from \"./pages/upload/uploadPage\";\r\nimport ResultPage from \"./pages/results/resultsPage\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [results, setResults] = useState(\"[]\");\r\n  return (\r\n    <Router basename=\"/METHODS/corona/gamma/primer/build\">\r\n      <Link to=\"/\" style={{ textDecoration: \"none\" }}>\r\n        <h1 className=\"title\">Primer Checker</h1>\r\n      </Link>\r\n\r\n      <Switch>\r\n        <Route exact={true} path=\"/\">\r\n          <UploadPage setResults={setResults} />\r\n        </Route>\r\n        <Route exact={true} path=\"/results/:display\">\r\n          <ResultPage results={results} />\r\n        </Route>\r\n        <Route path=\"/results\">\r\n          <ResultPage results={results} />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <div>404: Page not found</div>\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}