{"version":3,"sources":["components/dropzone/dropzoneResults.js","pages/manual/manualPage.js","components/util.js","components/dropzone/dropzone.js","components/textArea/textArea.js","components/previewPane/previewPane.js","components/fileDisplay/fileDisplay.js","services/primerCheck.js","pages/upload/uploadPage.js","components/selectDropdown/selectDropdown.js","components/ItemFilter/minMaxFilter.js","components/ItemFilter/filterGroup.js","components/ItemFilter/itemFilters.js","components/tableDisplay/filter.js","components/tableDisplay/tableDisplay.js","components/mutGraphs/lineGraph.js","components/mutGraphs/combinedLineGraph.js","components/mutGraphs/barGraph.js","components/mutGraphs/barGraphWrapper.js","components/mutGraphs/inLineGraph.js","components/primerMap/primerMap.js","components/primerMap/mapWithToolTip.js","pages/results/resultsPage.js","App.js","serviceWorker.js","index.js","pages/results/dataFilter.js"],"names":["DropZoneResults","setResults","history","useHistory","filesSelected","e","a","loadFiles","target","files","fr","FileReader","onload","result","JSON","parse","formatted","stringify","push","readAsText","item","Form","Group","controlId","htmlFor","id","Container","className","onDragOver","preventDefault","onDragEnter","onDragLeave","onDrop","dataTransfer","type","onChange","multiple","ManualPage","validateFormat","content","exec","debounce","func","wait","immediate","timeout","context","this","args","arguments","later","apply","callNow","clearTimeout","setTimeout","addName","primer","value","makeBaseGraphData","baseData","toReturn","Object","keys","primerName","details","toAdd","date","DropZone","selectedFiles","setSelectedFiles","setErrorMessage","checkFiles","to_store","file","handleFile","concat","readFile","to_return","console","warn","message","reader","log","Promise","resolve","reject","event","name","onerror","abort","DOMException","TextArea","setTextFieldFasta","useState","errorMessage","textAreaValue","setTextAreaValue","inputSample","useEffect","Row","Col","Label","Button","variant","size","onClick","Control","as","placeholder","aria-describedby","Text","muted","split","map","i","key","Feedback","PreviewPane","show","handleClose","Modal","onHide","Header","closeButton","Title","Body","newline_matches","matchAll","length","slice","index","formatContent","Footer","FileDisplay","preview","setPreview","previewOpen","setPreviewOpen","removeFile","fileName","prevFiles","filter","fileType","substring","lastIndexOf","lg","md","invalid","openPreview","Math","floor","parseFloat","pow","toFixed","fileSize","baseURL","axios","post","UploadPage","setError","showSubmit","setShowSubmit","displayedFiles","setDisplayedFiles","validFiles","setValidFiles","blastAll","setBlastAll","textFieldFasta","fileErrorMessage","setFileErrorMessage","open","setOpen","isLoading","setIsLoading","openId","filteredFiles","reduce","current","find","Collapse","in","Accordion","Card","Toggle","eventKey","xs","Check","label","checked","noValidate","Fade","aria-controls","aria-expanded","primerCheckService","then","response","data","catch","disabled","Spinner","animation","role","aria-hidden","animatedComponents","makeAnimated","SelectDropdown","options","defaultValue","closeMenuOnSelect","components","isMulti","isSearchable","isClearable","NumberRangeFilter","minVal","maxVal","step","setFilter","React","useMemo","combinedList","values","combined","currVal","min","max","forEach","row","debounceFilter","val","isMin","old","sm","isInteger","parseInt","FilterGroup","title","groupId","buttonText","component","isOpen","setShow","help","Switch","ariaControls","ariaExpanded","MissDefinition","miss","setMiss","miss3","setMiss3","match","setMatch","InputGroup","Prepend","data-tip","BarGraphSettings","isBar","setIsBar","daysBetweenComparison","setDaysBetweenComparison","numberOfBars","setNumberOfBars","showAbsDiff","setShowAbsDiff","toString","LineGraphSettings","countryAsTotal","setCountryAsTotal","GraphMapSetting","setTimeFrameBrush","timeFrameBrush","dateRange","lookBack","setLookBack","useCum","setUseCum","maxDate","Date","minDate","calendarIcon","AdvanceFilters","BasicFilters","setSelectedPrimers","setIsProcessing","isProcessing","setCountries","primers","setPrimers","setPType","selectionChange","setSelection","selection","toFilter","join","unique","Set","countries","virus","has","country_name","add","ISO_A3","ItemFilters","html","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","isHelpOn","count","setValue","useAsyncDebounce","undefined","column","TableDisplay","columns","downloadFileName","csv_headers","header","accessor","filterTypes","text","rows","filterValue","rowValue","String","toLowerCase","startsWith","defaultColumn","minWidth","width","maxWidth","useTable","initialState","pageIndex","hiddenColumns","useGlobalFilter","useSortBy","usePagination","useFlexLayout","useResizeColumns","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageSize","responsive","striped","bordered","hover","headerGroup","getHeaderGroupProps","headers","getHeaderProps","render","getSortByToggleProps","isSorted","isSortedDesc","canResize","getResizerProps","isResizing","getRowProps","cells","cell","display_str","getCellProps","idx","char","Number","aria-label","filename","DataTable","isCollapsable","showTable","setShowTable","isCombined","LineGraph","title2","dates","showModal","setModalInfo","subtitle","subtitle2","getMutationPlot","dataPlot","xIndex","yIndex","plots","hoverAnimation","xAxisIndex","yAxisIndex","encode","x","y","datasetIndex","getDateIndex","findIndex","toISOString","startIndex","endIndex","mutationPlot","mutation3Plot","option","subtext","left","top","tooltip","trigger","axisPointer","backgroundColor","formatter","params","baseDetails","startDate","initDate","setDate","getDate","getStartDate","submissionCount","submission_count","countries_considered","mutation_abs","mutation3_abs","mutation_pct","mutation3_pct","position","pos","el","elRect","obj","viewSize","legend","orient","right","link","dataZoom","realtime","start","end","grid","bottom","xAxis","nameLocation","nameTextStyle","align","verticalAlign","padding","gridIndex","yAxis","nameGap","offset","dataset","datasets","dimensions","source","buildDataSet","series","onEvents","click","prev","country","legendselectchanged","selected","batch","startStringDate","endStringDate","endDate","style","height","notMerge","objEqual","b","entries","sort","memo","combinedBase","combinedName","totalSubmission","setIsProcessingGraphs","pType","instance","useRef","worker","lineData","setLineData","makeData","useCallback","performance","now","getCombinedLineData","next","BarGraph","getBarLabel","toPlot","distance","rotate","difference","fontSize","textBorderColor","rich","p","color","n","zero","buildBarPlot","barMaxWidth","buildDataset","mutation","mutation3","axisLabel","margin","rawData","barData","setBarData","updateBarData","getLineGraphData","makeBarData","graphOverview","colorScale","scaleLinear","domain","range","setTooltipContent","db","downloadData","setDownloadData","getDateString","time","getDates","countryMisses","currData","currDate","getTime","set","get","Map","getCountryMissCounts","countryMissesPct","Array","from","accumulated","maxPctMiss","projectionConfig","scale","geography","geographies","geo","missCount","properties","pctMiss","rsmKey","onMouseEnter","NAME","onMouseLeave","countryISO3","handleClick","default","fill","outline","cursor","toDownload","countryISO","absMiss","element","country_total","missed_pct","abs_miss","downloadDataClick","MapWithToolTip","tooltipContent","InputData","ResultPage","results","baseTableData","primerDetails","tableData","primerNames","makeTableData","baseGraphData","dbCountDaily","parseDb","dbCountCum","useParams","display","dbActual","setDbActual","mapDb","setMapDb","tableDataset","setTableDataset","setCombinedBase","setCombinedName","tableCombined","setTableCombined","setTimeFrameCb","setShowModal","modalInfo","closeModalCb","showModalCb","isProcessingGraphs","setIsProcessingGraphCb","updateTableData","filterTable","updateCombinedData","prevVal","temp","makeIntersection","getTotalSubmission","dbCum","dbDaily","date1","Difference_In_Days","separate","overviewColumns","disableFilters","combinedCols","modalData","isSameDate","isWithinFrame","isPrimer","isCountry","selectedDate","dialogClassName","aria-labelledby","database","App","error","basename","to","textDecoration","exact","path","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","addMethods","methods","module","exports","w","Worker"],"mappings":"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","file":"static/js/main.e9894282.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./dropzone.css\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst DropZoneResults = ({ setResults }) => {\r\n  const history = useHistory();\r\n\r\n  const dragOver = (e) => {\r\n    e.preventDefault();\r\n  };\r\n  const dragEnter = (e) => {\r\n    e.preventDefault();\r\n  };\r\n  const dragLeave = (e) => {\r\n    e.preventDefault();\r\n  };\r\n  const fileDrop = (e) => {\r\n    e.preventDefault();\r\n    const data = e.dataTransfer;\r\n    const files = data.files;\r\n    loadFiles(files);\r\n  };\r\n\r\n  const filesSelected = async (e) => {\r\n    const files = e.target.files;\r\n    loadFiles(files);\r\n  };\r\n\r\n  function loadFiles(files) {\r\n    let fr = new FileReader();\r\n\r\n    fr.onload = function (e) {\r\n      const result = JSON.parse(e.target.result);\r\n      const formatted = JSON.stringify(result);\r\n      setResults(formatted);\r\n      history.push(\"/results/Overview\");\r\n    };\r\n\r\n    fr.readAsText(files.item(0));\r\n  }\r\n\r\n  return (\r\n    <Form.Group controlId=\"fasta-sequence\">\r\n      <label htmlFor=\"fasta-input\" id=\"fasta-input-label\">\r\n        <Container\r\n          className=\"drop-container\"\r\n          onDragOver={dragOver}\r\n          onDragEnter={dragEnter}\r\n          onDragLeave={dragLeave}\r\n          onDrop={fileDrop}\r\n        >\r\n          <div className=\"drop-message\">\r\n            <div className=\"upload-icon\"></div>\r\n            Drag & Drop files here or click to upload\r\n          </div>\r\n          <input\r\n            className=\"file-input\"\r\n            id=\"fasta-input\"\r\n            type=\"file\"\r\n            onChange={filesSelected}\r\n            multiple\r\n          />\r\n        </Container>\r\n      </label>\r\n    </Form.Group>\r\n  );\r\n};\r\n\r\nexport default DropZoneResults;\r\n","import React from \"react\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nimport DropZoneResults from \"../../components/dropzone/dropzoneResults\";\r\n\r\nconst ManualPage = ({ setResults }) => {\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <DropZoneResults setResults={setResults} />\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManualPage;\r\n","export const validateFormat = (content) => {\r\n  let format = /^>fwd[\\s\\S]{2}[ACGTacgt]+[\\s\\S]{1,2}>rev[\\s\\S]{1,2}[ACGTacgt]+[\\s\\S]{1,2}>prb[\\s\\S]{1,2}[ACGTacgt]+[\\s\\S]{1,2}$/;\r\n  let correct_format = format.exec(content);\r\n  return correct_format !== null;\r\n};\r\n\r\nexport const getRandomInt = (min, max) => {\r\n  const lower_r = Math.floor(min);\r\n  const upper_r = Math.floor(max);\r\n  return Math.floor(lower_r + Math.random() * (upper_r - lower_r));\r\n};\r\n\r\n// credit: https://davidwalsh.name/function-debounce\r\n// Returns a function, that, as long as it continues to be invoked, will not\r\n// be triggered. The function will be called after it stops being called for\r\n// N milliseconds. If `immediate` is passed, trigger the function on the\r\n// leading edge, instead of the trailing.\r\nexport function debounce(func, wait, immediate) {\r\n  let timeout;\r\n  return function () {\r\n    let context = this,\r\n      args = arguments;\r\n    let later = function () {\r\n      timeout = null;\r\n      if (!immediate) func.apply(context, args);\r\n    };\r\n    let callNow = immediate && !timeout;\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(later, wait);\r\n    if (callNow) func.apply(context, args);\r\n  };\r\n}\r\n\r\nexport function addName(primer) {\r\n  /**\r\n   * An annealing function that takes an object and adds [primer] to it with key under \"primer\"\r\n   * @param {string} primer: value to be added\r\n   * @returns {function} a function that takes in [value] and returns it after adding [primer] to it.\r\n   */\r\n  return (value) => {\r\n    value.primer = primer;\r\n    return value;\r\n  };\r\n}\r\n\r\nexport function makeBaseGraphData(baseData) {\r\n  /**\r\n   * Converts the incoming {primerName: Missed virus} to\r\n   * {primerName: Date: Missed Virus}\r\n   *\r\n   * @param {Object} baseData: contains the primerDetails\r\n   * @returns {Object}: Mapping from {primerName: Date: Missed Virus}\r\n   */\r\n\r\n  const toReturn = {};\r\n  for (const primerName of Object.keys(baseData)) {\r\n    const result = {};\r\n    for (const details of baseData[primerName]) {\r\n      const toAdd = result[details.date] || [];\r\n      toAdd.push(addName(primerName)(details));\r\n      result[details.date] = toAdd;\r\n    }\r\n    toReturn[primerName] = result;\r\n  }\r\n  return toReturn;\r\n}\r\n","import React from 'react';\r\nimport './dropzone.css';\r\nimport { validateFormat } from '../util';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\n\r\nconst DropZone = ({ selectedFiles, setSelectedFiles, setErrorMessage }) => {\r\n\r\n    const dragOver = (e) => {\r\n        e.preventDefault();\r\n    }\r\n    const dragEnter = (e) => {\r\n        e.preventDefault();\r\n    }\r\n    const dragLeave = (e) => {\r\n        e.preventDefault();\r\n    }\r\n    const fileDrop = (e) => {\r\n        e.preventDefault();\r\n        const data = e.dataTransfer\r\n        const files = data.files;\r\n        checkFiles(files)\r\n    }\r\n\r\n    const filesSelected = async (e) => {\r\n        const files = e.target.files;\r\n        await checkFiles(files)\r\n    }\r\n    const checkFiles = async (files) => {\r\n        let to_store = []\r\n        for (let file of files) {\r\n            to_store = to_store.concat(await handleFile(file))\r\n        }\r\n        setSelectedFiles(selectedFiles.concat(...to_store))\r\n    }\r\n    const handleFile = async (file) => {\r\n        try {\r\n            const to_return = await readFile(file)\r\n            return to_return\r\n        } catch (e) {\r\n            console.warn(e.message)\r\n        }\r\n    }\r\n\r\n    const readFile = (file) => {\r\n        const reader = new FileReader();\r\n        console.log(file)\r\n        return new Promise((resolve, reject) => {\r\n            reader.onload = function (event) {\r\n                if (validateFormat(event.target.result)) {\r\n                    file['invalid'] = false\r\n                    file['content'] = event.target.result\r\n                    file['id'] = file.name\r\n                } else {\r\n                    console.log('file loaded but invalid format');\r\n                    setErrorMessage('File not a recognized format. Please check')\r\n                    file['invalid'] = true\r\n                }\r\n                resolve(file);\r\n            }\r\n            reader.onerror = function () {\r\n                reader.abort()\r\n                reject(new DOMException(\"Problem parsing input file.\"));\r\n            }\r\n\r\n            reader.readAsText(file, \"UTF-8\");\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Form.Group controlId='fasta-sequence'>\r\n            <label htmlFor='fasta-input' id='fasta-input-label'>\r\n                <Container className='drop-container' onDragOver={dragOver}\r\n                    onDragEnter={dragEnter}\r\n                    onDragLeave={dragLeave}\r\n                    onDrop={fileDrop}>\r\n                    <div className=\"drop-message\">\r\n                        <div className=\"upload-icon\"></div>\r\n                        Drag & Drop files here or click to upload\r\n                    </div>\r\n                    <input\r\n                        className=\"file-input\"\r\n                        id=\"fasta-input\"\r\n                        type=\"file\"\r\n                        onChange={filesSelected}\r\n                        multiple\r\n                    />\r\n                </Container>\r\n            </label>\r\n        </Form.Group>\r\n    );\r\n}\r\n\r\nexport default DropZone;","\r\nimport React, { useState, useEffect } from 'react'\r\nimport './textArea.css'\r\nimport Form from 'react-bootstrap/Form'\r\nimport { validateFormat } from '../util'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nconst TextArea = ({ setTextFieldFasta }) => {\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n    const [textAreaValue, setTextAreaValue] = useState('')\r\n    // const [fileAttached, setFileAttached] = useState(false)\r\n    const inputSample = `>fwd\\nGTGAAATGGTCATGTGTGGCGG\\n>rev\\nTATGCTAATAGTGTTTTTAACATTTG\\n>prb\\nCAGGTGGAACCTCATCAGGAGATGC`\r\n\r\n    useEffect(() => {\r\n        if (validateFormat(textAreaValue)) {\r\n            console.log('sequence oKAY!', textAreaValue);\r\n            // const lastMod = Date.now()\r\n            // const tempDate = new Date(lastMod)\r\n            // const file = {\r\n            //     \"content\": textAreaValue,\r\n            //     \"invalid\": false,\r\n            //     \"lastModified\": lastMod,\r\n            //     \"lastModifiedDate\": tempDate,\r\n            //     \"name\": `fasta${lastMod}`,\r\n            //     'size': getRandomInt(80, 90)\r\n            // }\r\n            setTextFieldFasta([{\r\n                \"invalid\": false,\r\n                \"content\": textAreaValue,\r\n                \"id\": \"text_input_fasta\",\r\n            }])\r\n        } else {\r\n            console.log('Nope');\r\n            setTextFieldFasta([])\r\n            setErrorMessage('Sequence not recognized! Please check.')\r\n        }\r\n    }, [textAreaValue, setTextFieldFasta])\r\n\r\n    const handleChange = (e) => {\r\n        const content = e.target.value\r\n        setTextAreaValue(content)\r\n    }\r\n    const enterSample = () => {\r\n        setTextAreaValue(inputSample)\r\n    }\r\n    return (\r\n        <Form.Group controlId='fasta-sequence'>\r\n            <Row className='fasta-input-header'>\r\n                <Col>\r\n                    <Form.Label className='fasta-input-title'>\r\n                        Fasta Sequence\r\n                    </Form.Label>\r\n                </Col>\r\n                <Col className=\"sample-fasta\">\r\n                    <Button variant='secondary' size='sm' onClick={enterSample}>Sample Input</Button>\r\n                </Col>\r\n            </Row>\r\n            <Form.Control\r\n                as='textarea'\r\n                placeholder=\"Input Fasta Seq here.\"\r\n                onChange={handleChange}\r\n                type=\"text\"\r\n                value={textAreaValue}\r\n                className='mx-sm-lg-auto'\r\n                aria-describedby=\"fastaSequenceHelpBlock\"\r\n            />\r\n            <Form.Text id=\"fastaSequenceHelpBlock\" muted>\r\n                Format for the primer sequence should be as follows:{<br />}\r\n                <strong>\r\n                    {inputSample\r\n                        .split('\\n')\r\n                        .map((value, i) => <p key={i}>{value}</p>)}\r\n                </strong>\r\n            </Form.Text>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n                {errorMessage}\r\n            </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n    )\r\n}\r\n\r\nexport default TextArea","import './previewPane.css'\r\nimport React from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\nconst PreviewPane = ({ show, handleClose, content }) => {\r\n    const formatContent = (content) => {\r\n        const regex = /\\s+/g;\r\n        const newline_matches = [...content.matchAll(regex)]\r\n        let result = []\r\n        for (let i = 0; i < newline_matches.length; i++) {\r\n            if (i === 0) {\r\n                result = result.concat(content.slice(0, newline_matches[0].index))\r\n            }\r\n            else {\r\n\r\n                result = result.concat(content.slice(newline_matches[i - 1].index + 1, newline_matches[i].index))\r\n            }\r\n        }\r\n        return result\r\n    }\r\n    return (\r\n        <Modal show={show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Fasta Primer Preview</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>{formatContent(content).map((value, index) => <p key={index}>{value}</p>)}</Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"primary\" onClick={handleClose}>\r\n                    Close\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>)\r\n}\r\n\r\nexport default PreviewPane","import './fileDisplay.css';\r\nimport React, { useState } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport PreviewPane from '../previewPane/previewPane';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst FileDisplay = ({ file, errorMessage, setSelectedFiles }) => {\r\n    const [preview, setPreview] = useState('')\r\n    const [previewOpen, setPreviewOpen] = useState(false)\r\n    const fileSize = (size) => {\r\n        if (size === 0) return '0 Bytes';\r\n        const k = 1024;\r\n        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n        const i = Math.floor(Math.log(size) / Math.log(k));\r\n        return parseFloat((size / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n    }\r\n\r\n    const fileType = (fileName) => {\r\n        const fileType = fileName.substring(fileName.lastIndexOf('.') + 1, fileName.length)\r\n        if (fileType.length === fileName.length) {\r\n            return 'Fasta'\r\n        }\r\n        else {\r\n            return fileType\r\n        }\r\n    }\r\n\r\n    const removeFile = (fileName) => {\r\n        setSelectedFiles(prevFiles => prevFiles.filter(file => file.name !== fileName))\r\n    }\r\n    const openPreview = (file) => {\r\n        setPreview(file.content)\r\n        setPreviewOpen(true)\r\n    }\r\n\r\n    return <Container className=\"file-status-bar\">\r\n        <Row>\r\n            <div className=\"file-type-logo\"></div>\r\n            <div className=\"file-type\">{fileType(file.name)}</div>\r\n            <Col lg={5} md={12} className='file-info'>\r\n                <div className={`file-name ${file.invalid ? 'file-error' : ''}`} onClick={file.invalid ? () => removeFile(file.name) : () => openPreview(file)}>{file.name}</div>\r\n                <div className=\"file-size\">({fileSize(file.size)})</div>\r\n            </Col>\r\n            <Col lg={4} md={8} className='file-error-message'>\r\n                {file.invalid\r\n                    ? <div className='file-error-message-text'>({errorMessage})</div>\r\n                    : null}\r\n            </Col>\r\n            <Col lg={2} md={2} className=\"file-remove\" >\r\n                <Button onClick={() => removeFile(file.name)} variant='danger' size='sm'>Remove</Button>\r\n            </Col>\r\n        </Row>\r\n        <PreviewPane show={previewOpen} handleClose={() => setPreviewOpen(false)} content={preview} />\r\n    </Container >\r\n}\r\n\r\nexport default FileDisplay;","import axios from \"axios\";\r\n\r\nconst baseURL =\r\n  \"https://mendel3.bii.a-star.edu.sg/METHODS/corona/gamma/cgi-bin/cgi_scripts/primerMVP.py\";\r\n// const baseURL = \"http://localhost:3001\";\r\n\r\nconst checkFile = (file) => {\r\n  return axios.post(`${baseURL}`, file);\r\n};\r\n\r\nconst checkFiles = (files) => {\r\n  return axios.post(`${baseURL}`, files);\r\n  // return axios.post(`${baseURL}/check_primers`, files);\r\n};\r\n\r\nexport default { checkFile, checkFiles };\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Accordion from \"react-bootstrap/Accordion\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Collapse from \"react-bootstrap/Collapse\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport Fade from \"react-bootstrap/Fade\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport DropZone from \"../../components/dropzone/dropzone\";\r\nimport TextArea from \"../../components/textArea/textArea\";\r\nimport FileDisplay from \"../../components/fileDisplay/fileDisplay\";\r\nimport primerCheckService from \"../..//services/primerCheck\";\r\nimport \"./uploadPage.css\";\r\n\r\nconst UploadPage = ({ setResults, setError }) => {\r\n  const [showSubmit, setShowSubmit] = useState(false);\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n  const [displayedFiles, setDisplayedFiles] = useState([]);\r\n  const [validFiles, setValidFiles] = useState([]);\r\n  const [blastAll, setBlastAll] = useState(false);\r\n  const [textFieldFasta, setTextFieldFasta] = useState([]);\r\n  const [fileErrorMessage, setFileErrorMessage] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [open, setOpen] = useState(true);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const openId = \"open-containers\";\r\n\r\n  useEffect(() => {\r\n    const filteredFiles = selectedFiles.reduce((files, current) => {\r\n      const match = files.find((file) => file.name === current.name);\r\n      if (match) {\r\n        return files;\r\n      } else {\r\n        return files.concat(current);\r\n      }\r\n    }, []);\r\n    setDisplayedFiles([...filteredFiles]);\r\n  }, [selectedFiles]);\r\n\r\n  useEffect(() => {\r\n    const filteredFiles = displayedFiles.reduce((files, current) => {\r\n      return current.invalid ? files : files.concat(current);\r\n    }, []);\r\n    setValidFiles(filteredFiles);\r\n  }, [displayedFiles]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      (validFiles.length === displayedFiles.length &&\r\n        validFiles.length !== 0 &&\r\n        textFieldFasta.length === 0) ||\r\n      (textFieldFasta.length !== 0 && validFiles.length === 0)\r\n    ) {\r\n      console.log(validFiles);\r\n      setErrorMessage(\"\");\r\n      return setShowSubmit(true);\r\n    } else if (textFieldFasta.length !== 0 && validFiles.length !== 0) {\r\n      setShowSubmit(false);\r\n      setErrorMessage(\r\n        \"Either upload a single sequence through input or select files to upload! Not Both!\"\r\n      );\r\n    }\r\n    setShowSubmit(false);\r\n  }, [validFiles, displayedFiles, textFieldFasta]);\r\n\r\n  const resetStates = () => {\r\n    setShowSubmit(false);\r\n    setSelectedFiles([]);\r\n    setTextFieldFasta([]);\r\n    setFileErrorMessage(\"\");\r\n    setErrorMessage(\"\");\r\n  };\r\n  const submitForm = () => {\r\n    console.log(validFiles, textFieldFasta);\r\n    console.log({ files: textFieldFasta, blastAll: blastAll });\r\n    setOpen(!open);\r\n    setIsLoading(true);\r\n    setTimeout(() => {\r\n      primerCheckService\r\n        .checkFiles(\r\n          validFiles.length === 0\r\n            ? { files: textFieldFasta, blastAll: blastAll }\r\n            : { files: validFiles, blastAll: blastAll }\r\n        )\r\n        .then((response) => {\r\n          resetStates();\r\n          setIsLoading(false);\r\n          console.log(\"response is\", response);\r\n          setResults(JSON.stringify(response.data));\r\n          history.push(\"/results/Overview\");\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n          setError(JSON.stringify(e.data));\r\n          history.push(\"/error\");\r\n        });\r\n    }, 500);\r\n  };\r\n  return (\r\n    <div>\r\n      <Collapse id={openId} in={open}>\r\n        <div className=\"collapse-container\">\r\n          <Container>\r\n            <h2 className=\"mb-3 methodology-title\">Methodology</h2>\r\n            <p className=\"mb-3 methodology-body\">\r\n              Primer Checker blast against all sequences from the past 3 months\r\n              in GISAID database of high quality genomes (defined as &lt;1% Ns\r\n              and &lt;0.05% unique non-synonymous mutations) with one or more\r\n              mutations in either forward, probe or reverse primer region. This\r\n              does not necessarily indicate a primer would not function but\r\n              serves as a guide to variability of the targeted region.\r\n            </p>\r\n            <Accordion className=\"mb-3\">\r\n              <Card>\r\n                <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n                  More Settings\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey=\"0\">\r\n                  <Card.Body>\r\n                    <Row>\r\n                      <Col xs=\"12\" md=\"6\">\r\n                        <Form.Check\r\n                          type=\"checkbox\"\r\n                          label=\"Blast against all database\"\r\n                          onChange={(e) => setBlastAll(e.target.checked)}\r\n                        />\r\n                      </Col>\r\n                      <Col xs=\"12\" md=\"6\" className=\"manual-button\">\r\n                        <Button\r\n                          onClick={() => history.push(\"/manualUpload\")}\r\n                          size=\"sm\"\r\n                          variant=\"light\"\r\n                        >\r\n                          Manual Upload\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </Card.Body>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n            </Accordion>\r\n\r\n            <Form noValidate>\r\n              <TextArea setTextFieldFasta={setTextFieldFasta} />\r\n              <p className=\"alternative-upload\">OR</p>\r\n              <DropZone\r\n                selectedFiles={selectedFiles}\r\n                setSelectedFiles={setSelectedFiles}\r\n                setErrorMessage={setFileErrorMessage}\r\n              />\r\n            </Form>\r\n            <Container className=\"file-display-container\">\r\n              {displayedFiles.map((file, index) => (\r\n                <FileDisplay\r\n                  file={file}\r\n                  errorMessage={fileErrorMessage}\r\n                  setSelectedFiles={setSelectedFiles}\r\n                  key={index}\r\n                />\r\n              ))}\r\n            </Container>\r\n          </Container>\r\n        </div>\r\n      </Collapse>\r\n      <Container>\r\n        <Row className=\"upload-error-message\">{errorMessage}</Row>\r\n        {showSubmit ? (\r\n          <Fade in={open}>\r\n            <Button\r\n              id={openId}\r\n              aria-controls={openId}\r\n              aria-expanded={open}\r\n              onClick={submitForm}\r\n              disabled={isLoading}\r\n            >\r\n              {isLoading ? (\r\n                <Spinner\r\n                  as=\"span\"\r\n                  className=\"loader\"\r\n                  animation=\"border\"\r\n                  size=\"sm\"\r\n                  role=\"status\"\r\n                  aria-hidden=\"true\"\r\n                />\r\n              ) : null}\r\n              {isLoading ? \"Loading...\" : \"Submit\"}\r\n            </Button>\r\n          </Fade>\r\n        ) : null}\r\n        {isLoading ? (\r\n          <Fade in={!open}>\r\n            <Container className=\"loading-container\">\r\n              <Spinner\r\n                id={openId}\r\n                as=\"span\"\r\n                animation=\"border\"\r\n                role=\"status\"\r\n                variant=\"dark\"\r\n              />\r\n            </Container>\r\n          </Fade>\r\n        ) : null}\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadPage;\r\n","import React from \"react\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\n\r\nconst animatedComponents = makeAnimated();\r\n\r\nfunction SelectDropdown({\r\n  onChange,\r\n  options,\r\n  placeholder,\r\n  // value = [],\r\n  isLoading = false,\r\n  defaultValue = [],\r\n}) {\r\n  /**\r\n   * @param {function} onChange: Takes in Array(Objects) of selected objects, null if nothing is selected\r\n   * @param {Object} Options: Select Options. Should contain a \"value\" and \"label\" key\r\n   * @param {Array} defaultValue: The list of default options\r\n   * @param {bool} isLoading: Indicates if loading animation shows or not\r\n   * @param {string} placeholder: Hint text when there is nothing selected\r\n   * @param {Array} value: list of items that is selected\r\n   */\r\n  return (\r\n    <Select\r\n      closeMenuOnSelect={false}\r\n      components={animatedComponents}\r\n      defaultValue={defaultValue}\r\n      // value={value}\r\n      isMulti\r\n      isSearchable\r\n      isClearable\r\n      isLoading={isLoading}\r\n      placeholder={placeholder}\r\n      onChange={onChange}\r\n      options={options}\r\n    />\r\n  );\r\n}\r\nexport default SelectDropdown;\r\n","import React from \"react\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nfunction NumberRangeFilter({\r\n  data,\r\n  id,\r\n  value,\r\n  minVal,\r\n  maxVal,\r\n  step,\r\n  setFilter,\r\n}) {\r\n  const [min, max] = React.useMemo(() => {\r\n    const primerDetails = Object.values(data);\r\n    const combinedList = primerDetails.reduce((combined, currVal) => {\r\n      combined.push(...currVal);\r\n      return combined;\r\n    }, []);\r\n    let min = combinedList.length ? combinedList[0][id] : 0;\r\n    let max = combinedList.length ? combinedList[0][id] : 0;\r\n    combinedList.forEach((row) => {\r\n      min = Math.min(row[id], min);\r\n      max = Math.max(row[id], max);\r\n    });\r\n    return [min, max];\r\n  }, [data, id]);\r\n\r\n  const debounceFilter = (val, isMin) => {\r\n    isMin\r\n      ? setFilter((old = []) => [val, old[1]])\r\n      : setFilter((old = []) => [old[0], val]);\r\n  };\r\n\r\n  return (\r\n    <Form className=\"filter\">\r\n      <Form.Row>\r\n        <Col className=\"pr-md-0\" sm={12} md={6} lg={12}>\r\n          <Form.Control\r\n            as=\"input\"\r\n            value={value[0] || \"\"}\r\n            type=\"number\"\r\n            onChange={(e) => {\r\n              const val = step.isInteger\r\n                ? parseInt(e.target.value, 10) || 0\r\n                : parseFloat(e.target.value || 0);\r\n              debounceFilter(val, true);\r\n            }}\r\n            placeholder={`Min (${min})`}\r\n            size=\"sm\"\r\n            min={minVal}\r\n            max={maxVal}\r\n            step={step}\r\n          />\r\n        </Col>\r\n        <Col className=\"pr-md-0\" sm={12} md={6} lg={12}>\r\n          <Form.Control\r\n            value={value[1] || \"\"}\r\n            type=\"number\"\r\n            onChange={(e) => {\r\n              const val = step.isInteger\r\n                ? parseInt(e.target.value, 10) || 0\r\n                : parseFloat(e.target.value || 0);\r\n              debounceFilter(val, false);\r\n            }}\r\n            placeholder={`Max (${max})`}\r\n            size=\"sm\"\r\n            min={minVal}\r\n            max={maxVal}\r\n            step={step}\r\n          />\r\n        </Col>\r\n      </Form.Row>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default NumberRangeFilter;\r\n","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Collapse from \"react-bootstrap/Collapse\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { AiFillCaretDown, AiFillCaretRight } from \"react-icons/ai\";\r\nfunction FilterGroup({\r\n  title,\r\n  groupId,\r\n  buttonText,\r\n  component,\r\n  variant = \"light\",\r\n  isOpen = false,\r\n  size = \"sm\",\r\n}) {\r\n  const [show, setShow] = React.useState(isOpen);\r\n  return (\r\n    <Col>\r\n      <Button\r\n        onClick={() => {\r\n          setShow(!show);\r\n        }}\r\n        className=\"show-group mb-3 mt-3\"\r\n        aria-controls={groupId}\r\n        aria-expanded={show}\r\n        variant={variant}\r\n        size={size}\r\n      >\r\n        {show ? <AiFillCaretDown /> : <AiFillCaretRight />}\r\n        {show ? `${buttonText}` : `${buttonText}`}\r\n      </Button>\r\n      <Collapse in={show}>\r\n        <div>{component}</div>\r\n      </Collapse>\r\n    </Col>\r\n  );\r\n}\r\nexport default FilterGroup;\r\n","import React from \"react\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AiOutlineQuestionCircle, AiTwotoneCalendar } from \"react-icons/ai\";\r\nimport DateRangePicker from \"@wojtekmaj/react-daterange-picker\";\r\nimport SelectDropdown from \"../selectDropdown/selectDropdown\";\r\nimport NumberRangeFilter from \"./minMaxFilter\";\r\n\r\nimport FilterGroup from \"./filterGroup\";\r\nimport \"./itemFilter.css\";\r\n\r\nconst help = {\r\n  miss:\r\n    \"Sets the min and max number of mutations in primer region to be consider a mutation\",\r\n  miss3:\r\n    \"Sets the min and max number of mutations in the 3' end (last 5 nucleotides) of the virus sequence to be considered a mutation\",\r\n  match:\r\n    \"Sets the min and max percentage of match for a virus sequence to be considered a mutation\",\r\n  primer: \"Select the primers to display\",\r\n  pType: \"Select which part of the primer to display\",\r\n  country:\r\n    \"Selects the countries to display. Total will be over selected countries then. To change, check extra settings\",\r\n  absDiff:\r\n    \"Show the difference from the current bar and the previous bar if enable (The last bar will be compared against another bar off charts)\",\r\n  daysBetweenCompare: \"Sets the number of days between comparison\",\r\n  numBars: \"Sets the number of bars to be displayed\",\r\n  countryTotal:\r\n    \"Sets whether selected country will be used as total or all submission within said time frame will be used as total\",\r\n  cumulative:\r\n    \"Divides daily mutation count by total number of submissions thus far\",\r\n  lookBack:\r\n    \"Sets the number of days to be used when aggregating the number of submissions and mutations\",\r\n  date: \"Selects the dates of interest.\",\r\n};\r\n\r\nconst Switch = ({\r\n  id,\r\n  className,\r\n  checked,\r\n  onChange,\r\n  ariaControls = \"\",\r\n  ariaExpanded = \"\",\r\n  disabled = false,\r\n}) => {\r\n  return (\r\n    <label\r\n      id={id}\r\n      className={`switch ${className}`}\r\n      aria-controls={ariaControls}\r\n      aria-expanded={ariaExpanded}\r\n    >\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={checked}\r\n        onChange={onChange}\r\n        disabled={disabled}\r\n      />\r\n      <span className=\"slider round\"></span>\r\n    </label>\r\n  );\r\n};\r\n\r\nconst MissDefinition = ({\r\n  baseData,\r\n  miss,\r\n  setMiss,\r\n  miss3,\r\n  setMiss3,\r\n  match,\r\n  setMatch,\r\n}) => {\r\n  return (\r\n    <Row>\r\n      <Col className=\"mb-3 pr-lg-0 \" xs={12} lg={4}>\r\n        <InputGroup size=\"sm\" className=\"\">\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text>\r\n              Total Mutation\r\n              <AiOutlineQuestionCircle className=\"pl-1\" data-tip={help.miss} />\r\n            </InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <NumberRangeFilter\r\n            data={baseData}\r\n            minVal={0}\r\n            maxVal={100}\r\n            step={1}\r\n            value={miss}\r\n            setFilter={setMiss}\r\n            id=\"misses\"\r\n          />\r\n        </InputGroup>\r\n      </Col>\r\n\r\n      <Col className=\"mb-3 pr-lg-0 pl-lg-0\" xs={12} lg={4}>\r\n        <InputGroup size=\"sm\">\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text>\r\n              Mutation in 3' End\r\n              <AiOutlineQuestionCircle className=\"pl-1\" data-tip={help.miss3} />\r\n            </InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <NumberRangeFilter\r\n            data={baseData}\r\n            minVal={0}\r\n            maxVal={100}\r\n            step={1}\r\n            value={miss3}\r\n            setFilter={setMiss3}\r\n            id=\"misses3\"\r\n          />\r\n        </InputGroup>\r\n      </Col>\r\n      <Col className=\"mb-3 pl-lg-0 pr-lg-0\" xs={12} lg={4}>\r\n        <InputGroup size=\"sm\">\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text>\r\n              Homology %\r\n              <AiOutlineQuestionCircle className=\"pl-1\" data-tip={help.match} />\r\n            </InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <NumberRangeFilter\r\n            data={baseData}\r\n            minVal={0}\r\n            maxVal={100}\r\n            step={0.01}\r\n            value={match}\r\n            setFilter={setMatch}\r\n            id=\"match_pct\"\r\n          />\r\n        </InputGroup>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nconst BarGraphSettings = ({\r\n  isBar,\r\n  setIsBar,\r\n  daysBetweenComparison,\r\n  setDaysBetweenComparison,\r\n  numberOfBars,\r\n  setNumberOfBars,\r\n  showAbsDiff,\r\n  setShowAbsDiff,\r\n}) => {\r\n  return (\r\n    <Row>\r\n      <Col sm={12} lg={2}>\r\n        <InputGroup className=\"mb-3\" size=\"sm\">\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text>Show</InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <Switch\r\n            type=\"checkbox\"\r\n            checked={isBar}\r\n            onChange={() => setIsBar(!isBar)}\r\n            aria-controls=\"use-bars\"\r\n            aria-expanded={isBar}\r\n          />\r\n        </InputGroup>\r\n      </Col>\r\n      <Col sm={12} lg={3}>\r\n        <InputGroup className=\"mb-3\" size=\"sm\">\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text>\r\n              Absolute Diff\r\n              <AiOutlineQuestionCircle\r\n                className=\"pl-1\"\r\n                data-tip={help.absDiff}\r\n              />\r\n            </InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <Switch\r\n            type=\"checkbox\"\r\n            checked={showAbsDiff}\r\n            onChange={() => setShowAbsDiff(!showAbsDiff)}\r\n            disabled={!isBar}\r\n          />\r\n        </InputGroup>\r\n      </Col>\r\n      <Col sm={12} lg={4}>\r\n        <InputGroup className=\"mb-3\" size=\"sm\">\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text>\r\n              Days between Comparison\r\n              <AiOutlineQuestionCircle\r\n                className=\"pl-1\"\r\n                data-tip={help.daysBetweenCompare}\r\n              />\r\n            </InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <Form.Control\r\n            value={daysBetweenComparison.toString()}\r\n            disabled={!isBar}\r\n            as=\"input\"\r\n            type=\"number\"\r\n            min={1}\r\n            max={200}\r\n            step={1}\r\n            onChange={(e) => {\r\n              const val = e.target.value;\r\n              setDaysBetweenComparison(parseInt(val, 10) || 0);\r\n            }}\r\n          />\r\n        </InputGroup>\r\n      </Col>\r\n      <Col sm={12} lg={3}>\r\n        <InputGroup className=\"mb-3\" size=\"sm\">\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text>\r\n              Number of bars\r\n              <AiOutlineQuestionCircle\r\n                className=\"pl-1\"\r\n                data-tip={help.numBars}\r\n              />\r\n            </InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <Form.Control\r\n            value={numberOfBars.toString()}\r\n            disabled={!isBar}\r\n            as=\"input\"\r\n            type=\"number\"\r\n            min={1}\r\n            max={20}\r\n            step={1}\r\n            onChange={(e) => {\r\n              const val = e.target.value;\r\n              setNumberOfBars(parseInt(val, 10) || 0);\r\n            }}\r\n          />\r\n        </InputGroup>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nconst LineGraphSettings = ({ countryAsTotal, setCountryAsTotal }) => {\r\n  return (\r\n    <InputGroup className=\"mb-3\" size=\"sm\">\r\n      <InputGroup.Prepend>\r\n        <InputGroup.Text htmlFor=\"country\">\r\n          Selected Countries as Total\r\n          <AiOutlineQuestionCircle\r\n            className=\"pl-1\"\r\n            data-tip={help.countryTotal}\r\n          />\r\n        </InputGroup.Text>\r\n      </InputGroup.Prepend>\r\n      <Switch\r\n        id=\"country\"\r\n        className=\"use-country\"\r\n        checked={countryAsTotal}\r\n        onChange={(e) => {\r\n          setCountryAsTotal(e.target.checked);\r\n        }}\r\n      />\r\n    </InputGroup>\r\n  );\r\n};\r\nconst GraphMapSetting = ({\r\n  isBar,\r\n  setIsBar,\r\n  daysBetweenComparison,\r\n  setDaysBetweenComparison,\r\n  numberOfBars,\r\n  setNumberOfBars,\r\n  showAbsDiff,\r\n  setShowAbsDiff,\r\n  countryAsTotal,\r\n  setCountryAsTotal,\r\n  setTimeFrameBrush,\r\n  timeFrameBrush,\r\n  dateRange,\r\n  lookBack,\r\n  setLookBack,\r\n  useCum,\r\n  setUseCum,\r\n  variant,\r\n}) => {\r\n  const dateChange = (e) => {\r\n    console.log(\"e :>> \", e);\r\n    setTimeFrameBrush((e || []).map((value) => new Date(value)) || []);\r\n  };\r\n\r\n  return (\r\n    <Col>\r\n      <Row>\r\n        <Col xs={12} lg={5} className=\"pr-lg-0\">\r\n          <InputGroup className=\"mb-3 \" size=\"sm\">\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text>\r\n                Date Range\r\n                <AiOutlineQuestionCircle\r\n                  className=\"pl-1\"\r\n                  data-tip={help.date}\r\n                />\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <DateRangePicker\r\n              maxDate={new Date(dateRange[dateRange.length - 1])}\r\n              minDate={new Date(dateRange[0])}\r\n              calendarIcon={<AiTwotoneCalendar />}\r\n              onChange={dateChange}\r\n              value={timeFrameBrush.length === 0 ? null : timeFrameBrush}\r\n            />\r\n          </InputGroup>\r\n        </Col>\r\n\r\n        <Col xs={12} lg={3} className=\"pr-lg-0 pl-lg-0\">\r\n          <InputGroup className=\"mb-3\" size=\"sm\">\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text htmlFor=\"cumulative\">\r\n                Cumulative\r\n                <AiOutlineQuestionCircle\r\n                  className=\"pl-1\"\r\n                  data-tip={help.cumulative}\r\n                />\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Switch\r\n              id=\"cumulative\"\r\n              className=\"use-cumulative\"\r\n              checked={useCum}\r\n              onChange={(e) => {\r\n                setUseCum(e.target.checked);\r\n              }}\r\n            />\r\n          </InputGroup>\r\n        </Col>\r\n\r\n        <Col xs={12} lg={4} className=\"pl-lg-0\">\r\n          <InputGroup className=\"mb-3 \" size=\"sm\">\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text>\r\n                Look Back\r\n                <AiOutlineQuestionCircle\r\n                  className=\"pl-1\"\r\n                  data-tip={help.lookBack}\r\n                />\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              value={lookBack.toString()}\r\n              disabled={useCum}\r\n              as=\"input\"\r\n              type=\"number\"\r\n              min={0}\r\n              max={200}\r\n              step={1}\r\n              onChange={(e) => {\r\n                const val = e.target.value;\r\n                setLookBack(parseInt(val, 10) || 0);\r\n              }}\r\n            />\r\n          </InputGroup>\r\n        </Col>\r\n      </Row>\r\n      <FilterGroup\r\n        variant={variant}\r\n        buttonText={\"Bar Graph Setting\"}\r\n        groupId={\"bar-graph-setting\"}\r\n        component={\r\n          <BarGraphSettings\r\n            isBar={isBar}\r\n            setIsBar={setIsBar}\r\n            daysBetweenComparison={daysBetweenComparison}\r\n            setDaysBetweenComparison={setDaysBetweenComparison}\r\n            numberOfBars={numberOfBars}\r\n            setNumberOfBars={setNumberOfBars}\r\n            showAbsDiff={showAbsDiff}\r\n            setShowAbsDiff={setShowAbsDiff}\r\n          />\r\n        }\r\n      />\r\n      <FilterGroup\r\n        variant={variant}\r\n        buttonText={\"Line Graph Settings\"}\r\n        groupId={\"line-graph-settings\"}\r\n        component={\r\n          <LineGraphSettings\r\n            countryAsTotal={countryAsTotal}\r\n            setCountryAsTotal={setCountryAsTotal}\r\n          />\r\n        }\r\n      />\r\n    </Col>\r\n  );\r\n};\r\n\r\nconst AdvanceFilters = ({\r\n  baseData,\r\n  dateRange,\r\n  timeFrameBrush,\r\n  setTimeFrameBrush,\r\n  lookBack,\r\n  setLookBack,\r\n  useCum,\r\n  setUseCum,\r\n  miss,\r\n  setMiss,\r\n  miss3,\r\n  setMiss3,\r\n  match,\r\n  setMatch,\r\n  countryAsTotal,\r\n  setCountryAsTotal,\r\n  isBar,\r\n  setIsBar,\r\n  daysBetweenComparison,\r\n  setDaysBetweenComparison,\r\n  numberOfBars,\r\n  setNumberOfBars,\r\n  showAbsDiff,\r\n  setShowAbsDiff,\r\n}) => {\r\n  const variant = \"light\";\r\n  return (\r\n    <FilterGroup\r\n      variant={variant}\r\n      buttonText={\"More Settings\"}\r\n      groupId=\"Advance-settings\"\r\n      component={\r\n        <>\r\n          <Row>\r\n            <FilterGroup\r\n              variant={variant}\r\n              buttonText={\"Adjust Mutation Definition\"}\r\n              groupId={\"miss-definitions\"}\r\n              component={\r\n                <MissDefinition\r\n                  baseData={baseData}\r\n                  miss={miss}\r\n                  setMiss={setMiss}\r\n                  miss3={miss3}\r\n                  setMiss3={setMiss3}\r\n                  match={match}\r\n                  setMatch={setMatch}\r\n                />\r\n              }\r\n            />\r\n          </Row>\r\n          <Row>\r\n            <FilterGroup\r\n              variant={variant}\r\n              buttonText={\"Graph and Map Settings\"}\r\n              groupId={\"graph-map-setting\"}\r\n              component={\r\n                <GraphMapSetting\r\n                  variant={variant}\r\n                  setTimeFrameBrush={setTimeFrameBrush}\r\n                  timeFrameBrush={timeFrameBrush}\r\n                  dateRange={dateRange}\r\n                  lookBack={lookBack}\r\n                  setLookBack={setLookBack}\r\n                  useCum={useCum}\r\n                  setUseCum={setUseCum}\r\n                  isBar={isBar}\r\n                  setIsBar={setIsBar}\r\n                  daysBetweenComparison={daysBetweenComparison}\r\n                  setDaysBetweenComparison={setDaysBetweenComparison}\r\n                  numberOfBars={numberOfBars}\r\n                  setNumberOfBars={setNumberOfBars}\r\n                  showAbsDiff={showAbsDiff}\r\n                  setShowAbsDiff={setShowAbsDiff}\r\n                  countryAsTotal={countryAsTotal}\r\n                  setCountryAsTotal={setCountryAsTotal}\r\n                />\r\n              }\r\n            />\r\n          </Row>\r\n        </>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nfunction BasicFilters({\r\n  baseData,\r\n  setIsProcessing,\r\n  isProcessing,\r\n  setCountries,\r\n  primers,\r\n  setPrimers,\r\n  setPType,\r\n}) {\r\n  const history = useHistory();\r\n\r\n  function primerChange(setSelectedPrimers) {\r\n    return (selection) => {\r\n      setIsProcessing(true);\r\n      const toFilter = selection || [];\r\n      if (toFilter.length === 0) {\r\n        setSelectedPrimers(toFilter);\r\n        history.push(`/results/Overview`);\r\n      } else {\r\n        const selection = toFilter.map((val) => val.value);\r\n        setSelectedPrimers(selection);\r\n        history.push(`/results/${selection.join(\"&\")}`);\r\n      }\r\n    };\r\n  }\r\n\r\n  function selectionChange(setSelection) {\r\n    return (selection) => {\r\n      setIsProcessing(true);\r\n      const toFilter = selection || [];\r\n      if (toFilter.length === 0) {\r\n        setSelection(toFilter);\r\n      } else {\r\n        const selection = toFilter.map((val) => {\r\n          if (val.value === val.label) return val.value;\r\n          return val;\r\n        });\r\n        setSelection(selection);\r\n      }\r\n    };\r\n  }\r\n  return (\r\n    <FilterGroup\r\n      isOpen={true}\r\n      variant=\"light\"\r\n      buttonText={\"Basic Filters\"}\r\n      groupId=\"basic-settings\"\r\n      component={\r\n        <>\r\n          <Row className=\"mb-3\">\r\n            <Col xs={12} lg={7} className=\"mb-3\">\r\n              <Row>\r\n                <Col sm={12} lg={3} className=\"mr-0 pr-lg-0\">\r\n                  <InputGroup.Text>\r\n                    Primers\r\n                    <AiOutlineQuestionCircle\r\n                      className=\"pl-1\"\r\n                      data-tip={help.primer}\r\n                    />\r\n                  </InputGroup.Text>\r\n                </Col>\r\n                <Col sm={12} lg={9} className=\"pl-lg-0\">\r\n                  <SelectDropdown\r\n                    value={primers}\r\n                    onChange={primerChange(setPrimers)}\r\n                    options={React.useMemo(() => {\r\n                      return Object.keys(baseData).map((val) => {\r\n                        return { label: val, value: val };\r\n                      });\r\n                    }, [baseData])}\r\n                    placeholder={\"Select Primers to Display\"}\r\n                    isLoading={isProcessing}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n            <Col xs={12} lg={5} className=\"mb-3\">\r\n              <Row>\r\n                <Col sm={12} lg={5} className=\"mr-0 pr-lg-0\">\r\n                  <InputGroup.Text>\r\n                    Primer Type\r\n                    <AiOutlineQuestionCircle\r\n                      className=\"pl-1\"\r\n                      data-tip={help.pType}\r\n                    />\r\n                  </InputGroup.Text>\r\n                </Col>\r\n                <Col sm={12} lg={7} className=\"pl-lg-0\">\r\n                  <SelectDropdown\r\n                    onChange={selectionChange(setPType)}\r\n                    options={React.useMemo(\r\n                      () => [\r\n                        { label: \"fwd\", value: \"fwd\" },\r\n                        { label: \"rev\", value: \"rev\" },\r\n                        { label: \"prb\", value: \"prb\" },\r\n                      ],\r\n                      []\r\n                    )}\r\n                    placeholder={\"Specify Type\"}\r\n                    isLoading={isProcessing}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"mb-3\">\r\n            <Col sm={12} lg={2} className=\"mr-0 pr-lg-0\">\r\n              <InputGroup.Text>\r\n                Counties\r\n                <AiOutlineQuestionCircle\r\n                  className=\"pl-1\"\r\n                  data-tip={help.country}\r\n                />\r\n              </InputGroup.Text>\r\n            </Col>\r\n            <Col sm={12} lg={10} className=\"pl-lg-0\">\r\n              <SelectDropdown\r\n                className=\"country-picker\"\r\n                onChange={selectionChange(setCountries)}\r\n                options={React.useMemo(() => {\r\n                  const unique = new Set();\r\n                  const options = Object.values(baseData).reduce(\r\n                    (options, currVal) => {\r\n                      const countries = currVal.reduce((countries, virus) => {\r\n                        if (unique.has(virus.country_name)) {\r\n                          return countries;\r\n                        }\r\n                        unique.add(virus.country_name);\r\n                        countries.push({\r\n                          label: virus.country_name,\r\n                          value: virus.ISO_A3,\r\n                        });\r\n                        return countries;\r\n                      }, []);\r\n                      options.push(...countries);\r\n                      return options;\r\n                    },\r\n                    []\r\n                  );\r\n                  return options;\r\n                }, [baseData])}\r\n                placeholder={\"Filter Countries\"}\r\n                isLoading={isProcessing}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nconst ItemFilters = ({\r\n  baseData,\r\n  dateRange,\r\n  timeFrameBrush,\r\n  setTimeFrameBrush,\r\n  lookBack,\r\n  setLookBack,\r\n  useCum,\r\n  setUseCum,\r\n  miss,\r\n  setMiss,\r\n  miss3,\r\n  setMiss3,\r\n  match,\r\n  setMatch,\r\n  countryAsTotal,\r\n  setCountryAsTotal,\r\n  setCountries,\r\n  primers,\r\n  setPrimers,\r\n  setPType,\r\n  isProcessing,\r\n  setIsProcessing,\r\n  isBar,\r\n  setIsBar,\r\n  daysBetweenComparison,\r\n  setDaysBetweenComparison,\r\n  numberOfBars,\r\n  setNumberOfBars,\r\n  showAbsDiff,\r\n  setShowAbsDiff,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <BasicFilters\r\n          baseData={baseData}\r\n          isProcessing={isProcessing}\r\n          setIsProcessing={setIsProcessing}\r\n          setCountries={setCountries}\r\n          primers={primers}\r\n          setPrimers={setPrimers}\r\n          setPType={setPType}\r\n        />\r\n      </Row>\r\n      <Row>\r\n        <AdvanceFilters\r\n          baseData={baseData}\r\n          dateRange={dateRange}\r\n          timeFrameBrush={timeFrameBrush}\r\n          setTimeFrameBrush={setTimeFrameBrush}\r\n          lookBack={lookBack}\r\n          setLookBack={setLookBack}\r\n          useCum={useCum}\r\n          setUseCum={setUseCum}\r\n          miss={miss}\r\n          setMiss={setMiss}\r\n          miss3={miss3}\r\n          setMiss3={setMiss3}\r\n          match={match}\r\n          setMatch={setMatch}\r\n          countryAsTotal={countryAsTotal}\r\n          setCountryAsTotal={setCountryAsTotal}\r\n          setPType={setPType}\r\n          isBar={isBar}\r\n          setIsBar={setIsBar}\r\n          daysBetweenComparison={daysBetweenComparison}\r\n          setDaysBetweenComparison={setDaysBetweenComparison}\r\n          numberOfBars={numberOfBars}\r\n          setNumberOfBars={setNumberOfBars}\r\n          showAbsDiff={showAbsDiff}\r\n          setShowAbsDiff={setShowAbsDiff}\r\n        />\r\n      </Row>\r\n      <ReactTooltip html={true}></ReactTooltip>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemFilters;\r\n","// Code by React-table doc team\r\n\r\nimport React from \"react\";\r\nimport { useAsyncDebounce } from \"react-table\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\n// Define a default UI for filtering\r\nexport function GlobalFilter({\r\n  preGlobalFilteredRows,\r\n  globalFilter,\r\n  setGlobalFilter,\r\n  isHelpOn = true,\r\n}) {\r\n  const count = preGlobalFilteredRows.length;\r\n  const [value, setValue] = React.useState(globalFilter);\r\n  const onChange = useAsyncDebounce((value) => {\r\n    setGlobalFilter(value || undefined);\r\n  }, 200);\r\n\r\n  return (\r\n    <div className=\"general-search\">\r\n      <Form.Row>\r\n        <Form.Label column sm={12} lg={2}>\r\n          General Search\r\n        </Form.Label>\r\n        <Col sm={12} lg={10}>\r\n          <Form.Control\r\n            type=\"text\"\r\n            value={value || \"\"}\r\n            onChange={(e) => {\r\n              setValue(e.target.value);\r\n              onChange(e.target.value);\r\n            }}\r\n            placeholder={`Search the ${count} entries`}\r\n          />\r\n        </Col>\r\n      </Form.Row>\r\n      {isHelpOn ? (\r\n        <Form.Row>\r\n          <Form.Label column sm={0} lg={2}></Form.Label>\r\n          <Col sm={12} lg={10}>\r\n            <Form.Text className=\"text-muted\">\r\n              This does not affect plot data. If you want to set filters, set\r\n              the options above.\r\n            </Form.Text>\r\n          </Col>\r\n        </Form.Row>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\n// This is a custom UI for our 'between' or number range\r\n// filter. It uses two number boxes and filters rows to\r\n// ones that have values between the two\r\n// export function NumberRangeFilter({\r\n//   column: { filterValue = [], preFilteredRows, setFilter, id, Header },\r\n// }) {\r\n//   const [min, max] = React.useMemo(() => {\r\n//     let min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\r\n//     let max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\r\n//     preFilteredRows.forEach((row) => {\r\n//       min = Math.min(row.values[id], min);\r\n//       max = Math.max(row.values[id], max);\r\n//     });\r\n//     return [min, max];\r\n//   }, [id, preFilteredRows]);\r\n//   const debounceFilter = useAsyncDebounce((val) => {\r\n//     setFilter((old = []) => [val ? parseInt(val, 10) : undefined, old[1]]);\r\n//   }, 200);\r\n\r\n//   return (\r\n//     <Form className=\"filter\">\r\n//       <Form.Row>\r\n//         <Col>\r\n//           <Form.Control\r\n//             as=\"input\"\r\n//             value={filterValue[0] || \"\"}\r\n//             type=\"number\"\r\n//             onChange={(e) => {\r\n//               const val = e.target.value;\r\n//               debounceFilter(val);\r\n//             }}\r\n//             placeholder={`Min (${min})`}\r\n//             size=\"sm\"\r\n//             min={0}\r\n//             max={200}\r\n//           />\r\n//         </Col>\r\n//         <Col>\r\n//           <Form.Control\r\n//             value={filterValue[1] || \"\"}\r\n//             type=\"number\"\r\n//             onChange={(e) => {\r\n//               const val = e.target.value;\r\n//               setFilter((old = []) => [\r\n//                 old[0],\r\n//                 val ? parseInt(val, 10) : undefined,\r\n//               ]);\r\n//             }}\r\n//             placeholder={`Max (${max})`}\r\n//             size=\"sm\"\r\n//           />\r\n//         </Col>\r\n//       </Form.Row>\r\n//     </Form>\r\n//   );\r\n// }\r\n\r\n// Define a default UI for filtering\r\n// export function CountryColumnFilter({\r\n//   column: { filterValue, preFilteredRows, setFilter },\r\n// }) {\r\n//   //   const count = preFilteredRows.length;\r\n\r\n//   return (\r\n//     <Form.Control\r\n//       className=\"filter\"\r\n//       value={filterValue || \"\"}\r\n//       onChange={(e) => {\r\n//         setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\r\n//       }}\r\n//       placeholder={`Filter Country`}\r\n//     />\r\n//   );\r\n// }\r\n\r\n// // This is a custom filter UI for selecting\r\n// // a unique option from a list\r\n// export function SelectColumnFilter({\r\n//   column: { filterValue, setFilter, preFilteredRows, id, Header },\r\n// }) {\r\n//   // Calculate the options for filtering\r\n//   // using the preFilteredRows\r\n//   const options = React.useMemo(() => {\r\n//     const unique = new Set();\r\n//     preFilteredRows.forEach((row) => {\r\n//       unique.add(row.values[id]);\r\n//     });\r\n//     const options = [...unique.values()].map((val) => {\r\n//       return { value: val, label: val };\r\n//     });\r\n//     return [{ value: \"\", label: \"All\" }, ...options];\r\n//   }, [id, preFilteredRows]);\r\n\r\n//   // Render a multi-select box\r\n//   return (\r\n//     <SelectDropdown\r\n//       onChange={(e) => {\r\n//         const toFilter = e || [];\r\n//         const isAll = toFilter.find((val) => val.value === \"\");\r\n//         if (isAll || toFilter.length === 0) {\r\n//           setFilter(undefined);\r\n//         } else {\r\n//           const selection = toFilter.map((val) => val.value);\r\n//           setFilter(selection);\r\n//         }\r\n//       }}\r\n//       options={options}\r\n//       defaultValue={[]}\r\n//     />\r\n//   );\r\n// }\r\n\r\n// This is a custom filter UI that uses a\r\n// slider to set the filter value between a column's\r\n// min and max values\r\n// function SliderColumnFilter({\r\n//   column: { filterValue, setFilter, preFilteredRows, id },\r\n// }) {\r\n// Calculate the min and max\r\n// using the preFilteredRows\r\n\r\n//   const [min, max] = React.useMemo(() => {\r\n//     let min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\r\n//     let max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\r\n//     preFilteredRows.forEach((row) => {\r\n//       min = Math.min(row.values[id], min);\r\n//       max = Math.max(row.values[id], max);\r\n//     });\r\n//     return [min, max];\r\n//   }, [id, preFilteredRows]);\r\n\r\n//   return (\r\n//     <>\r\n//       <input\r\n//         className=\"filter\"\r\n//         type=\"range\"\r\n//         min={min}\r\n//         max={max}\r\n//         value={filterValue || min}\r\n//         onChange={(e) => {\r\n//           setFilter(parseInt(e.target.value, 10));\r\n//         }}\r\n//       />\r\n//       <button onClick={() => setFilter(undefined)}>Off</button>\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// Define a custom filter filter function!\r\n// function filterGreaterThan(rows, id, filterValue) {\r\n//   return rows.filter((row) => {\r\n//     const rowValue = row.values[id];\r\n//     return rowValue >= filterValue;\r\n//   });\r\n// }\r\n// export function filterContains(rows, id, filterValue) {\r\n//   return rows.filter((row) => {\r\n//     if (filterValue === undefined) {\r\n//       return true;\r\n//     }\r\n//     const rowValue = row.values[id];\r\n//     return filterValue.includes(rowValue);\r\n//   });\r\n// }\r\n\r\n// This is an autoRemove method on the filter function that\r\n// when given the new filter value and returns true, the filter\r\n// will be automatically removed. Normally this is just an undefined\r\n// check, but here, we want to remove the filter if it's not a number\r\n// filterGreaterThan.autoRemove = (val) => typeof val !== \"number\";\r\n\r\n// function App() {\r\n//   const columns = React.useMemo(\r\n//     () => [\r\n//       {\r\n//         Header: \"Name\",\r\n//         columns: [\r\n//           {\r\n//             Header: \"First Name\",\r\n//             accessor: \"firstName\",\r\n//           },\r\n//           {\r\n//             Header: \"Last Name\",\r\n//             accessor: \"lastName\",\r\n//             // Use our custom `fuzzyText` filter on this column\r\n//             filter: \"fuzzyText\",\r\n//           },\r\n//         ],\r\n//       },\r\n//       {\r\n//         Header: \"Info\",\r\n//         columns: [\r\n//           {\r\n//             Header: \"Age\",\r\n//             accessor: \"age\",\r\n//             Filter: SliderColumnFilter,\r\n//             filter: \"equals\",\r\n//           },\r\n//           {\r\n//             Header: \"Visits\",\r\n//             accessor: \"visits\",\r\n//             Filter: NumberRangeColumnFilter,\r\n//             filter: \"between\",\r\n//           },\r\n//           {\r\n//             Header: \"Status\",\r\n//             accessor: \"status\",\r\n//             Filter: SelectColumnFilter,\r\n//             filter: \"includes\",\r\n//           },\r\n//           {\r\n//             Header: \"Profile Progress\",\r\n//             accessor: \"progress\",\r\n//             Filter: SliderColumnFilter,\r\n//             filter: filterGreaterThan,\r\n//           },\r\n//         ],\r\n//       },\r\n//     ],\r\n//     []\r\n//   );\r\n\r\n//   return (\r\n//     <div></div>\r\n//   );\r\n// }\r\n","import React from \"react\";\r\nimport {\r\n  usePagination,\r\n  useTable,\r\n  useGlobalFilter,\r\n  useFlexLayout,\r\n  useResizeColumns,\r\n  useSortBy,\r\n} from \"react-table\";\r\nimport BTable from \"react-bootstrap/Table\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Collapse from \"react-bootstrap/Collapse\";\r\nimport { AiFillCaretDown, AiFillCaretRight } from \"react-icons/ai\";\r\nimport { FaSort, FaSortDown, FaSortUp } from \"react-icons/fa\";\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nimport \"./tableDisplay.css\";\r\n\r\nimport { GlobalFilter } from \"./filter\";\r\n\r\nfunction DataTable({ title, data, columns, isCollapsable, downloadFileName }) {\r\n  const [showTable, setShowTable] = React.useState(true);\r\n\r\n  if (isCollapsable) {\r\n    return (\r\n      <>\r\n        <Button\r\n          onClick={() => {\r\n            setShowTable(!showTable);\r\n          }}\r\n          className=\"show-table mb-3 mt-3\"\r\n          aria-controls=\"collapse-table\"\r\n          aria-expanded={showTable}\r\n          variant=\"light\"\r\n        >\r\n          {showTable ? <AiFillCaretDown /> : <AiFillCaretRight />}\r\n          {showTable ? `Close Table` : `Show Table`}\r\n        </Button>\r\n        <Collapse in={showTable}>\r\n          <div>\r\n            <TableDisplay\r\n              id=\"collapse-table\"\r\n              title={title}\r\n              data={data}\r\n              columns={columns}\r\n              isCombined={downloadFileName}\r\n            />\r\n          </div>\r\n        </Collapse>\r\n      </>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <TableDisplay\r\n        id=\"collapse-table\"\r\n        title={title}\r\n        data={data}\r\n        columns={columns}\r\n        downloadFileName={downloadFileName}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction TableDisplay({ title, data, columns, downloadFileName }) {\r\n  const csv_headers = columns.map((header) => {\r\n    return { label: header.Header, key: header.accessor };\r\n  });\r\n  const filterTypes = React.useMemo(\r\n    () => ({\r\n      // Or, override the default text filter to use\r\n      // \"startWith\"\r\n      text: (rows, id, filterValue) => {\r\n        return rows.filter((row) => {\r\n          const rowValue = row.values[id];\r\n          return rowValue !== undefined\r\n            ? String(rowValue)\r\n                .toLowerCase()\r\n                .startsWith(String(filterValue).toLowerCase())\r\n            : true;\r\n        });\r\n      },\r\n    }),\r\n    []\r\n  );\r\n\r\n  const defaultColumn = React.useMemo(\r\n    () => ({\r\n      minWidth: 80,\r\n      width: 160,\r\n      maxWidth: 600,\r\n    }),\r\n    []\r\n  );\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    page,\r\n\r\n    // pagination details\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize },\r\n\r\n    // filtering details\r\n    state,\r\n    // visibleColumns,\r\n    preGlobalFilteredRows,\r\n    setGlobalFilter,\r\n    // filteredRows,\r\n    // rows,\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      initialState: {\r\n        pageIndex: 0,\r\n        hiddenColumns: [\"ISO_A3\", \"virus_match_idx\", \"query_match_idx\"],\r\n      },\r\n      defaultColumn,\r\n      filterTypes,\r\n    },\r\n    // useFilters,\r\n    useGlobalFilter,\r\n    useSortBy,\r\n    usePagination,\r\n    useFlexLayout,\r\n    useResizeColumns\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"table-title\">{title}</h2>\r\n      <GlobalFilter\r\n        preGlobalFilteredRows={preGlobalFilteredRows}\r\n        globalFilter={state.globalFilter}\r\n        setGlobalFilter={setGlobalFilter}\r\n      />\r\n\r\n      {/* <pre>\r\n        <code>{JSON.stringify(state, null, 2)}</code>\r\n      </pre> */}\r\n      <BTable\r\n        {...getTableProps()}\r\n        variant=\"light\"\r\n        //   size=\"lg\"\r\n        responsive\r\n        striped\r\n        bordered\r\n        hover\r\n      >\r\n        <thead className=\"thead\">\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => {\r\n                return (\r\n                  <th {...column.getHeaderProps()} className=\"table-header\">\r\n                    {column.render(\"Header\")}\r\n                    <span {...column.getSortByToggleProps()}>\r\n                      {column.isSorted ? (\r\n                        column.isSortedDesc ? (\r\n                          <FaSortDown className=\"pl-1\" />\r\n                        ) : (\r\n                          <FaSortUp className=\"pl-1\" />\r\n                        )\r\n                      ) : (\r\n                        <FaSort className=\"pl-1\" />\r\n                      )}\r\n                    </span>\r\n                    {column.canResize && (\r\n                      <div\r\n                        {...column.getResizerProps()}\r\n                        className={`resizer ${\r\n                          column.isResizing ? \"isResizing\" : \"\"\r\n                        }`}\r\n                      />\r\n                    )}\r\n                    {/* {column.canFilter ? (\r\n                      <div>{column.render(\"Filter\")}</div>\r\n                    ) : null} */}\r\n                  </th>\r\n                );\r\n              })}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()} className=\"tbody\">\r\n          {page.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  if (cell.column.id === \"match_diag\") {\r\n                    const display_str = cell.value.split(\" \").map((val) => {\r\n                      return val.split(\"\");\r\n                    });\r\n                    return (\r\n                      <td\r\n                        {...cell.getCellProps()}\r\n                        className=\"table-cell match-diag\"\r\n                      >\r\n                        {display_str.map((val, idx) => {\r\n                          return (\r\n                            <div key={idx}>\r\n                              {val.map((char, idx) => {\r\n                                return (\r\n                                  <span key={idx} className={char}>\r\n                                    {char}\r\n                                  </span>\r\n                                );\r\n                              })}\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </td>\r\n                    );\r\n                  }\r\n                  return (\r\n                    <td\r\n                      {...cell.getCellProps()}\r\n                      className={`table-cell ${\r\n                        cell.column.id === \"country_name\" ||\r\n                        cell.column.id === \"virus_name\"\r\n                          ? \"text-align-start\"\r\n                          : \"\"\r\n                      }`}\r\n                    >\r\n                      {cell.render(\"Cell\")}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n          {!canNextPage ? (\r\n            <tr className=\"end-of-data\">\r\n              <td>{`---------- All Data Displayed ----------`}</td>\r\n            </tr>\r\n          ) : null}\r\n        </tbody>\r\n      </BTable>\r\n      <Row className=\"pagination\">\r\n        <Col className=\"page-controls\" sm={12} md={4}>\r\n          <Button\r\n            variant=\"light\"\r\n            onClick={() => gotoPage(0)}\r\n            disabled={!canPreviousPage}\r\n          >\r\n            {\"<<\"}\r\n          </Button>\r\n          <Button\r\n            variant=\"light\"\r\n            onClick={() => previousPage()}\r\n            disabled={!canPreviousPage}\r\n          >\r\n            {\"<\"}\r\n          </Button>\r\n          <Button\r\n            variant=\"light\"\r\n            onClick={() => nextPage()}\r\n            disabled={!canNextPage}\r\n          >\r\n            {\">\"}\r\n          </Button>\r\n          <Button\r\n            variant=\"light\"\r\n            onClick={() => gotoPage(pageCount - 1)}\r\n            disabled={!canNextPage}\r\n          >\r\n            {\">>\"}\r\n          </Button>\r\n          <p>\r\n            {\" \"}\r\n            Page <strong>{pageIndex + 1} </strong> of{\" \"}\r\n            <strong>{pageOptions.length}</strong>\r\n          </p>\r\n        </Col>\r\n        <Col className=\"manual-page-selection\" sm={12} md={4}>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"page-info\">Go to page:</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              type=\"number\"\r\n              defaultValue={pageIndex + 1}\r\n              onChange={(e) => {\r\n                const page = e.target.value ? Number(e.target.value) - 1 : 0;\r\n                gotoPage(page);\r\n              }}\r\n              aria-label=\"Go To Page\"\r\n              aria-describedby=\"page-info\"\r\n            />\r\n          </InputGroup>\r\n        </Col>\r\n        <Col className=\"results-per-page\" sm={12} md={4}>\r\n          <Form.Control\r\n            value={pageSize}\r\n            onChange={(e) => {\r\n              setPageSize(Number(e.target.value));\r\n            }}\r\n            as=\"select\"\r\n          >\r\n            {[10, 20, 30, 40, 50].map((pageSize) => (\r\n              <option key={pageSize} value={pageSize}>\r\n                Show {pageSize}\r\n              </option>\r\n            ))}\r\n          </Form.Control>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <CSVLink\r\n          data={data}\r\n          headers={csv_headers}\r\n          filename={downloadFileName}\r\n          className=\"btn btn-dark\"\r\n          target=\"_blank\"\r\n        >\r\n          Download Table\r\n        </CSVLink>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\nexport default DataTable;\r\n","import React from \"react\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\nimport { debounce } from \"../util\";\r\n\r\nconst LineGraph = ({\r\n  title,\r\n  title2,\r\n  data,\r\n  primers,\r\n  dates,\r\n  setTimeFrameBrush,\r\n  timeFrameBrush,\r\n  showModal,\r\n  setModalInfo,\r\n  subtitle = \"\",\r\n  subtitle2 = \"\",\r\n}) => {\r\n  function buildDataSet(data) {\r\n    const datasets = [];\r\n    for (const dataset of data) {\r\n      datasets.push({\r\n        dimensions: [\r\n          \"countries_considered\",\r\n          \"date\",\r\n          \"mutation3_abs\",\r\n          \"mutation3_pct\",\r\n          \"mutation_abs\",\r\n          \"mutation_pct\",\r\n          \"name\",\r\n          \"submission_count\",\r\n        ],\r\n        source: dataset,\r\n      });\r\n    }\r\n    return datasets;\r\n  }\r\n  function getMutationPlot(primers, dataPlot, xIndex, yIndex) {\r\n    const plots = [];\r\n    for (let i = 0; i < primers.length; i++) {\r\n      plots.push({\r\n        name: `${primers[i]}`,\r\n        type: \"line\",\r\n        hoverAnimation: false,\r\n        xAxisIndex: xIndex,\r\n        yAxisIndex: yIndex,\r\n        encode: {\r\n          x: \"date\",\r\n          y: dataPlot,\r\n        },\r\n        datasetIndex: i,\r\n      });\r\n    }\r\n    return plots;\r\n  }\r\n  function getDateIndex(date, dates) {\r\n    if (date === undefined) return undefined;\r\n    const index = dates.findIndex((val) => {\r\n      const dateString = date.toISOString().slice(0, 10);\r\n      return dateString === val;\r\n    });\r\n    return index === -1 ? undefined : index;\r\n  }\r\n  function getStartDate(dates, date, lookBack) {\r\n    const initDate = new Date(dates[0]);\r\n    let startDate = new Date(date);\r\n    startDate.setDate(startDate.getDate() - lookBack);\r\n    if (startDate < initDate) {\r\n      startDate = initDate;\r\n    }\r\n    return startDate.toISOString().slice(0, 10);\r\n  }\r\n\r\n  const startIndex =\r\n    ((getDateIndex(timeFrameBrush[0], dates) || 0) * 100) / dates.length;\r\n  const endIndex =\r\n    ((getDateIndex(timeFrameBrush[1], dates) + 1 || dates.length) * 100) /\r\n    dates.length;\r\n\r\n  const mutationPlot = getMutationPlot(primers, \"mutation_pct\", 0, 0);\r\n  const mutation3Plot = getMutationPlot(primers, \"mutation3_pct\", 1, 1);\r\n  const datasets = buildDataSet(data, primers);\r\n  // console.log(\"data :>> \", data);\r\n  // console.log(\"mutationPlot :>> \", mutationPlot);\r\n  // console.log(\"datasets :>> \", datasets);\r\n\r\n  const option = {\r\n    title: [\r\n      {\r\n        text: title,\r\n        subtext: subtitle,\r\n        left: \"center\",\r\n      },\r\n      {\r\n        text: title2,\r\n        subtext: subtitle2,\r\n        left: \"center\",\r\n        top: \"center\",\r\n      },\r\n    ],\r\n    tooltip: {\r\n      trigger: \"axis\",\r\n      axisPointer: {\r\n        type: \"cross\",\r\n        animation: false,\r\n      },\r\n      backgroundColor: \"rgba(50,50,50, 0.9)\",\r\n      formatter: function (params) {\r\n        let baseDetails = params[0].data;\r\n        let date = baseDetails.date;\r\n        let startDate =\r\n          baseDetails.lookBack === -1\r\n            ? dates[0]\r\n            : getStartDate(dates, date, baseDetails.lookBack);\r\n        let submissionCount = baseDetails.submission_count;\r\n        let countries =\r\n          (baseDetails.countries_considered || []).length === 0\r\n            ? \"all available Countries\"\r\n            : `${baseDetails.countries_considered.length} countries`;\r\n\r\n        let tooltip = `<div>Details from ${startDate} to ${date}<br/>Total Submissions: ${submissionCount} from ${countries}</div><br/>`;\r\n\r\n        for (let i = 0; i < params.length / 2; i++) {\r\n          tooltip += `<div>${params[i].data.name}\r\n            <br/>\r\n            <strong>Abs Mutation:</strong> ${params[i].data.mutation_abs}<br/>\r\n            <strong>Abs Mutation in 3' end:</strong> ${\r\n              params[i].data.mutation3_abs\r\n            }%<br/>\r\n            <strong>Mutation %:</strong> ${params[i].data.mutation_pct.toFixed(\r\n              3\r\n            )}<br/>\r\n            <strong>Mutation % in 3' end:</strong> ${params[\r\n              i\r\n            ].data.mutation3_pct.toFixed(3)}%</div><br/>`;\r\n        }\r\n        return tooltip;\r\n      },\r\n      position: function (pos, params, el, elRect, size) {\r\n        let obj = {};\r\n        obj[[\"top\", \"bottom\"][+(pos[1] < size.viewSize[1] / 2)]] = 10;\r\n        obj[[\"left\", \"right\"][+(pos[0] < size.viewSize[0] / 2)]] = 30;\r\n        return obj;\r\n      },\r\n    },\r\n    legend: {\r\n      data: primers,\r\n      orient: \"vertical\",\r\n      type: \"scroll\",\r\n      top: \"5%\",\r\n      right: 0,\r\n    },\r\n    // toolbox: {\r\n    //   feature: {\r\n    //     dataZoom: {\r\n    //       yAxisIndex: \"none\",\r\n    //     },\r\n    //     restore: {},\r\n    //     saveAsImage: {},\r\n    //   },\r\n    // },\r\n    axisPointer: {\r\n      link: { xAxisIndex: \"all\" },\r\n    },\r\n    dataZoom: [\r\n      {\r\n        type: \"slider\",\r\n        show: true,\r\n        realtime: true,\r\n        start: startIndex,\r\n        end: endIndex,\r\n        xAxisIndex: [0, 1],\r\n        top: \"95%\",\r\n      },\r\n      {\r\n        type: \"inside\",\r\n        realtime: true,\r\n        start: startIndex,\r\n        end: endIndex,\r\n        xAxisIndex: [0, 1],\r\n      },\r\n    ],\r\n    grid: [\r\n      { bottom: \"60%\", right: \"15%\" },\r\n      { top: \"57%\", right: \"15%\" },\r\n    ],\r\n    xAxis: [\r\n      {\r\n        name: \"date\",\r\n        nameLocation: \"middle\",\r\n        nameTextStyle: {\r\n          align: \"center\",\r\n          verticalAlign: \"top\",\r\n          padding: [6, 0, 0, 0],\r\n        },\r\n        gridIndex: 0,\r\n        type: \"category\",\r\n      },\r\n      {\r\n        name: \"date\",\r\n        nameLocation: \"middle\",\r\n        nameTextStyle: {\r\n          align: \"center\",\r\n          verticalAlign: \"top\",\r\n          padding: [6, 0, 0, 0],\r\n        },\r\n\r\n        gridIndex: 1,\r\n        type: \"category\",\r\n      },\r\n    ],\r\n    yAxis: [\r\n      {\r\n        name: \"Total Percentage (%)\",\r\n        gridIndex: 0,\r\n        nameLocation: \"middle\",\r\n        nameGap: 25,\r\n        offset: -2,\r\n        nameTextStyle: {\r\n          padding: [0, 0, 15, 0],\r\n        },\r\n      },\r\n      {\r\n        name: \"Total Percentage (%)\",\r\n        gridIndex: 1,\r\n        nameLocation: \"middle\",\r\n        offset: -2,\r\n        nameGap: 25,\r\n        nameTextStyle: {\r\n          padding: [0, 0, 15, 0],\r\n        },\r\n      },\r\n    ],\r\n    dataset: datasets,\r\n    series: [...mutationPlot, ...mutation3Plot],\r\n  };\r\n\r\n  const seeEvent = (e) => {\r\n    console.log(e);\r\n    setModalInfo((prev) => {\r\n      return {\r\n        ...prev,\r\n        date: e.data.date,\r\n        lookBack: e.data.lookBack,\r\n        primer: e.data.name,\r\n        country: null,\r\n      };\r\n    });\r\n    showModal();\r\n  };\r\n\r\n  function legendChange({ selected }) {\r\n    // TODO (Eb): Figure out how to handle legend selection\r\n    // const primers = [];\r\n    // for (const primer of Object.keys(selected)) {\r\n    //   if (selected[primer]) {\r\n    //     primers.push(primer);\r\n    //   }\r\n    // }\r\n    // setPrimers(primers);\r\n  }\r\n\r\n  const dataZoomChange = debounce((e) => {\r\n    let data = e;\r\n    if (e.batch !== undefined) {\r\n      data = e.batch[0];\r\n    }\r\n    const startIndex = Math.floor((dates.length * data.start) / 100);\r\n    const endIndex = Math.floor((dates.length * data.end) / 100);\r\n    const startStringDate = dates[startIndex] || dates[0];\r\n    const endStringDate = dates[endIndex] || dates[dates.length - 1];\r\n    let startDate = new Date(startStringDate);\r\n    let endDate = new Date(endStringDate);\r\n    startDate.setDate(startDate.getDate());\r\n    endDate.setDate(endDate.getDate());\r\n    setTimeFrameBrush([startDate, endDate]);\r\n  }, 800);\r\n\r\n  let onEvents = {\r\n    click: seeEvent,\r\n    legendselectchanged: legendChange,\r\n    dataZoom: dataZoomChange,\r\n  };\r\n  return (\r\n    <ReactEcharts\r\n      option={option}\r\n      style={{ height: \"475px\", width: \"100%\" }}\r\n      onEvents={onEvents}\r\n      notMerge={false}\r\n    />\r\n  );\r\n};\r\n\r\nexport default LineGraph;\r\n","import React from \"react\";\r\nimport LineGraph from \"./lineGraph\";\r\nimport { debounce, makeBaseGraphData } from \"../util\";\r\nimport worker from \"workerize-loader!../../pages/results/dataFilter\"; // eslint-disable-line import/no-webpack-loader-syntax\r\n\r\nconst CombinedLineGraph = ({\r\n  combinedBase,\r\n  combinedName,\r\n  dateRange,\r\n  totalSubmission,\r\n  setIsProcessingGraphs,\r\n  pType,\r\n  countries,\r\n  miss,\r\n  miss3,\r\n  match,\r\n  useCum,\r\n  lookBack,\r\n  timeFrameBrush,\r\n  setTimeFrameBrush,\r\n  showModal,\r\n  setModalInfo,\r\n  title,\r\n  title2,\r\n}) => {\r\n  const instance = React.useRef(worker());\r\n\r\n  const [lineData, setLineData] = React.useState([]);\r\n\r\n  const makeData = React.useCallback(\r\n    debounce(\r\n      (\r\n        combinedBase,\r\n        combinedName,\r\n        pType,\r\n        countries,\r\n        miss,\r\n        miss3,\r\n        match,\r\n        useCum,\r\n        lookBack,\r\n        totalSubmission\r\n      ) => {\r\n        let start = performance.now();\r\n        setIsProcessingGraphs(true);\r\n        instance.current\r\n          .getCombinedLineData(\r\n            makeBaseGraphData({ [combinedName]: combinedBase }),\r\n            [combinedName] || [],\r\n            dateRange,\r\n            pType,\r\n            countries,\r\n            miss,\r\n            miss3,\r\n            match,\r\n            totalSubmission,\r\n            useCum,\r\n            lookBack\r\n          )\r\n          .then((result) => {\r\n            setIsProcessingGraphs(false);\r\n            setLineData(result);\r\n            console.log(\r\n              `Time taken for creating combined line data: ${(\r\n                performance.now() - start\r\n              ).toFixed(5)} milliseconds`\r\n            );\r\n          });\r\n      },\r\n      500\r\n    ),\r\n    []\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    makeData(\r\n      combinedBase,\r\n      combinedName,\r\n      pType,\r\n      countries,\r\n      miss,\r\n      miss3,\r\n      match,\r\n      useCum,\r\n      lookBack,\r\n      totalSubmission\r\n    );\r\n  }, [\r\n    makeData,\r\n    combinedBase,\r\n    combinedName,\r\n    pType,\r\n    countries,\r\n    miss,\r\n    miss3,\r\n    match,\r\n    useCum,\r\n    lookBack,\r\n    totalSubmission,\r\n  ]);\r\n\r\n  if (Object.keys(combinedBase).length !== 0) {\r\n    return (\r\n      <LineGraph\r\n        title={title}\r\n        title2={title2}\r\n        data={lineData}\r\n        primers={combinedName}\r\n        dates={dateRange}\r\n        timeFrameBrush={timeFrameBrush}\r\n        setTimeFrameBrush={setTimeFrameBrush}\r\n        showModal={showModal}\r\n        setModalInfo={setModalInfo}\r\n      />\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\nconst objEqual = (a, b) => {\r\n  return (\r\n    Object.entries(a).sort().toString() === Object.entries(b).sort().toString()\r\n  );\r\n};\r\nconst areEqual = (prev, next) => {\r\n  return (\r\n    prev.lookBack === next.lookBack &&\r\n    objEqual(prev.combinedBase, next.combinedBase) &&\r\n    objEqual(prev.dateRange, next.dateRange) &&\r\n    objEqual(prev.totalSubmission, next.totalSubmission) &&\r\n    objEqual(prev.timeFrameBrush, next.timeFrameBrush) &&\r\n    objEqual(prev.miss, next.miss) &&\r\n    objEqual(prev.miss3, next.miss3) &&\r\n    objEqual(prev.match, next.match) &&\r\n    prev.useCum === next.useCum &&\r\n    prev.combinedName === next.combinedName &&\r\n    prev.lookBack === next.lookBack &&\r\n    objEqual(prev.pType, next.pType) &&\r\n    objEqual(prev.countries, next.countries)\r\n  );\r\n};\r\nexport default React.memo(CombinedLineGraph, areEqual);\r\n","import React from \"react\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\n\r\nconst BarGraph = ({\r\n  title,\r\n  title2,\r\n  data,\r\n  showAbsDiff,\r\n  showModal,\r\n  setModalInfo,\r\n  subtitle = \"\",\r\n  subtitle2 = \"\",\r\n}) => {\r\n  function getBarLabel(data, idx, toPlot) {\r\n    const fontSize = 9;\r\n    return {\r\n      show: true,\r\n      position: \"insideTop\",\r\n      distance: 5,\r\n      align: \"center\",\r\n      verticalAlign: \"top\",\r\n      rotate: 0,\r\n      formatter: function (params) {\r\n        if (!showAbsDiff) {\r\n          return `${params.data[toPlot].toFixed(3)}%`;\r\n        }\r\n        const primer = params.data.name;\r\n        const currVal = data[idx].filter((val) => val.name === primer)[0][\r\n          toPlot\r\n        ];\r\n        const prevVal = data[idx - 1].filter((val) => val.name === primer)[0][\r\n          toPlot\r\n        ];\r\n        const difference = (currVal - prevVal).toFixed(2);\r\n        let label = difference > 0 ? `{p|+` : difference < 0 ? `{n|` : \"{zero|\";\r\n        return `${label}${difference}%}`;\r\n      },\r\n      fontSize: fontSize,\r\n      backgroundColor: \"#232323\",\r\n      textBorderColor: \"transparent\",\r\n      padding: [4, 5, 2, 5],\r\n      rich: {\r\n        p: { color: \"#88ff88\", fontSize: fontSize },\r\n        n: { color: \"#ff8677\", fontSize: fontSize },\r\n        zero: { color: \"#eef\", fontSize: fontSize },\r\n      },\r\n    };\r\n  }\r\n\r\n  function buildDataset(datasets) {\r\n    const data = [];\r\n    for (const dataset of datasets) {\r\n      data.push({\r\n        dimensions: [\r\n          \"countries_considered\",\r\n          \"date\",\r\n          \"mutation3_abs\",\r\n          \"mutation3_pct\",\r\n          \"mutation_abs\",\r\n          \"mutation_pct\",\r\n          \"name\",\r\n          \"submission_count\",\r\n        ],\r\n        source: dataset,\r\n      });\r\n    }\r\n    return data;\r\n  }\r\n\r\n  function buildBarPlot(data, toPlot, xAxisIndex, yAxisIndex) {\r\n    const plots = [];\r\n    for (let i = 1; i < data.length; i++) {\r\n      plots.push({\r\n        name: (data[i][0] || {}).date,\r\n        type: \"bar\",\r\n        barMaxWidth: 40,\r\n        xAxisIndex: xAxisIndex,\r\n        yAxisIndex: yAxisIndex,\r\n        label: getBarLabel(data, i, toPlot),\r\n        encode: {\r\n          x: \"name\",\r\n          y: toPlot,\r\n        },\r\n        datasetIndex: i,\r\n      });\r\n    }\r\n    return plots;\r\n  }\r\n\r\n  const dataset = buildDataset(data);\r\n  const mutation = buildBarPlot(data, \"mutation_pct\", 0, 0);\r\n  const mutation3 = buildBarPlot(data, \"mutation3_pct\", 1, 1);\r\n  // console.log(\"dataset :>> \", dataset);\r\n  // console.log(\"mutation :>> \", mutation);\r\n  // console.log(\"mutation3 :>> \", mutation3);\r\n  const option = {\r\n    title: [\r\n      {\r\n        text: title,\r\n        subtext: subtitle,\r\n        left: \"center\",\r\n      },\r\n      {\r\n        text: title2,\r\n        subtext: subtitle2,\r\n        left: \"center\",\r\n        top: \"52%\",\r\n      },\r\n    ],\r\n    tooltip: {\r\n      trigger: \"axis\",\r\n      formatter: function (params) {\r\n        const data = params.slice(0, params.length / 2);\r\n        const primerName = data[0].data.name;\r\n        let tooltip = `<div>Details for ${primerName} (Left to Right)</div><br/>`;\r\n        for (const item of data) {\r\n          const submissionCount = item.data.submission_count;\r\n          const countries =\r\n            item.data.countries_considered.length === 0\r\n              ? \"All Countries\"\r\n              : `${item.data.countries_considered.length} countries`;\r\n          const endDate = new Date(item.data.date);\r\n          const startDate = new Date(item.data.date);\r\n          startDate.setDate(startDate.getDate() - parseInt(item.data.lookBack));\r\n          tooltip += `<div><strong>From ${startDate\r\n            .toISOString()\r\n            .slice(0, 10)} to ${endDate.toISOString().slice(0, 10)}:</strong> \r\n          <br/>\r\n          ${submissionCount} Submissions from ${countries} \r\n          <br/>\r\n          <strong>Abs Mutation:</strong> ${item.data.mutation_abs}<br/>\r\n          <strong>Abs Mutation in 3' end:</strong> ${item.data.mutation3_abs}%\r\n          <br/>\r\n          <strong>Mutation %:</strong> ${item.data.mutation_pct.toFixed(3)}\r\n          <br/>\r\n          <strong>Mutation % in 3' end:</strong> ${item.data.mutation3_pct.toFixed(\r\n            3\r\n          )}%\r\n          </div><br/>`;\r\n        }\r\n        return tooltip;\r\n      },\r\n      axisPointer: {\r\n        type: \"shadow\",\r\n        animation: false,\r\n      },\r\n      position: function (pos, params, el, elRect, size) {\r\n        let obj = {};\r\n        obj[[\"top\", \"bottom\"][+(pos[1] < size.viewSize[1] / 2)]] = 10;\r\n        obj[\"left\"] = pos[0];\r\n        return obj;\r\n      },\r\n    },\r\n    axisPointer: {\r\n      link: { xAxisIndex: \"all\" },\r\n    },\r\n    grid: [\r\n      { top: \"8%\", bottom: \"65%\" },\r\n      { top: \"57%\", bottom: \"20%\" },\r\n    ],\r\n    xAxis: [\r\n      {\r\n        name: \"primers\",\r\n        gridIndex: 0,\r\n        type: \"category\",\r\n        axisLabel: {\r\n          rotate: 45,\r\n          margin: 15,\r\n        },\r\n      },\r\n      {\r\n        name: \"primers\",\r\n        gridIndex: 1,\r\n        type: \"category\",\r\n        axisLabel: {\r\n          rotate: 45,\r\n          margin: 15,\r\n        },\r\n      },\r\n    ],\r\n    yAxis: [\r\n      {\r\n        name: \"Total Percentage (%)\",\r\n        gridIndex: 0,\r\n        nameLocation: \"middle\",\r\n        nameGap: 50,\r\n      },\r\n      {\r\n        name: \"Total Percentage (%)\",\r\n        gridIndex: 1,\r\n        nameLocation: \"middle\",\r\n        nameGap: 50,\r\n      },\r\n    ],\r\n    dataset: dataset,\r\n    series: [...mutation, ...mutation3],\r\n  };\r\n  const seeEvent = (e) => {\r\n    console.log(e);\r\n    setModalInfo((prev) => {\r\n      return {\r\n        ...prev,\r\n        date: e.data.date,\r\n        lookBack: e.data.lookBack,\r\n        primer: e.data.name,\r\n        country: null,\r\n      };\r\n    });\r\n    showModal();\r\n  };\r\n  let onEvents = {\r\n    click: seeEvent,\r\n  };\r\n  return (\r\n    <ReactEcharts\r\n      option={option}\r\n      style={{ height: \"600px\", width: \"100%\" }}\r\n      notMerge={true}\r\n      onEvents={onEvents}\r\n    />\r\n  );\r\n};\r\n\r\nexport default BarGraph;\r\n","import React from \"react\";\r\nimport BarGraph from \"../../components/mutGraphs/barGraph\";\r\nimport { debounce } from \"../util\";\r\n\r\nimport worker from \"workerize-loader!../../pages/results/dataFilter\"; // eslint-disable-line import/no-webpack-loader-syntax\r\n\r\nconst BarGraphWrapper = ({\r\n  rawData,\r\n  dateRange,\r\n  totalSubmission,\r\n  setIsProcessingGraphs,\r\n  primers,\r\n  pType,\r\n  countries,\r\n  miss,\r\n  miss3,\r\n  match,\r\n  useCum,\r\n  lookBack,\r\n  timeFrameBrush,\r\n  showModal,\r\n  setModalInfo,\r\n  showAbsDiff,\r\n  daysBetweenComparison,\r\n  numberOfBars,\r\n  title,\r\n  title2,\r\n}) => {\r\n  const instance = React.useRef(worker());\r\n\r\n  const [barData, setBarData] = React.useState([]);\r\n\r\n  const updateBarData = React.useCallback(\r\n    debounce(\r\n      (\r\n        primers,\r\n        pType,\r\n        countries,\r\n        miss,\r\n        miss3,\r\n        match,\r\n        useCum,\r\n        lookBack,\r\n        totalSubmission,\r\n        timeFrameBrush,\r\n        daysBetweenComparison,\r\n        numberOfBars\r\n      ) => {\r\n        let start = performance.now();\r\n        setIsProcessingGraphs(true);\r\n        instance.current\r\n          .getLineGraphData({\r\n            baseData: rawData,\r\n            dateRange: dateRange,\r\n            primers: primers,\r\n            pType: pType,\r\n            countries: countries,\r\n            miss: miss,\r\n            miss3: miss3,\r\n            match: match,\r\n            totalSubmission: totalSubmission,\r\n            useCum: useCum,\r\n            lookBack: lookBack,\r\n          })\r\n          .then((lineData) => {\r\n            instance.current\r\n              .makeBarData({\r\n                graphOverview: lineData,\r\n                dates: dateRange,\r\n                timeFrameBrush: timeFrameBrush,\r\n                daysBetweenComparison: daysBetweenComparison,\r\n                numberOfBars: numberOfBars,\r\n              })\r\n              .then((result) => {\r\n                setBarData(result);\r\n                console.log(\"barData :>> \", result);\r\n                console.log(\r\n                  `Time taken for bar graph data: ${(\r\n                    performance.now() - start\r\n                  ).toFixed(5)} milliseconds`\r\n                );\r\n                setIsProcessingGraphs(false);\r\n              });\r\n          });\r\n      },\r\n      500\r\n    ),\r\n    []\r\n  );\r\n  React.useEffect(() => {\r\n    updateBarData(\r\n      primers,\r\n      pType,\r\n      countries,\r\n      miss,\r\n      miss3,\r\n      match,\r\n      useCum,\r\n      lookBack,\r\n      totalSubmission,\r\n      timeFrameBrush,\r\n      daysBetweenComparison,\r\n      numberOfBars\r\n    );\r\n  }, [\r\n    updateBarData,\r\n    primers,\r\n    pType,\r\n    countries,\r\n    miss,\r\n    miss3,\r\n    match,\r\n    useCum,\r\n    lookBack,\r\n    totalSubmission,\r\n    timeFrameBrush,\r\n    daysBetweenComparison,\r\n    numberOfBars,\r\n  ]);\r\n\r\n  if (Object.keys(rawData).length !== 0) {\r\n    return (\r\n      <BarGraph\r\n        title={title}\r\n        title2={title2}\r\n        data={barData}\r\n        showAbsDiff={showAbsDiff}\r\n        showModal={showModal}\r\n        setModalInfo={setModalInfo}\r\n      />\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst objEqual = (a, b) => {\r\n  return (\r\n    Object.entries(a).sort().toString() === Object.entries(b).sort().toString()\r\n  );\r\n};\r\nconst areEqual = (prev, next) => {\r\n  return (\r\n    prev.lookBack === next.lookBack &&\r\n    objEqual(prev.rawData, next.rawData) &&\r\n    objEqual(prev.dateRange, next.dateRange) &&\r\n    objEqual(prev.totalSubmission, next.totalSubmission) &&\r\n    objEqual(prev.timeFrameBrush, next.timeFrameBrush) &&\r\n    objEqual(prev.miss, next.miss) &&\r\n    objEqual(prev.miss3, next.miss3) &&\r\n    objEqual(prev.match, next.match) &&\r\n    prev.useCum === next.useCum &&\r\n    prev.lookBack === next.lookBack &&\r\n    prev.daysBetweenComparison === next.daysBetweenComparison &&\r\n    prev.numberOfBars === next.numberOfBars &&\r\n    prev.showAbsDiff === next.showAbsDiff &&\r\n    objEqual(prev.pType, next.pType) &&\r\n    objEqual(prev.countries, next.countries) &&\r\n    objEqual(prev.primers, next.primers)\r\n  );\r\n};\r\n\r\nexport default React.memo(BarGraphWrapper, areEqual);\r\n","import React from \"react\";\r\nimport LineGraph from \"../../components/mutGraphs/lineGraph\";\r\nimport { debounce } from \"../util\";\r\nimport worker from \"workerize-loader!../../pages/results/dataFilter\"; // eslint-disable-line import/no-webpack-loader-syntax\r\n\r\nconst InLineGraph = ({\r\n  rawData,\r\n  dateRange,\r\n  totalSubmission,\r\n  setIsProcessingGraphs,\r\n  primers,\r\n  pType,\r\n  countries,\r\n  miss,\r\n  miss3,\r\n  match,\r\n  useCum,\r\n  lookBack,\r\n  timeFrameBrush,\r\n  setTimeFrameBrush,\r\n  showModal,\r\n  setModalInfo,\r\n  title,\r\n  title2,\r\n}) => {\r\n  const instance = React.useRef(worker());\r\n\r\n  const [lineData, setLineData] = React.useState([]);\r\n\r\n  const makeData = React.useCallback(\r\n    debounce(\r\n      (\r\n        primers,\r\n        pType,\r\n        countries,\r\n        miss,\r\n        miss3,\r\n        match,\r\n        useCum,\r\n        lookBack,\r\n        totalSubmission\r\n      ) => {\r\n        let start = performance.now();\r\n        setIsProcessingGraphs(true);\r\n        instance.current\r\n          .getLineGraphData({\r\n            baseData: rawData,\r\n            dateRange: dateRange,\r\n            primers: primers,\r\n            pType: pType,\r\n            countries: countries,\r\n            miss: miss,\r\n            miss3: miss3,\r\n            match: match,\r\n            totalSubmission: totalSubmission,\r\n            useCum: useCum,\r\n            lookBack: lookBack,\r\n          })\r\n          .then((result) => {\r\n            console.log(\r\n              `Time taken for line graph data: ${(\r\n                performance.now() - start\r\n              ).toFixed(5)} milliseconds`\r\n            );\r\n            setIsProcessingGraphs(false);\r\n            setLineData(result);\r\n          });\r\n      },\r\n      500\r\n    ),\r\n    []\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    makeData(\r\n      primers,\r\n      pType,\r\n      countries,\r\n      miss,\r\n      miss3,\r\n      match,\r\n      useCum,\r\n      lookBack,\r\n      totalSubmission\r\n    );\r\n  }, [\r\n    makeData,\r\n    primers,\r\n    pType,\r\n    countries,\r\n    miss,\r\n    miss3,\r\n    match,\r\n    useCum,\r\n    lookBack,\r\n    totalSubmission,\r\n  ]);\r\n\r\n  if (Object.keys(rawData).length !== 0) {\r\n    return (\r\n      <LineGraph\r\n        title={title}\r\n        title2={title2}\r\n        data={lineData}\r\n        primers={primers.length === 0 ? Object.keys(rawData) : primers}\r\n        dates={dateRange}\r\n        timeFrameBrush={timeFrameBrush}\r\n        setTimeFrameBrush={setTimeFrameBrush}\r\n        showModal={showModal}\r\n        setModalInfo={setModalInfo}\r\n      />\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\nconst objEqual = (a, b) => {\r\n  return (\r\n    Object.entries(a).sort().toString() === Object.entries(b).sort().toString()\r\n  );\r\n};\r\nconst areEqual = (prev, next) => {\r\n  return (\r\n    prev.lookBack === next.lookBack &&\r\n    objEqual(prev.rawData, next.rawData) &&\r\n    objEqual(prev.dateRange, next.dateRange) &&\r\n    objEqual(prev.totalSubmission, next.totalSubmission) &&\r\n    objEqual(prev.timeFrameBrush, next.timeFrameBrush) &&\r\n    objEqual(prev.miss, next.miss) &&\r\n    objEqual(prev.miss3, next.miss3) &&\r\n    objEqual(prev.match, next.match) &&\r\n    prev.useCum === next.useCum &&\r\n    prev.lookBack === next.lookBack &&\r\n    objEqual(prev.pType, next.pType) &&\r\n    objEqual(prev.countries, next.countries) &&\r\n    objEqual(prev.primers, next.primers)\r\n  );\r\n};\r\nexport default React.memo(InLineGraph, areEqual);\r\n","import React from \"react\";\r\nimport { scaleLinear } from \"d3-scale\";\r\nimport { extent } from \"d3-array\";\r\nimport {\r\n  ZoomableGroup,\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n} from \"react-simple-maps\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nconst geoUrl =\r\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\r\n\r\nconst colorScale = scaleLinear().domain([0, 1]).range([\"#ffedea\", \"#ff5233\"]);\r\n\r\nconst PrimerMap = ({\r\n  title,\r\n  setTooltipContent,\r\n  data,\r\n  lookBack,\r\n  db,\r\n  timeFrameBrush,\r\n  showModal,\r\n  setModalInfo,\r\n  subtitle = \"\",\r\n}) => {\r\n  const [downloadData, setDownloadData] = React.useState([]);\r\n  const headers = [\r\n    {\r\n      label: \"Country\",\r\n      key: \"country\",\r\n    },\r\n    {\r\n      label: \"ISO A3\",\r\n      key: \"ISO_A3\",\r\n    },\r\n    {\r\n      label: \"Missed %\",\r\n      key: \"missed_pct\",\r\n    },\r\n    {\r\n      label: \"Absolute Misses\",\r\n      key: \"abs_miss\",\r\n    },\r\n    {\r\n      label: \"Submitted Virus\",\r\n      key: \"country_total\",\r\n    },\r\n\r\n    {\r\n      label: \"Start Date\",\r\n      key: \"startDate\",\r\n    },\r\n    {\r\n      label: \"End Date\",\r\n      key: \"endDate\",\r\n    },\r\n  ];\r\n\r\n  function handleClick(countryISO3, endDate, lookBack) {\r\n    // const timeFrame = extent(\r\n    //   data.reduce((dates, data) => {\r\n    //     if (data.ISO_A3 === countryISO3) {\r\n    //       dates.push(new Date(data.date));\r\n    //       return dates;\r\n    //     } else {\r\n    //       return dates;\r\n    //     }\r\n    //   }, [])\r\n    // );\r\n    showModal();\r\n    setModalInfo((prev) => {\r\n      return {\r\n        ...prev,\r\n        primer: null,\r\n        country: countryISO3,\r\n        lookBack: lookBack,\r\n        date: endDate,\r\n      };\r\n    });\r\n  }\r\n\r\n  function downloadDataClick(\r\n    countryMisses,\r\n    countryMissesPct,\r\n    startDate,\r\n    endDate,\r\n    data\r\n  ) {\r\n    return () => {\r\n      const toDownload = [];\r\n      for (const [countryISO, absMiss] of countryMisses) {\r\n        toDownload.push({\r\n          country: data.find((element) => element.ISO_A3 === countryISO)\r\n            .country_name,\r\n          ISO_A3: countryISO,\r\n          country_total: absMiss / (countryMissesPct.get(countryISO) / 100),\r\n          missed_pct: countryMissesPct.get(countryISO),\r\n          abs_miss: absMiss,\r\n          startDate: startDate,\r\n          endDate: endDate,\r\n        });\r\n      }\r\n      console.log(\"fired\", toDownload);\r\n      setDownloadData(toDownload);\r\n    };\r\n  }\r\n\r\n  function getCountryMissCounts(data, lookBack, date) {\r\n    /**\r\n     * @param {Array} data: contains a list of missed virus Objects to be visualized on the map.\r\n     * @returns {Map} Containing the number of misses per country.\r\n     */\r\n    let currData = data;\r\n    if (lookBack >= 0) {\r\n      const endDate = new Date(date);\r\n      const startDate = new Date(date);\r\n      startDate.setDate(startDate.getDate() - lookBack);\r\n      currData = data.filter((val) => {\r\n        const currDate = new Date(val.date);\r\n        return (\r\n          currDate.getTime() <= endDate.getTime() &&\r\n          currDate.getTime() >= startDate.getTime()\r\n        );\r\n      });\r\n    }\r\n    return currData.reduce((count, currData) => {\r\n      count.has(currData.ISO_A3)\r\n        ? count.set(currData.ISO_A3, count.get(currData.ISO_A3) + 1)\r\n        : count.set(currData.ISO_A3, 1);\r\n      return count;\r\n    }, new Map());\r\n  }\r\n\r\n  function getDates(timeFrameBrush, db) {\r\n    if (timeFrameBrush.length === 0) {\r\n      return [Object.keys(db)[0], Object.keys(db)[Object.keys(db).length - 1]];\r\n    } else {\r\n      let startDate = getDateString(timeFrameBrush[0]);\r\n      let endDate = getDateString(timeFrameBrush[1]);\r\n      if (endDate > Object.keys(db)[Object.keys(db).length - 1]) {\r\n        endDate = Object.keys(db)[Object.keys(db).length - 1];\r\n      }\r\n      if (startDate < Object.keys(db)[0]) {\r\n        startDate = Object.keys(db)[0];\r\n      }\r\n      return [startDate, endDate];\r\n    }\r\n  }\r\n\r\n  function getDateString(time) {\r\n    var date = new Date(time);\r\n    return date.toISOString().slice(0, 10);\r\n  }\r\n  console.log(\"db :>> \", db);\r\n  const [startDate, endDate] = getDates(timeFrameBrush, db);\r\n  const countryMisses = getCountryMissCounts(data, -1, endDate);\r\n  const countryMissesPct = Array.from(countryMisses.keys()).reduce(\r\n    (accumulated, country) => {\r\n      accumulated.set(\r\n        country,\r\n        (\r\n          (countryMisses.get(country) / (db[endDate][country] || 100)) *\r\n          100\r\n        ).toFixed(2)\r\n      );\r\n      return accumulated;\r\n    },\r\n    new Map()\r\n  );\r\n\r\n  // console.log(\"countryMisses :>> \", countryMisses);\r\n  // console.log(\"startDate, endDate :>> \", startDate, endDate);\r\n  // console.log(\"countryMissesPct :>> \", countryMissesPct);\r\n  const maxPctMiss = Math.max(...Array.from(countryMissesPct.values()));\r\n  // console.log(\"maxPctMiss :>> \", maxPctMiss);\r\n  return (\r\n    <Container>\r\n      <h2 className=\"map-title\">{title}</h2>\r\n      <h3 className=\"map-title map-subtitle\">{subtitle}</h3>\r\n      <ComposableMap data-tip=\"\" projectionConfig={{ scale: 200 }}>\r\n        <ZoomableGroup>\r\n          <Geographies geography={geoUrl}>\r\n            {({ geographies }) =>\r\n              geographies.map((geo) => {\r\n                const missCount = countryMisses.get(geo.properties.ISO_A3) || 0;\r\n                const pctMiss =\r\n                  countryMissesPct.get(geo.properties.ISO_A3) || 0;\r\n                return (\r\n                  <Geography\r\n                    key={geo.rsmKey}\r\n                    geography={geo}\r\n                    onMouseEnter={() => {\r\n                      const { NAME } = geo.properties;\r\n                      setTooltipContent(\r\n                        `${NAME}: <br/> \r\n                          ${\r\n                            db[endDate][geo.properties.ISO_A3] || 0\r\n                          } submissions <br/>\r\n                          ${missCount} Absolute Misses.<br/> \r\n                          ${pctMiss}% Miss <br/>\r\n                          `\r\n                      );\r\n                    }}\r\n                    onMouseLeave={() => {\r\n                      setTooltipContent(\"\");\r\n                    }}\r\n                    onClick={() => {\r\n                      handleClick(geo.properties.ISO_A3, endDate, lookBack);\r\n                    }}\r\n                    style={{\r\n                      default: {\r\n                        fill:\r\n                          parseFloat(pctMiss) !== 0\r\n                            ? colorScale(pctMiss / maxPctMiss)\r\n                            : \"#949494\",\r\n                        outline: \"none\",\r\n                      },\r\n                      hover: {\r\n                        fill: \"#afca9d\",\r\n                        cursor: missCount ? \"pointer\" : \"auto\",\r\n                        outline: \"none\",\r\n                      },\r\n                    }}\r\n                  />\r\n                );\r\n              })\r\n            }\r\n          </Geographies>\r\n        </ZoomableGroup>\r\n      </ComposableMap>\r\n      <CSVLink\r\n        data={downloadData}\r\n        headers={headers}\r\n        filename={\"geo_misses.csv\"}\r\n        className=\"btn btn-dark\"\r\n        target=\"_blank\"\r\n        onClick={downloadDataClick(\r\n          countryMisses,\r\n          countryMissesPct,\r\n          startDate,\r\n          endDate,\r\n          data\r\n        )}\r\n      >\r\n        Download Map Data\r\n      </CSVLink>\r\n    </Container>\r\n  );\r\n};\r\nexport default React.memo(PrimerMap);\r\n","import React from \"react\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nimport PrimerMap from \"./primerMap\";\r\nimport \"./primerMap.css\";\r\n\r\nconst MapWithToolTip = ({\r\n  title,\r\n  data,\r\n  lookBack,\r\n  db,\r\n  timeFrameBrush,\r\n  setTimeFrameBrush,\r\n  showModal,\r\n  setModalInfo,\r\n  subtitle = \"\",\r\n}) => {\r\n  const [tooltipContent, setTooltipContent] = React.useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      <PrimerMap\r\n        title={title}\r\n        subtitle={subtitle}\r\n        setTooltipContent={setTooltipContent}\r\n        data={data}\r\n        lookBack={lookBack}\r\n        db={db}\r\n        timeFrameBrush={timeFrameBrush}\r\n        setTimeFrameBrush={setTimeFrameBrush}\r\n        showModal={showModal}\r\n        setModalInfo={setModalInfo}\r\n      />\r\n      <ReactTooltip html={true}>{tooltipContent}</ReactTooltip>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MapWithToolTip;\r\n","import React from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Collapse from \"react-bootstrap/Collapse\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./resultsPage.css\";\r\nimport ItemFilters from \"../../components/ItemFilter/itemFilters\";\r\nimport DataTable from \"../../components/tableDisplay/tableDisplay\";\r\nimport CombinedLineGraph from \"../../components/mutGraphs/combinedLineGraph\";\r\nimport BarGraphWrapper from \"../../components/mutGraphs/barGraphWrapper\";\r\nimport InLineGraph from \"../../components/mutGraphs/inLineGraph\";\r\nimport MapWithToolTip from \"../../components/primerMap/mapWithToolTip\";\r\n\r\nimport worker from \"workerize-loader!./dataFilter\"; // eslint-disable-line import/no-webpack-loader-syntax\r\n\r\nimport { debounce, addName, makeBaseGraphData } from \"../../components/util\";\r\n\r\nconst InputData = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <Container>\r\n      <p className=\"no-data\">\r\n        Please make sure that you've uploaded some data first!\r\n      </p>\r\n      <Button onClick={() => history.push(\"/\")}>Upload Data</Button>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst ResultPage = ({ results }) => {\r\n  // Base results from blast\r\n  const result = React.useRef(JSON.parse(results));\r\n  const baseData = React.useRef(result.current[0] || {});\r\n  const instance = React.useRef(worker());\r\n  const baseTableData = React.useRef(makeTableData(baseData.current));\r\n  const baseGraphData = React.useRef(makeBaseGraphData(baseData.current));\r\n\r\n  const dbCountDaily = React.useRef(parseDb(result.current, 1));\r\n  const dbCountCum = React.useRef(parseDb(result.current, 0));\r\n  const dateRange = React.useRef(Object.keys(dbCountCum.current) || []);\r\n\r\n  const { display } = useParams();\r\n  const toDisplay = display.split(\"&\");\r\n\r\n  // Data to display\r\n  const [dbActual, setDbActual] = React.useState([]);\r\n  const [mapDb, setMapDb] = React.useState([]);\r\n  const [tableDataset, setTableDataset] = React.useState([]);\r\n  const [combinedBase, setCombinedBase] = React.useState([]);\r\n  const [combinedName, setCombinedName] = React.useState([]);\r\n  const [tableCombined, setTableCombined] = React.useState([]);\r\n\r\n  // Filtering for table and graph data\r\n  const [miss, setMiss] = React.useState(React.useMemo(() => [], []));\r\n  const [miss3, setMiss3] = React.useState(React.useMemo(() => [], []));\r\n  const [match, setMatch] = React.useState(React.useMemo(() => [], []));\r\n  const [timeFrameBrush, setTimeFrameBrush] = React.useState(\r\n    React.useMemo(() => [], [])\r\n  );\r\n  const setTimeFrameCb = React.useCallback(setTimeFrameBrush, []);\r\n  const [countries, setCountries] = React.useState(React.useMemo(() => [], []));\r\n  const [primers, setPrimers] = React.useState(React.useMemo(() => [], []));\r\n  const [pType, setPType] = React.useState(React.useMemo(() => [], []));\r\n\r\n  // Filtering for graph data\r\n  const [useCum, setUseCum] = React.useState(false);\r\n  const [countryAsTotal, setCountryAsTotal] = React.useState(true);\r\n  const [lookBack, setLookBack] = React.useState(6);\r\n  const [isBar, setIsBar] = React.useState(true);\r\n  const [daysBetweenComparison, setDaysBetweenComparison] = React.useState(\r\n    lookBack\r\n  );\r\n  const [numberOfBars, setNumberOfBars] = React.useState(1);\r\n  const [showAbsDiff, setShowAbsDiff] = React.useState(true);\r\n\r\n  // Detail Modal\r\n  const [showModal, setShowModal] = React.useState(false);\r\n  const [modalInfo, setModalInfo] = React.useState({\r\n    date: null,\r\n    lookBack: null,\r\n    country: null,\r\n    primer: null,\r\n  });\r\n  const closeModalCb = () => setShowModal(false);\r\n  const showModalCb = React.useCallback(() => setShowModal(true), []);\r\n\r\n  // Misc items\r\n  const [isProcessing, setIsProcessing] = React.useState(false);\r\n  const [isProcessingGraphs, setIsProcessingGraphs] = React.useState(false);\r\n  const setIsProcessingGraphCb = React.useCallback(setIsProcessingGraphs, []);\r\n  const updateTableData = React.useCallback(\r\n    debounce(\r\n      (primers, pType, countries, miss, miss3, match, timeFrameBrush) => {\r\n        let start = performance.now();\r\n        instance.current\r\n          .filterTable({\r\n            baseTableData: baseTableData.current,\r\n            primers: primers,\r\n            pType: pType,\r\n            countries: countries,\r\n            miss: miss,\r\n            miss3: miss3,\r\n            match: match,\r\n            timeFrameBrush: timeFrameBrush,\r\n          })\r\n          .then((data) => {\r\n            setIsProcessing(false);\r\n            setTableDataset(data);\r\n            console.log(\r\n              `Time taken for filtering table data: ${(\r\n                performance.now() - start\r\n              ).toFixed(5)} milliseconds`\r\n            );\r\n          });\r\n      },\r\n      500\r\n    ),\r\n    []\r\n  );\r\n  const updateCombinedData = React.useCallback(\r\n    debounce(\r\n      (primers, pType, countries, miss, miss3, match, timeFrameBrush) => {\r\n        let start = performance.now();\r\n        instance.current\r\n          .filterTable({\r\n            baseTableData: baseTableData.current,\r\n            primers: primers,\r\n            pType: pType,\r\n            countries: countries,\r\n            miss: miss,\r\n            miss3: miss3,\r\n            match: match,\r\n            timeFrameBrush: timeFrameBrush,\r\n          })\r\n          .then((data) => {\r\n            const result = data.reduce((prevVal, currVal) => {\r\n              const temp = prevVal[currVal.primer] || [];\r\n              temp.push(currVal);\r\n              prevVal[currVal.primer] = temp;\r\n              return prevVal;\r\n            }, {});\r\n            instance.current\r\n              .makeIntersection(\r\n                JSON.parse(JSON.stringify(result)),\r\n                primers.length === 0 ? Object.keys(baseData.current) : primers\r\n              )\r\n              .then((result) => {\r\n                console.log(\r\n                  `Time taken for creating combined data: ${(\r\n                    performance.now() - start\r\n                  ).toFixed(5)} milliseconds`\r\n                );\r\n                setCombinedBase(result[0]);\r\n                setCombinedName(result[1]);\r\n              });\r\n          });\r\n      },\r\n      500\r\n    ),\r\n    []\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    if (Object.keys(dbCountCum.current).length !== 0)\r\n      instance.current\r\n        .getTotalSubmission({\r\n          dbCum: dbCountCum.current,\r\n          dbDaily: dbCountDaily.current,\r\n          dateRange: dateRange.current,\r\n          countries: countries,\r\n          countryAsTotal: countryAsTotal,\r\n          useCum: useCum,\r\n          lookBack: lookBack,\r\n        })\r\n        .then((totalSubmission) => {\r\n          setDbActual(totalSubmission);\r\n        });\r\n  }, [countries, countryAsTotal, lookBack, useCum]);\r\n  React.useEffect(() => {\r\n    if (Object.keys(dbCountCum.current).length !== 0) {\r\n      if (!useCum) {\r\n        let date1 = new Date(timeFrameBrush[0] || dateRange.current[0]);\r\n        let date2 = new Date(\r\n          timeFrameBrush[1] || dateRange.current[dateRange.current.length - 1]\r\n        );\r\n\r\n        // To calculate the time difference of two dates\r\n        let Difference_In_Time = date2.getTime() - date1.getTime();\r\n\r\n        // To calculate the no. of days between two dates\r\n        let Difference_In_Days = Difference_In_Time / (1000 * 3600 * 24);\r\n        instance.current\r\n          .getTotalSubmission({\r\n            dbCum: dbCountCum.current,\r\n            dbDaily: dbCountDaily.current,\r\n            dateRange: dateRange.current,\r\n            countries: countries,\r\n            countryAsTotal: countryAsTotal,\r\n            useCum: useCum,\r\n            lookBack: Difference_In_Days,\r\n            separate: true,\r\n          })\r\n          .then((totalSubmission) => {\r\n            setMapDb(totalSubmission);\r\n          });\r\n      }\r\n    }\r\n  }, [timeFrameBrush, countries, countryAsTotal, lookBack, useCum]);\r\n\r\n  React.useEffect(() => {\r\n    setDaysBetweenComparison(lookBack === 0 ? 1 : lookBack);\r\n  }, [lookBack]);\r\n\r\n  const overviewColumns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Primer\",\r\n        accessor: \"primer\",\r\n        disableFilters: true,\r\n      },\r\n      {\r\n        Header: \"Accession ID\",\r\n        accessor: \"accession_id\",\r\n        disableFilters: true,\r\n      },\r\n      {\r\n        Header: \"Virus Name\",\r\n        accessor: \"virus_name\",\r\n        disableFilters: true,\r\n        width: 200,\r\n      },\r\n      {\r\n        Header: \"Diagram\",\r\n        accessor: \"match_diag\",\r\n        disableFilters: true,\r\n        width: 450,\r\n      },\r\n      {\r\n        Header: \"Primer Type\",\r\n        accessor: \"type\",\r\n        disableFilters: true,\r\n        width: 120,\r\n      },\r\n      {\r\n        Header: \"Homology %\",\r\n        accessor: \"match_pct\",\r\n      },\r\n      {\r\n        Header: \"Total Mutation in Primer Region\",\r\n        accessor: \"misses\",\r\n      },\r\n      {\r\n        Header: \"Mutation in Primer Region's 3' End\",\r\n        accessor: \"misses3\",\r\n      },\r\n      {\r\n        Header: \"Date Collected\",\r\n        accessor: \"date\",\r\n        disableFilters: true,\r\n        width: 140,\r\n        show: false,\r\n      },\r\n      {\r\n        Header: \"Country\",\r\n        accessor: \"country_name\",\r\n        disableFilters: true,\r\n      },\r\n    ],\r\n    []\r\n  );\r\n  const combinedCols = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Primer\",\r\n        accessor: \"primer\",\r\n        disableFilters: true,\r\n      },\r\n      {\r\n        Header: \"Accession ID\",\r\n        accessor: \"accession_id\",\r\n        disableFilters: true,\r\n      },\r\n      {\r\n        Header: \"Virus Name\",\r\n        accessor: \"virus_name\",\r\n        disableFilters: true,\r\n        width: 200,\r\n      },\r\n      {\r\n        Header: \"Date Collected\",\r\n        accessor: \"date\",\r\n        disableFilters: true,\r\n        width: 140,\r\n        show: false,\r\n      },\r\n      {\r\n        Header: \"Country\",\r\n        accessor: \"country_name\",\r\n        disableFilters: true,\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    setIsProcessing(true);\r\n    updateTableData(\r\n      primers,\r\n      pType,\r\n      countries,\r\n      miss,\r\n      miss3,\r\n      match,\r\n      timeFrameBrush\r\n    );\r\n  }, [\r\n    updateTableData,\r\n    primers,\r\n    pType,\r\n    countries,\r\n    miss,\r\n    miss3,\r\n    match,\r\n    timeFrameBrush,\r\n  ]);\r\n\r\n  const modalData = React.useMemo(() => {\r\n    if (showModal) {\r\n      console.log(\"modalInfo :>> \", modalInfo);\r\n      return combinedBase.length === 0\r\n        ? tableDataset.filter((value) => {\r\n            let isSameDate = true;\r\n            let isWithinFrame = true;\r\n            let isPrimer = true;\r\n            let isCountry = true;\r\n            if (modalInfo[\"date\"] !== null) {\r\n              isSameDate = value.date === modalInfo[\"date\"];\r\n            }\r\n            if (\r\n              modalInfo[\"lookBack\"] !== null ||\r\n              modalInfo[\"lookBack\"] !== -1\r\n            ) {\r\n              const selectedDate = new Date(modalInfo[\"date\"]);\r\n              const startDate = new Date(selectedDate);\r\n              startDate.setDate(startDate.getDate() - modalInfo[\"lookBack\"]);\r\n              isWithinFrame =\r\n                value.date >= startDate.toISOString().slice(0, 10) &&\r\n                value.date <= modalInfo[\"date\"];\r\n            }\r\n            if (modalInfo[\"primer\"] !== null) {\r\n              isPrimer = value.primer === modalInfo[\"primer\"];\r\n            }\r\n            if (modalInfo[\"country\"] !== null) {\r\n              isCountry = value.ISO_A3 === modalInfo[\"country\"];\r\n            }\r\n            return (isSameDate || isWithinFrame) && isPrimer && isCountry;\r\n          })\r\n        : combinedBase.filter((value) => {\r\n            let isSameDate = true;\r\n            let isWithinFrame = true;\r\n            let isPrimer = true;\r\n            let isCountry = true;\r\n            if (modalInfo[\"date\"] !== null) {\r\n              isSameDate = value.date === modalInfo[\"date\"];\r\n            }\r\n            if (\r\n              modalInfo[\"lookBack\"] !== null ||\r\n              modalInfo[\"lookBack\"] !== -1\r\n            ) {\r\n              const selectedDate = new Date(modalInfo[\"date\"]);\r\n              const startDate = new Date(selectedDate);\r\n              startDate.setDate(startDate.getDate() - modalInfo[\"lookBack\"]);\r\n              isWithinFrame =\r\n                value.date >= startDate.toISOString().slice(0, 10) &&\r\n                value.date <= modalInfo[\"date\"];\r\n            }\r\n            if (modalInfo[\"primer\"] !== null) {\r\n              isPrimer = value.primer === modalInfo[\"primer\"][0];\r\n            }\r\n            if (modalInfo[\"country\"] !== null) {\r\n              isCountry = value.ISO_A3 === modalInfo[\"country\"];\r\n            }\r\n            return (isSameDate || isWithinFrame) && isPrimer && isCountry;\r\n          });\r\n    } else {\r\n      return [];\r\n    }\r\n  }, [showModal, combinedBase, tableDataset, modalInfo]);\r\n\r\n  React.useEffect(() => {\r\n    if (baseTableData.current.length !== 0) {\r\n      updateCombinedData(primers, pType, countries, miss, miss3, match, []);\r\n    }\r\n  }, [updateCombinedData, primers, pType, countries, miss, miss3, match]);\r\n\r\n  React.useEffect(() => {\r\n    if (combinedBase.length !== 0) {\r\n      instance.current\r\n        .filterTable({\r\n          baseTableData: combinedBase,\r\n          timeFrameBrush: timeFrameBrush,\r\n        })\r\n        .then((result) => {\r\n          setTableCombined(result);\r\n        });\r\n    }\r\n  }, [combinedBase, timeFrameBrush]);\r\n\r\n  if (result.current.length !== 0) {\r\n    const endDate = new Date(\r\n      timeFrameBrush[1] || dateRange.current[dateRange.current.length - 1]\r\n    );\r\n    const startDate = new Date(timeFrameBrush[0] || dateRange.current[0]);\r\n    // To calculate the time difference of two dates\r\n    let Difference_In_Time = endDate.getTime() - startDate.getTime();\r\n\r\n    // To calculate the no. of days between two dates\r\n    let Difference_In_Days = Difference_In_Time / (1000 * 3600 * 24);\r\n    return (\r\n      <div className=\"display-page\">\r\n        <Container>\r\n          <ItemFilters\r\n            baseData={baseData.current}\r\n            dateRange={dateRange.current}\r\n            timeFrameBrush={timeFrameBrush}\r\n            setTimeFrameBrush={setTimeFrameBrush}\r\n            lookBack={lookBack}\r\n            setLookBack={setLookBack}\r\n            useCum={useCum}\r\n            setUseCum={setUseCum}\r\n            miss={miss}\r\n            setMiss={setMiss}\r\n            miss3={miss3}\r\n            setMiss3={setMiss3}\r\n            match={match}\r\n            setMatch={setMatch}\r\n            countryAsTotal={countryAsTotal}\r\n            setCountryAsTotal={setCountryAsTotal}\r\n            setCountries={setCountries}\r\n            setPrimers={setPrimers}\r\n            setPType={setPType}\r\n            isProcessing={isProcessing || isProcessingGraphs}\r\n            setIsProcessing={setIsProcessing}\r\n            isBar={isBar}\r\n            setIsBar={setIsBar}\r\n            daysBetweenComparison={daysBetweenComparison}\r\n            setDaysBetweenComparison={setDaysBetweenComparison}\r\n            numberOfBars={numberOfBars}\r\n            setNumberOfBars={setNumberOfBars}\r\n            showAbsDiff={showAbsDiff}\r\n            setShowAbsDiff={setShowAbsDiff}\r\n          />\r\n\r\n          <Row className=\"mb-5\">\r\n            <Col\r\n              xs={12}\r\n              lg={\r\n                primers.length === 1 ||\r\n                Object.keys(baseData.current).length === 1\r\n                  ? 6\r\n                  : 12\r\n              }\r\n            >\r\n              <InLineGraph\r\n                rawData={baseGraphData.current}\r\n                dateRange={dateRange.current}\r\n                totalSubmission={dbActual}\r\n                setIsProcessingGraphs={setIsProcessingGraphCb}\r\n                primers={\r\n                  primers.length === 0 ? Object.keys(baseData.current) : primers\r\n                }\r\n                pType={pType}\r\n                countries={countries}\r\n                miss={miss}\r\n                miss3={miss3}\r\n                match={match}\r\n                useCum={useCum}\r\n                lookBack={lookBack}\r\n                timeFrameBrush={timeFrameBrush}\r\n                setTimeFrameBrush={setTimeFrameCb}\r\n                showModal={showModalCb}\r\n                setModalInfo={setModalInfo}\r\n                title={\"Genomes with mutation\"}\r\n                title2={\"Genomes with mutation in 3' end\"}\r\n              />\r\n            </Col>\r\n            {primers.length === 1 ||\r\n            Object.keys(baseData.current).length === 1 ? (\r\n              <Col xs={12} lg={6}>\r\n                <MapWithToolTip\r\n                  title={\"Map of Virus with Mutation in Primer Region\"}\r\n                  subtitle={\r\n                    !useCum\r\n                      ? `From ${startDate\r\n                          .toISOString()\r\n                          .slice(0, 10)} to ${endDate\r\n                          .toISOString()\r\n                          .slice(0, 10)}`\r\n                      : \"Cumulative\"\r\n                  }\r\n                  data={tableDataset}\r\n                  lookBack={!useCum ? Difference_In_Days : -1}\r\n                  db={useCum ? dbCountCum.current : mapDb}\r\n                  timeFrameBrush={timeFrameBrush}\r\n                  setTimeFrameBrush={setTimeFrameBrush}\r\n                  showModal={showModalCb}\r\n                  setModalInfo={setModalInfo}\r\n                />\r\n              </Col>\r\n            ) : null}\r\n          </Row>\r\n          {isBar ? (\r\n            <BarGraphWrapper\r\n              rawData={baseGraphData.current}\r\n              dateRange={dateRange.current}\r\n              totalSubmission={dbActual}\r\n              setIsProcessingGraphs={setIsProcessingGraphCb}\r\n              primers={\r\n                primers.length === 0 ? Object.keys(baseData.current) : primers\r\n              }\r\n              pType={pType}\r\n              countries={countries}\r\n              miss={miss}\r\n              miss3={miss3}\r\n              match={match}\r\n              useCum={useCum}\r\n              lookBack={lookBack}\r\n              timeFrameBrush={timeFrameBrush}\r\n              daysBetweenComparison={daysBetweenComparison}\r\n              numberOfBars={numberOfBars}\r\n              showAbsDiff={showAbsDiff}\r\n              showModal={showModalCb}\r\n              setModalInfo={setModalInfo}\r\n              title={\"Genomes with mutation\"}\r\n              title2={\"Percent of genomes with mutation in 3' end\"}\r\n              className=\"mb-5\"\r\n            />\r\n          ) : null}\r\n          <DataTable\r\n            className=\"mb-5\"\r\n            id=\"collapse-table\"\r\n            title={\"Overview of Viruses with Mutation in Primer Region\"}\r\n            data={tableDataset}\r\n            columns={overviewColumns}\r\n            isCombined={false}\r\n            isCollapsable={true}\r\n          />\r\n          <Collapse in={combinedBase.length !== 0}>\r\n            <div>\r\n              <Row className=\"mb-5\">\r\n                <Col xs={12} lg={6}>\r\n                  <CombinedLineGraph\r\n                    combinedBase={combinedBase}\r\n                    combinedName={combinedName}\r\n                    dateRange={dateRange.current}\r\n                    totalSubmission={dbActual}\r\n                    setIsProcessingGraphs={setIsProcessingGraphCb}\r\n                    pType={pType}\r\n                    countries={countries}\r\n                    miss={miss}\r\n                    miss3={miss3}\r\n                    match={match}\r\n                    useCum={useCum}\r\n                    lookBack={lookBack}\r\n                    title={\"Genomes with mutation (Combined)\"}\r\n                    title2={\"Genomes with mutation in 3' end (Combined)\"}\r\n                    timeFrameBrush={timeFrameBrush}\r\n                    setTimeFrameBrush={setTimeFrameCb}\r\n                    showModal={showModalCb}\r\n                    setModalInfo={setModalInfo}\r\n                  />\r\n                </Col>\r\n                <Col xs={12} lg={6}>\r\n                  <MapWithToolTip\r\n                    title={\r\n                      \"Map of Virus with Mutation in Primer Region (Combined)\"\r\n                    }\r\n                    subtitle={\r\n                      !useCum\r\n                        ? `From ${startDate\r\n                            .toISOString()\r\n                            .slice(0, 10)} to ${endDate\r\n                            .toISOString()\r\n                            .slice(0, 10)}`\r\n                        : \"Cumulative\"\r\n                    }\r\n                    data={tableCombined}\r\n                    lookBack={!useCum ? Difference_In_Days : -1}\r\n                    db={useCum ? dbCountCum.current : mapDb}\r\n                    timeFrameBrush={timeFrameBrush}\r\n                    setTimeFrameBrush={setTimeFrameBrush}\r\n                    showModal={showModalCb}\r\n                    setModalInfo={setModalInfo}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <DataTable\r\n                title={\"Viruses with Mutation in Primer Region (Combined)\"}\r\n                data={tableCombined}\r\n                columns={combinedCols}\r\n                isCombined={true}\r\n                isCollapsable={true}\r\n                className=\"mb-5\"\r\n              />\r\n            </div>\r\n          </Collapse>\r\n        </Container>\r\n        <Modal\r\n          show={showModal}\r\n          onHide={closeModalCb}\r\n          dialogClassName=\"modal-90w\"\r\n          aria-labelledby=\"missed-details-modal\"\r\n        >\r\n          <Modal.Header closeButton id=\"missed-details-modal\">\r\n            <Modal.Title>Viruses with Mutation in Primer Region</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <DataTable\r\n              id=\"detail-table\"\r\n              title={\"\"}\r\n              data={modalData}\r\n              columns={\r\n                combinedBase.length === 0 ? overviewColumns : combinedCols\r\n              }\r\n              downloadFileName={\"selected_details.csv\"}\r\n              isCollapsable={false}\r\n              className=\"mb-5\"\r\n            />\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={closeModalCb}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <InputData />;\r\n};\r\n\r\nexport default ResultPage;\r\n\r\nfunction parseDb(rawData, database) {\r\n  /**\r\n   * Retrieves that database count from [rawData]\r\n   * @param {Array} rawData: contains the primerDetails, databaseCounts (daily and cumulative), as well as primer filenames on server.\r\n   * @param {Number} database: 0 for cumulative, 1 for daily\r\n   * @returns {Object} The object mapping date -> countries -> submission count\r\n   */\r\n  if (rawData.length !== 0) {\r\n    return JSON.parse(JSON.stringify(rawData[1][database]));\r\n  }\r\n  return {};\r\n}\r\n\r\nfunction makeTableData(primerDetails) {\r\n  /**\r\n   * Converts all the incoming data into a table format for subsequent data structure to be built off\r\n   * @param {Object} primerDetails: contains the primerDetails\r\n   * @returns {Array} Each item in the array corresponds to a single entry that has been missed.\r\n   **/\r\n  let tableData = [];\r\n  if (Object.keys(primerDetails).length !== 0) {\r\n    const primerNames = Object.keys(primerDetails);\r\n    for (const primerName of primerNames) {\r\n      tableData.push(...primerDetails[primerName].map(addName(primerName)));\r\n    }\r\n  }\r\n  return tableData;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport ManualPage from \"./pages/manual/manualPage\";\r\nimport UploadPage from \"./pages/upload/uploadPage\";\r\nimport ResultPage from \"./pages/results/resultsPage\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [results, setResults] = useState(\"[]\");\r\n  const [error, setError] = useState(\"[]\");\r\n  return (\r\n    <Router basename=\"/METHODS/corona/gamma/primer/build\">\r\n      <Link to=\"/\" style={{ textDecoration: \"none\" }}>\r\n        <h1 className=\"title\">Primer Checker</h1>\r\n      </Link>\r\n\r\n      <Switch>\r\n        <Route exact={true} path=\"/\">\r\n          <UploadPage setResults={setResults} setError={setError} />\r\n        </Route>\r\n        <Route exact={true} path=\"/manualUpload\">\r\n          <ManualPage setResults={setResults} />\r\n        </Route>\r\n        <Route exact={true} path=\"/results/:display\">\r\n          <ResultPage results={results} />\r\n        </Route>\r\n        <Route path=\"/results\">\r\n          <ResultPage results={results} />\r\n        </Route>\r\n        <Route path=\"/error\" exact={true}>\r\n          <div>{error}</div>\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <div>404: Page not found</div>\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","\n\t\t\t\tvar addMethods = require(\"../../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = [\"filterTable\",\"getTotalSubmission\",\"getLineGraphData\",\"getCombinedLineData\",\"makeBarData\",\"makeIntersection\"]\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"208cac40d130319b568c.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t"],"sourceRoot":""}