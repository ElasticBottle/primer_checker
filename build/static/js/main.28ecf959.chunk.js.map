{"version":3,"sources":["pages/results/dataFilter.js","components/dropzone/dropzoneResults.js","pages/manual/manualPage.js","components/util.js","components/dropzone/dropzone.js","components/textArea/textArea.js","components/previewPane/previewPane.js","components/fileDisplay/fileDisplay.js","services/primerCheck.js","pages/upload/uploadPage.js","components/selectDropdown/selectDropdown.js","components/ItemFilter/minMaxFilter.js","components/ItemFilter/filterGroup.js","components/ItemFilter/itemFilters.js","components/tableDisplay/filter.js","components/tableDisplay/tableDisplay.js","components/mutGraphs/lineGraph.js","components/mutGraphs/barGraph.js","components/primerMap/primerMap.js","components/primerMap/mapWithToolTip.js","pages/results/resultsPage.js","App.js","serviceWorker.js","index.js"],"names":["addMethods","methods","module","exports","w","Worker","name","DropZoneResults","setResults","history","useHistory","filesSelected","e","a","loadFiles","target","files","fr","FileReader","onload","result","JSON","parse","formatted","stringify","push","readAsText","item","Form","Group","controlId","htmlFor","id","Container","className","onDragOver","preventDefault","onDragEnter","onDragLeave","onDrop","dataTransfer","type","onChange","multiple","ManualPage","validateFormat","content","exec","debounce","func","wait","immediate","timeout","context","this","args","arguments","later","apply","callNow","clearTimeout","setTimeout","addName","primer","value","DropZone","selectedFiles","setSelectedFiles","setErrorMessage","checkFiles","to_store","file","handleFile","concat","readFile","to_return","console","warn","message","reader","log","Promise","resolve","reject","event","onerror","abort","DOMException","TextArea","setTextFieldFasta","useState","errorMessage","textAreaValue","setTextAreaValue","inputSample","useEffect","Row","Col","Label","Button","variant","size","onClick","Control","as","placeholder","aria-describedby","Text","muted","split","map","i","key","Feedback","PreviewPane","show","handleClose","Modal","onHide","Header","closeButton","Title","Body","newline_matches","matchAll","length","slice","index","formatContent","Footer","FileDisplay","preview","setPreview","previewOpen","setPreviewOpen","removeFile","fileName","prevFiles","filter","fileType","substring","lastIndexOf","lg","md","invalid","openPreview","Math","floor","parseFloat","pow","toFixed","fileSize","baseURL","to_send","data","axios","post","UploadPage","setError","showSubmit","setShowSubmit","displayedFiles","setDisplayedFiles","validFiles","setValidFiles","textFieldFasta","fileErrorMessage","setFileErrorMessage","open","setOpen","isLoading","setIsLoading","openId","filteredFiles","reduce","current","find","Collapse","in","noValidate","Fade","aria-controls","aria-expanded","primerCheckService","then","response","catch","disabled","Spinner","animation","role","aria-hidden","animatedComponents","makeAnimated","SelectDropdown","options","defaultValue","closeMenuOnSelect","components","isMulti","isSearchable","isClearable","NumberRangeFilter","minVal","maxVal","step","setFilter","React","useMemo","combinedList","Object","values","combined","currVal","min","max","forEach","row","debounceFilter","val","isMin","old","sm","isInteger","parseInt","FilterGroup","title","groupId","buttonText","component","isOpen","setShow","help","Switch","checked","ariaControls","ariaExpanded","MissDefinition","baseData","miss","setMiss","miss3","setMiss3","match","setMatch","xs","InputGroup","Prepend","data-tip","BarGraphSettings","isBar","setIsBar","daysBetweenComparison","setDaysBetweenComparison","numberOfBars","setNumberOfBars","showAbsDiff","setShowAbsDiff","toString","LineGraphSettings","countryAsTotal","setCountryAsTotal","GraphMapSetting","setTimeFrameBrush","timeFrameBrush","dateRange","lookBack","setLookBack","useCum","setUseCum","maxDate","Date","minDate","calendarIcon","AdvanceFilters","BasicFilters","setSelectedPrimers","setIsProcessing","isProcessing","setCountries","primers","setPrimers","setPType","selectionChange","setSelection","selection","toFilter","label","join","keys","unique","Set","countries","virus","has","country_name","add","ISO_A3","ItemFilters","html","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","isHelpOn","count","setValue","useAsyncDebounce","undefined","column","TableDisplay","columns","isCombined","csv_headers","header","accessor","filterTypes","text","rows","filterValue","rowValue","String","toLowerCase","startsWith","defaultColumn","minWidth","width","maxWidth","useTable","initialState","pageIndex","useGlobalFilter","useSortBy","usePagination","useFlexLayout","useResizeColumns","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageSize","responsive","striped","bordered","hover","headerGroup","getHeaderGroupProps","headers","getHeaderProps","render","getSortByToggleProps","isSorted","isSortedDesc","canResize","getResizerProps","isResizing","getRowProps","cells","cell","display_str","getCellProps","idx","char","Number","aria-label","filename","DataTable","isCollapsable","showTable","setShowTable","LineGraph","title2","dates","showModal","setModalInfo","subtitle","subtitle2","getMutationPlot","dataPlot","xIndex","yIndex","plots","hoverAnimation","xAxisIndex","yAxisIndex","encode","x","y","datasetIndex","getDateIndex","date","findIndex","toISOString","startIndex","endIndex","mutationPlot","mutation3Plot","option","subtext","left","top","tooltip","trigger","axisPointer","backgroundColor","formatter","params","baseDetails","startDate","initDate","setDate","getDate","getStartDate","submissionCount","submission_count","countries_considered","mutation_abs","mutation3_abs","mutation_pct","mutation3_pct","position","pos","el","elRect","obj","viewSize","legend","orient","right","link","dataZoom","realtime","start","end","grid","bottom","xAxis","nameLocation","nameTextStyle","align","verticalAlign","padding","gridIndex","yAxis","nameGap","dataset","datasets","dimensions","source","buildDataSet","series","onEvents","click","prev","country","legendselectchanged","selected","batch","startStringDate","endStringDate","endDate","style","height","notMerge","BarGraph","getBarLabel","toPlot","distance","rotate","difference","fontSize","textBorderColor","rich","p","color","n","zero","buildBarPlot","barMaxWidth","buildDataset","mutation","mutation3","axisLabel","margin","colorScale","scaleLinear","domain","range","memo","setTooltipContent","db","downloadData","setDownloadData","getDateString","time","getDates","countryMisses","currData","currDate","getTime","set","get","Map","getCountryMissCounts","countryMissesPct","Array","from","accumulated","maxPctMiss","projectionConfig","scale","geography","geographies","geo","missCount","properties","pctMiss","rsmKey","onMouseEnter","NAME","onMouseLeave","countryISO3","extent","handleClick","default","fill","outline","cursor","toDownload","countryISO","absMiss","element","country_total","missed_pct","abs_miss","downloadDataClick","MapWithToolTip","tooltipContent","InputData","ResultPage","results","useRef","instance","worker","baseTableData","primerDetails","tableData","primerNames","primerName","makeTableData","baseGraphData","makeBaseGraphData","dbCountDaily","parseDb","dbCountCum","useParams","display","dbActual","setDbActual","tableDataset","setTableDataset","lineData","setLineData","barData","setBarData","combinedBase","setCombinedBase","combinedName","setCombinedName","lineCombinedData","setLineCombinedData","tableCombined","setTableCombined","pType","setShowModal","modalInfo","closeModalCb","showModalCb","useCallback","isProcessingGraphs","setIsProcessingGraphs","updateLineData","performance","now","getTotalSubmission","dbCum","dbDaily","totalSubmission","getLineGraphData","updateBarData","makeBarData","graphOverview","updateTableData","filterTable","updateCombinedData","prevVal","temp","makeIntersection","updateCombinedLine","getCombinedLineData","overviewColumns","disableFilters","combinedCols","modalData","isSameDate","isWithinFrame","isPrimer","isCountry","selectedDate","dialogClassName","aria-labelledby","rawData","database","toReturn","details","toAdd","App","error","basename","to","textDecoration","exact","path","ReactHtmlParser","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.28ecf959.chunk.js","sourcesContent":["\n\t\t\t\tvar addMethods = require(\"../../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = [\"filterTable\",\"getTotalSubmission\",\"getLineGraphData\",\"getCombinedLineData\",\"makeBarData\",\"makeIntersection\"]\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"5997616f0bb2b4346dd6.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","import React from \"react\";\r\nimport \"./dropzone.css\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst DropZoneResults = ({ setResults }) => {\r\n  const history = useHistory();\r\n\r\n  const dragOver = (e) => {\r\n    e.preventDefault();\r\n  };\r\n  const dragEnter = (e) => {\r\n    e.preventDefault();\r\n  };\r\n  const dragLeave = (e) => {\r\n    e.preventDefault();\r\n  };\r\n  const fileDrop = (e) => {\r\n    e.preventDefault();\r\n    const data = e.dataTransfer;\r\n    const files = data.files;\r\n    loadFiles(files);\r\n  };\r\n\r\n  const filesSelected = async (e) => {\r\n    const files = e.target.files;\r\n    loadFiles(files);\r\n  };\r\n\r\n  function loadFiles(files) {\r\n    let fr = new FileReader();\r\n\r\n    fr.onload = function (e) {\r\n      const result = JSON.parse(e.target.result);\r\n      const formatted = JSON.stringify(result);\r\n      setResults(formatted);\r\n      history.push(\"/results/Overview\");\r\n    };\r\n\r\n    fr.readAsText(files.item(0));\r\n  }\r\n\r\n  return (\r\n    <Form.Group controlId=\"fasta-sequence\">\r\n      <label htmlFor=\"fasta-input\" id=\"fasta-input-label\">\r\n        <Container\r\n          className=\"drop-container\"\r\n          onDragOver={dragOver}\r\n          onDragEnter={dragEnter}\r\n          onDragLeave={dragLeave}\r\n          onDrop={fileDrop}\r\n        >\r\n          <div className=\"drop-message\">\r\n            <div className=\"upload-icon\"></div>\r\n            Drag & Drop files here or click to upload\r\n          </div>\r\n          <input\r\n            className=\"file-input\"\r\n            id=\"fasta-input\"\r\n            type=\"file\"\r\n            onChange={filesSelected}\r\n            multiple\r\n          />\r\n        </Container>\r\n      </label>\r\n    </Form.Group>\r\n  );\r\n};\r\n\r\nexport default DropZoneResults;\r\n","import React from \"react\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nimport DropZoneResults from \"../../components/dropzone/dropzoneResults\";\r\n\r\nconst ManualPage = ({ setResults }) => {\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <DropZoneResults setResults={setResults} />\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManualPage;\r\n","export const validateFormat = (content) => {\r\n  let format = /^>fwd[\\s\\S]{2}[ACGTacgt]+[\\s\\S]{1,2}>rev[\\s\\S]{1,2}[ACGTacgt]+[\\s\\S]{1,2}>prb[\\s\\S]{1,2}[ACGTacgt]+[\\s\\S]{1,2}$/;\r\n  let correct_format = format.exec(content);\r\n  return correct_format !== null;\r\n};\r\n\r\nexport const getRandomInt = (min, max) => {\r\n  const lower_r = Math.floor(min);\r\n  const upper_r = Math.floor(max);\r\n  return Math.floor(lower_r + Math.random() * (upper_r - lower_r));\r\n};\r\n\r\n// credit: https://davidwalsh.name/function-debounce\r\n// Returns a function, that, as long as it continues to be invoked, will not\r\n// be triggered. The function will be called after it stops being called for\r\n// N milliseconds. If `immediate` is passed, trigger the function on the\r\n// leading edge, instead of the trailing.\r\nexport function debounce(func, wait, immediate) {\r\n  let timeout;\r\n  return function () {\r\n    let context = this,\r\n      args = arguments;\r\n    let later = function () {\r\n      timeout = null;\r\n      if (!immediate) func.apply(context, args);\r\n    };\r\n    let callNow = immediate && !timeout;\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(later, wait);\r\n    if (callNow) func.apply(context, args);\r\n  };\r\n}\r\n\r\nexport function addName(primer) {\r\n  /**\r\n   * An annealing function that takes an object and adds [primer] to it with key under \"primer\"\r\n   * @param {string} primer: value to be added\r\n   * @returns {function} a function that takes in [value] and returns it after adding [primer] to it.\r\n   */\r\n  return (value) => {\r\n    value.primer = primer;\r\n    return value;\r\n  };\r\n}\r\n","import React from 'react';\r\nimport './dropzone.css';\r\nimport { validateFormat } from '../util';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\n\r\nconst DropZone = ({ selectedFiles, setSelectedFiles, setErrorMessage }) => {\r\n\r\n    const dragOver = (e) => {\r\n        e.preventDefault();\r\n    }\r\n    const dragEnter = (e) => {\r\n        e.preventDefault();\r\n    }\r\n    const dragLeave = (e) => {\r\n        e.preventDefault();\r\n    }\r\n    const fileDrop = (e) => {\r\n        e.preventDefault();\r\n        const data = e.dataTransfer\r\n        const files = data.files;\r\n        checkFiles(files)\r\n    }\r\n\r\n    const filesSelected = async (e) => {\r\n        const files = e.target.files;\r\n        await checkFiles(files)\r\n    }\r\n    const checkFiles = async (files) => {\r\n        let to_store = []\r\n        for (let file of files) {\r\n            to_store = to_store.concat(await handleFile(file))\r\n        }\r\n        setSelectedFiles(selectedFiles.concat(...to_store))\r\n    }\r\n    const handleFile = async (file) => {\r\n        try {\r\n            const to_return = await readFile(file)\r\n            return to_return\r\n        } catch (e) {\r\n            console.warn(e.message)\r\n        }\r\n    }\r\n\r\n    const readFile = (file) => {\r\n        const reader = new FileReader();\r\n        console.log(file)\r\n        return new Promise((resolve, reject) => {\r\n            reader.onload = function (event) {\r\n                if (validateFormat(event.target.result)) {\r\n                    file['invalid'] = false\r\n                    file['content'] = event.target.result\r\n                    file['id'] = file.name\r\n                } else {\r\n                    console.log('file loaded but invalid format');\r\n                    setErrorMessage('File not a recognized format. Please check')\r\n                    file['invalid'] = true\r\n                }\r\n                resolve(file);\r\n            }\r\n            reader.onerror = function () {\r\n                reader.abort()\r\n                reject(new DOMException(\"Problem parsing input file.\"));\r\n            }\r\n\r\n            reader.readAsText(file, \"UTF-8\");\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Form.Group controlId='fasta-sequence'>\r\n            <label htmlFor='fasta-input' id='fasta-input-label'>\r\n                <Container className='drop-container' onDragOver={dragOver}\r\n                    onDragEnter={dragEnter}\r\n                    onDragLeave={dragLeave}\r\n                    onDrop={fileDrop}>\r\n                    <div className=\"drop-message\">\r\n                        <div className=\"upload-icon\"></div>\r\n                        Drag & Drop files here or click to upload\r\n                    </div>\r\n                    <input\r\n                        className=\"file-input\"\r\n                        id=\"fasta-input\"\r\n                        type=\"file\"\r\n                        onChange={filesSelected}\r\n                        multiple\r\n                    />\r\n                </Container>\r\n            </label>\r\n        </Form.Group>\r\n    );\r\n}\r\n\r\nexport default DropZone;","\r\nimport React, { useState, useEffect } from 'react'\r\nimport './textArea.css'\r\nimport Form from 'react-bootstrap/Form'\r\nimport { validateFormat } from '../util'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nconst TextArea = ({ setTextFieldFasta }) => {\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n    const [textAreaValue, setTextAreaValue] = useState('')\r\n    // const [fileAttached, setFileAttached] = useState(false)\r\n    const inputSample = `>fwd\\nGTGAAATGGTCATGTGTGGCGG\\n>rev\\nTATGCTAATAGTGTTTTTAACATTTG\\n>prb\\nCAGGTGGAACCTCATCAGGAGATGC`\r\n\r\n    useEffect(() => {\r\n        if (validateFormat(textAreaValue)) {\r\n            console.log('sequence oKAY!', textAreaValue);\r\n            // const lastMod = Date.now()\r\n            // const tempDate = new Date(lastMod)\r\n            // const file = {\r\n            //     \"content\": textAreaValue,\r\n            //     \"invalid\": false,\r\n            //     \"lastModified\": lastMod,\r\n            //     \"lastModifiedDate\": tempDate,\r\n            //     \"name\": `fasta${lastMod}`,\r\n            //     'size': getRandomInt(80, 90)\r\n            // }\r\n            setTextFieldFasta([{\r\n                \"invalid\": false,\r\n                \"content\": textAreaValue,\r\n                \"id\": \"text_input_fasta\",\r\n            }])\r\n        } else {\r\n            console.log('Nope');\r\n            setTextFieldFasta([])\r\n            setErrorMessage('Sequence not recognized! Please check.')\r\n        }\r\n    }, [textAreaValue, setTextFieldFasta])\r\n\r\n    const handleChange = (e) => {\r\n        const content = e.target.value\r\n        setTextAreaValue(content)\r\n    }\r\n    const enterSample = () => {\r\n        setTextAreaValue(inputSample)\r\n    }\r\n    return (\r\n        <Form.Group controlId='fasta-sequence'>\r\n            <Row className='fasta-input-header'>\r\n                <Col>\r\n                    <Form.Label className='fasta-input-title'>\r\n                        Fasta Sequence\r\n                    </Form.Label>\r\n                </Col>\r\n                <Col className=\"sample-fasta\">\r\n                    <Button variant='secondary' size='sm' onClick={enterSample}>Sample Input</Button>\r\n                </Col>\r\n            </Row>\r\n            <Form.Control\r\n                as='textarea'\r\n                placeholder=\"Input Fasta Seq here.\"\r\n                onChange={handleChange}\r\n                type=\"text\"\r\n                value={textAreaValue}\r\n                className='mx-sm-lg-auto'\r\n                aria-describedby=\"fastaSequenceHelpBlock\"\r\n            />\r\n            <Form.Text id=\"fastaSequenceHelpBlock\" muted>\r\n                Format for the primer sequence should be as follows:{<br />}\r\n                <strong>\r\n                    {inputSample\r\n                        .split('\\n')\r\n                        .map((value, i) => <p key={i}>{value}</p>)}\r\n                </strong>\r\n            </Form.Text>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n                {errorMessage}\r\n            </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n    )\r\n}\r\n\r\nexport default TextArea","import './previewPane.css'\r\nimport React from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\nconst PreviewPane = ({ show, handleClose, content }) => {\r\n    const formatContent = (content) => {\r\n        const regex = /\\s+/g;\r\n        const newline_matches = [...content.matchAll(regex)]\r\n        let result = []\r\n        for (let i = 0; i < newline_matches.length; i++) {\r\n            if (i === 0) {\r\n                result = result.concat(content.slice(0, newline_matches[0].index))\r\n            }\r\n            else {\r\n\r\n                result = result.concat(content.slice(newline_matches[i - 1].index + 1, newline_matches[i].index))\r\n            }\r\n        }\r\n        return result\r\n    }\r\n    return (\r\n        <Modal show={show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Fasta Primer Preview</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>{formatContent(content).map((value, index) => <p key={index}>{value}</p>)}</Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"primary\" onClick={handleClose}>\r\n                    Close\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>)\r\n}\r\n\r\nexport default PreviewPane","import './fileDisplay.css';\r\nimport React, { useState } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport PreviewPane from '../previewPane/previewPane';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst FileDisplay = ({ file, errorMessage, setSelectedFiles }) => {\r\n    const [preview, setPreview] = useState('')\r\n    const [previewOpen, setPreviewOpen] = useState(false)\r\n    const fileSize = (size) => {\r\n        if (size === 0) return '0 Bytes';\r\n        const k = 1024;\r\n        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n        const i = Math.floor(Math.log(size) / Math.log(k));\r\n        return parseFloat((size / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n    }\r\n\r\n    const fileType = (fileName) => {\r\n        const fileType = fileName.substring(fileName.lastIndexOf('.') + 1, fileName.length)\r\n        if (fileType.length === fileName.length) {\r\n            return 'Fasta'\r\n        }\r\n        else {\r\n            return fileType\r\n        }\r\n    }\r\n\r\n    const removeFile = (fileName) => {\r\n        setSelectedFiles(prevFiles => prevFiles.filter(file => file.name !== fileName))\r\n    }\r\n    const openPreview = (file) => {\r\n        setPreview(file.content)\r\n        setPreviewOpen(true)\r\n    }\r\n\r\n    return <Container className=\"file-status-bar\">\r\n        <Row>\r\n            <div className=\"file-type-logo\"></div>\r\n            <div className=\"file-type\">{fileType(file.name)}</div>\r\n            <Col lg={5} md={12} className='file-info'>\r\n                <div className={`file-name ${file.invalid ? 'file-error' : ''}`} onClick={file.invalid ? () => removeFile(file.name) : () => openPreview(file)}>{file.name}</div>\r\n                <div className=\"file-size\">({fileSize(file.size)})</div>\r\n            </Col>\r\n            <Col lg={4} md={8} className='file-error-message'>\r\n                {file.invalid\r\n                    ? <div className='file-error-message-text'>({errorMessage})</div>\r\n                    : null}\r\n            </Col>\r\n            <Col lg={2} md={2} className=\"file-remove\" >\r\n                <Button onClick={() => removeFile(file.name)} variant='danger' size='sm'>Remove</Button>\r\n            </Col>\r\n        </Row>\r\n        <PreviewPane show={previewOpen} handleClose={() => setPreviewOpen(false)} content={preview} />\r\n    </Container >\r\n}\r\n\r\nexport default FileDisplay;","import axios from \"axios\";\r\n\r\nconst baseURL =\r\n  \"https://mendel3.bii.a-star.edu.sg/METHODS/corona/gamma/cgi-bin/cgi_scripts/primerMVP.py\";\r\n// const baseURL = \"http://localhost:3001\";\r\n\r\nconst checkFile = (file) => {\r\n  return axios.post(`${baseURL}`, file);\r\n};\r\n\r\nconst checkFiles = (files) => {\r\n  const to_send = { data: files };\r\n  return axios.post(`${baseURL}`, to_send);\r\n  // return axios.post(`${baseURL}/check_primers`, to_send);\r\n};\r\n\r\nexport default { checkFile, checkFiles };\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Collapse from \"react-bootstrap/Collapse\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport Fade from \"react-bootstrap/Fade\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport DropZone from \"../../components/dropzone/dropzone\";\r\nimport TextArea from \"../../components/textArea/textArea\";\r\nimport FileDisplay from \"../../components/fileDisplay/fileDisplay\";\r\nimport primerCheckService from \"../..//services/primerCheck\";\r\nimport \"./uploadPage.css\";\r\n\r\nconst UploadPage = ({ setResults, setError }) => {\r\n  const [showSubmit, setShowSubmit] = useState(false);\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n  const [displayedFiles, setDisplayedFiles] = useState([]);\r\n  const [validFiles, setValidFiles] = useState([]);\r\n  const [textFieldFasta, setTextFieldFasta] = useState([]);\r\n  const [fileErrorMessage, setFileErrorMessage] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [open, setOpen] = useState(true);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const openId = \"open-containers\";\r\n\r\n  useEffect(() => {\r\n    const filteredFiles = selectedFiles.reduce((files, current) => {\r\n      const match = files.find((file) => file.name === current.name);\r\n      if (match) {\r\n        return files;\r\n      } else {\r\n        return files.concat(current);\r\n      }\r\n    }, []);\r\n    setDisplayedFiles([...filteredFiles]);\r\n  }, [selectedFiles]);\r\n\r\n  useEffect(() => {\r\n    const filteredFiles = displayedFiles.reduce((files, current) => {\r\n      return current.invalid ? files : files.concat(current);\r\n    }, []);\r\n    setValidFiles(filteredFiles);\r\n  }, [displayedFiles]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      (validFiles.length === displayedFiles.length &&\r\n        validFiles.length !== 0 &&\r\n        textFieldFasta.length === 0) ||\r\n      (textFieldFasta.length !== 0 && validFiles.length === 0)\r\n    ) {\r\n      console.log(validFiles);\r\n      setErrorMessage(\"\");\r\n      return setShowSubmit(true);\r\n    } else if (textFieldFasta.length !== 0 && validFiles.length !== 0) {\r\n      setShowSubmit(false);\r\n      setErrorMessage(\r\n        \"Either upload a single sequence through input or select files to upload! Not Both!\"\r\n      );\r\n    }\r\n    setShowSubmit(false);\r\n  }, [validFiles, displayedFiles, textFieldFasta]);\r\n\r\n  const resetStates = () => {\r\n    setShowSubmit(false);\r\n    setSelectedFiles([]);\r\n    setTextFieldFasta([]);\r\n    setFileErrorMessage(\"\");\r\n    setErrorMessage(\"\");\r\n  };\r\n  const submitForm = () => {\r\n    console.log(validFiles, textFieldFasta);\r\n    setOpen(!open);\r\n    setIsLoading(true);\r\n    setTimeout(() => {\r\n      primerCheckService\r\n        .checkFiles(validFiles.length === 0 ? textFieldFasta : validFiles)\r\n        .then((response) => {\r\n          resetStates();\r\n          setIsLoading(false);\r\n          console.log(\"response is\", response);\r\n          setResults(JSON.stringify(response.data));\r\n          history.push(\"/results/Overview\");\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n          setError(JSON.stringify(e.data));\r\n          history.push(\"/error\");\r\n        });\r\n    }, 500);\r\n  };\r\n  return (\r\n    <div>\r\n      <Collapse id={openId} in={open}>\r\n        <div className=\"collapse-container\">\r\n          <Container>\r\n            <Button onClick={() => history.push(\"/manualUpload\")}>\r\n              Manual Upload\r\n            </Button>\r\n            <Form noValidate>\r\n              <TextArea setTextFieldFasta={setTextFieldFasta} />\r\n              <p className=\"alternative-upload\">OR</p>\r\n              <DropZone\r\n                selectedFiles={selectedFiles}\r\n                setSelectedFiles={setSelectedFiles}\r\n                setErrorMessage={setFileErrorMessage}\r\n              />\r\n            </Form>\r\n            <Container className=\"file-display-container\">\r\n              {displayedFiles.map((file, index) => (\r\n                <FileDisplay\r\n                  file={file}\r\n                  errorMessage={fileErrorMessage}\r\n                  setSelectedFiles={setSelectedFiles}\r\n                  key={index}\r\n                />\r\n              ))}\r\n            </Container>\r\n          </Container>\r\n        </div>\r\n      </Collapse>\r\n      <Container>\r\n        <Row className=\"upload-error-message\">{errorMessage}</Row>\r\n        {showSubmit ? (\r\n          <Fade in={open}>\r\n            <Button\r\n              id={openId}\r\n              aria-controls={openId}\r\n              aria-expanded={open}\r\n              onClick={submitForm}\r\n              disabled={isLoading}\r\n            >\r\n              {isLoading ? (\r\n                <Spinner\r\n                  as=\"span\"\r\n                  className=\"loader\"\r\n                  animation=\"border\"\r\n                  size=\"sm\"\r\n                  role=\"status\"\r\n                  aria-hidden=\"true\"\r\n                />\r\n              ) : null}\r\n              {isLoading ? \"Loading...\" : \"Submit\"}\r\n            </Button>\r\n          </Fade>\r\n        ) : null}\r\n        {isLoading ? (\r\n          <Fade in={!open}>\r\n            <Container className=\"loading-container\">\r\n              <Spinner\r\n                id={openId}\r\n                as=\"span\"\r\n                animation=\"border\"\r\n                role=\"status\"\r\n                variant=\"dark\"\r\n              />\r\n            </Container>\r\n          </Fade>\r\n        ) : null}\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadPage;\r\n","import React from \"react\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\n\r\nconst animatedComponents = makeAnimated();\r\n\r\nfunction SelectDropdown({\r\n  onChange,\r\n  options,\r\n  placeholder,\r\n  // value = [],\r\n  isLoading = false,\r\n  defaultValue = [],\r\n}) {\r\n  /**\r\n   * @param {function} onChange: Takes in Array(Objects) of selected objects, null if nothing is selected\r\n   * @param {Object} Options: Select Options. Should contain a \"value\" and \"label\" key\r\n   * @param {Array} defaultValue: The list of default options\r\n   * @param {bool} isLoading: Indicates if loading animation shows or not\r\n   * @param {string} placeholder: Hint text when there is nothing selected\r\n   * @param {Array} value: list of items that is selected\r\n   */\r\n  return (\r\n    <Select\r\n      closeMenuOnSelect={false}\r\n      components={animatedComponents}\r\n      defaultValue={defaultValue}\r\n      // value={value}\r\n      isMulti\r\n      isSearchable\r\n      isClearable\r\n      isLoading={isLoading}\r\n      placeholder={placeholder}\r\n      onChange={onChange}\r\n      options={options}\r\n    />\r\n  );\r\n}\r\nexport default SelectDropdown;\r\n","import React from \"react\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nfunction NumberRangeFilter({\r\n  data,\r\n  id,\r\n  value,\r\n  minVal,\r\n  maxVal,\r\n  step,\r\n  setFilter,\r\n}) {\r\n  const [min, max] = React.useMemo(() => {\r\n    const primerDetails = Object.values(data);\r\n    const combinedList = primerDetails.reduce((combined, currVal) => {\r\n      combined.push(...currVal);\r\n      return combined;\r\n    }, []);\r\n    let min = combinedList.length ? combinedList[0][id] : 0;\r\n    let max = combinedList.length ? combinedList[0][id] : 0;\r\n    combinedList.forEach((row) => {\r\n      min = Math.min(row[id], min);\r\n      max = Math.max(row[id], max);\r\n    });\r\n    return [min, max];\r\n  }, [data, id]);\r\n\r\n  const debounceFilter = (val, isMin) => {\r\n    isMin\r\n      ? setFilter((old = []) => [val, old[1]])\r\n      : setFilter((old = []) => [old[0], val]);\r\n  };\r\n\r\n  return (\r\n    <Form className=\"filter\">\r\n      <Form.Row>\r\n        <Col className=\"pr-md-0\" sm={12} md={6} lg={12}>\r\n          <Form.Control\r\n            as=\"input\"\r\n            value={value[0] || \"\"}\r\n            type=\"number\"\r\n            onChange={(e) => {\r\n              const val = step.isInteger\r\n                ? parseInt(e.target.value, 10) || 0\r\n                : parseFloat(e.target.value || 0);\r\n              debounceFilter(val, true);\r\n            }}\r\n            placeholder={`Min (${min})`}\r\n            size=\"sm\"\r\n            min={minVal}\r\n            max={maxVal}\r\n            step={step}\r\n          />\r\n        </Col>\r\n        <Col className=\"pr-md-0\" sm={12} md={6} lg={12}>\r\n          <Form.Control\r\n            value={value[1] || \"\"}\r\n            type=\"number\"\r\n            onChange={(e) => {\r\n              const val = step.isInteger\r\n                ? parseInt(e.target.value, 10) || 0\r\n                : parseFloat(e.target.value || 0);\r\n              debounceFilter(val, false);\r\n            }}\r\n            placeholder={`Max (${max})`}\r\n            size=\"sm\"\r\n            min={minVal}\r\n            max={maxVal}\r\n            step={step}\r\n          />\r\n        </Col>\r\n      </Form.Row>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default NumberRangeFilter;\r\n","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Collapse from \"react-bootstrap/Collapse\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { AiFillCaretDown, AiFillCaretRight } from \"react-icons/ai\";\r\nfunction FilterGroup({\r\n  title,\r\n  groupId,\r\n  buttonText,\r\n  component,\r\n  variant = \"light\",\r\n  isOpen = false,\r\n  size = \"sm\",\r\n}) {\r\n  const [show, setShow] = React.useState(isOpen);\r\n  return (\r\n    <Col>\r\n      <Button\r\n        onClick={() => {\r\n          setShow(!show);\r\n        }}\r\n        className=\"show-group mb-3 mt-3\"\r\n        aria-controls={groupId}\r\n        aria-expanded={show}\r\n        variant={variant}\r\n        size={size}\r\n      >\r\n        {show ? <AiFillCaretDown /> : <AiFillCaretRight />}\r\n        {show ? `${buttonText}` : `${buttonText}`}\r\n      </Button>\r\n      <Collapse in={show}>\r\n        <div>{component}</div>\r\n      </Collapse>\r\n    </Col>\r\n  );\r\n}\r\nexport default FilterGroup;\r\n","import React from \"react\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AiOutlineQuestionCircle, AiTwotoneCalendar } from \"react-icons/ai\";\r\nimport DateRangePicker from \"@wojtekmaj/react-daterange-picker\";\r\nimport SelectDropdown from \"../selectDropdown/selectDropdown\";\r\nimport NumberRangeFilter from \"./minMaxFilter\";\r\n\r\nimport FilterGroup from \"./filterGroup\";\r\nimport \"./itemFilter.css\";\r\n\r\nconst help = {\r\n  miss:\r\n    \"Sets the min and max number of misses in the virus sequence to be consider a miss\",\r\n  miss3:\r\n    \"Sets the min and max number of misses in the 3' end (last 5 nucleotides) of the virus sequence to be considered a miss\",\r\n  match:\r\n    \"Sets the min and max percentage of match for a virus sequence to be considered a miss\",\r\n  primer: \"Select the primers to display\",\r\n  pType: \"Select which part of the primer to display\",\r\n  country:\r\n    \"Selects the countries to display. Total will be over selected countries then. To change, check extra settings\",\r\n  absDiff:\r\n    \"Show the difference from the current bar and the previous bar if enable (The last bar will be compared against another bar off charts)\",\r\n  daysBetweenCompare: \"Sets the number of days between comparison\",\r\n  numBars: \"Sets the number of bars to be displayed\",\r\n  countryTotal:\r\n    \"Sets whether selected country will be used as total or all submission within said time frame will be used as total\",\r\n  cumulative:\r\n    \"Divides daily mutation count by total number of submissions thus far\",\r\n  lookBack:\r\n    \"Sets the number of days to be used when aggregating the number of submissions and mutations\",\r\n  date: \"Selects the dates of interest.\",\r\n};\r\n\r\nconst Switch = ({\r\n  id,\r\n  className,\r\n  checked,\r\n  onChange,\r\n  ariaControls = \"\",\r\n  ariaExpanded = \"\",\r\n  disabled = false,\r\n}) => {\r\n  return (\r\n    <label\r\n      id={id}\r\n      className={`switch ${className}`}\r\n      aria-controls={ariaControls}\r\n      aria-expanded={ariaExpanded}\r\n    >\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={checked}\r\n        onChange={onChange}\r\n        disabled={disabled}\r\n      />\r\n      <span className=\"slider round\"></span>\r\n    </label>\r\n  );\r\n};\r\n\r\nconst MissDefinition = ({\r\n  baseData,\r\n  miss,\r\n  setMiss,\r\n  miss3,\r\n  setMiss3,\r\n  match,\r\n  setMatch,\r\n}) => {\r\n  return (\r\n    <Row>\r\n      <Col className=\"mb-3 pr-lg-0 \" xs={12} lg={4}>\r\n        <InputGroup size=\"sm\" className=\"\">\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text>\r\n              Total Misses\r\n              <AiOutlineQuestionCircle className=\"pl-1\" data-tip={help.miss} />\r\n            </InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <NumberRangeFilter\r\n            data={baseData}\r\n            minVal={0}\r\n            maxVal={100}\r\n            step={1}\r\n            value={miss}\r\n            setFilter={setMiss}\r\n            id=\"misses\"\r\n          />\r\n        </InputGroup>\r\n      </Col>\r\n\r\n      <Col className=\"mb-3 pr-lg-0 pl-lg-0\" xs={12} lg={4}>\r\n        <InputGroup size=\"sm\">\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text>\r\n              Misses in 3' End\r\n              <AiOutlineQuestionCircle className=\"pl-1\" data-tip={help.miss3} />\r\n            </InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <NumberRangeFilter\r\n            data={baseData}\r\n            minVal={0}\r\n            maxVal={100}\r\n            step={1}\r\n            value={miss3}\r\n            setFilter={setMiss3}\r\n            id=\"misses3\"\r\n          />\r\n        </InputGroup>\r\n      </Col>\r\n      <Col className=\"mb-3 pl-lg-0 pr-lg-0\" xs={12} lg={4}>\r\n        <InputGroup size=\"sm\">\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text>\r\n              Homology %\r\n              <AiOutlineQuestionCircle className=\"pl-1\" data-tip={help.match} />\r\n            </InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <NumberRangeFilter\r\n            data={baseData}\r\n            minVal={0}\r\n            maxVal={100}\r\n            step={0.01}\r\n            value={match}\r\n            setFilter={setMatch}\r\n            id=\"match_pct\"\r\n          />\r\n        </InputGroup>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nconst BarGraphSettings = ({\r\n  isBar,\r\n  setIsBar,\r\n  daysBetweenComparison,\r\n  setDaysBetweenComparison,\r\n  numberOfBars,\r\n  setNumberOfBars,\r\n  showAbsDiff,\r\n  setShowAbsDiff,\r\n}) => {\r\n  return (\r\n    <Row>\r\n      <Col sm={12} lg={2}>\r\n        <InputGroup className=\"mb-3\" size=\"sm\">\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text>Show</InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <Switch\r\n            type=\"checkbox\"\r\n            checked={isBar}\r\n            onChange={() => setIsBar(!isBar)}\r\n            aria-controls=\"use-bars\"\r\n            aria-expanded={isBar}\r\n          />\r\n        </InputGroup>\r\n      </Col>\r\n      <Col sm={12} lg={3}>\r\n        <InputGroup className=\"mb-3\" size=\"sm\">\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text>\r\n              Absolute Diff\r\n              <AiOutlineQuestionCircle\r\n                className=\"pl-1\"\r\n                data-tip={help.absDiff}\r\n              />\r\n            </InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <Switch\r\n            type=\"checkbox\"\r\n            checked={showAbsDiff}\r\n            onChange={() => setShowAbsDiff(!showAbsDiff)}\r\n            disabled={!isBar}\r\n          />\r\n        </InputGroup>\r\n      </Col>\r\n      <Col sm={12} lg={4}>\r\n        <InputGroup className=\"mb-3\" size=\"sm\">\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text>\r\n              Days between Comparison\r\n              <AiOutlineQuestionCircle\r\n                className=\"pl-1\"\r\n                data-tip={help.daysBetweenCompare}\r\n              />\r\n            </InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <Form.Control\r\n            value={daysBetweenComparison.toString()}\r\n            disabled={!isBar}\r\n            as=\"input\"\r\n            type=\"number\"\r\n            min={1}\r\n            max={200}\r\n            step={1}\r\n            onChange={(e) => {\r\n              const val = e.target.value;\r\n              setDaysBetweenComparison(parseInt(val, 10) || 0);\r\n            }}\r\n          />\r\n        </InputGroup>\r\n      </Col>\r\n      <Col sm={12} lg={3}>\r\n        <InputGroup className=\"mb-3\" size=\"sm\">\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text>\r\n              Number of bars\r\n              <AiOutlineQuestionCircle\r\n                className=\"pl-1\"\r\n                data-tip={help.numBars}\r\n              />\r\n            </InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <Form.Control\r\n            value={numberOfBars.toString()}\r\n            disabled={!isBar}\r\n            as=\"input\"\r\n            type=\"number\"\r\n            min={1}\r\n            max={20}\r\n            step={1}\r\n            onChange={(e) => {\r\n              const val = e.target.value;\r\n              setNumberOfBars(parseInt(val, 10) || 0);\r\n            }}\r\n          />\r\n        </InputGroup>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nconst LineGraphSettings = ({ countryAsTotal, setCountryAsTotal }) => {\r\n  return (\r\n    <InputGroup className=\"mb-3\" size=\"sm\">\r\n      <InputGroup.Prepend>\r\n        <InputGroup.Text htmlFor=\"country\">\r\n          Selected Countries as Total\r\n          <AiOutlineQuestionCircle\r\n            className=\"pl-1\"\r\n            data-tip={help.countryTotal}\r\n          />\r\n        </InputGroup.Text>\r\n      </InputGroup.Prepend>\r\n      <Switch\r\n        id=\"country\"\r\n        className=\"use-country\"\r\n        checked={countryAsTotal}\r\n        onChange={(e) => {\r\n          setCountryAsTotal(e.target.checked);\r\n        }}\r\n      />\r\n    </InputGroup>\r\n  );\r\n};\r\nconst GraphMapSetting = ({\r\n  isBar,\r\n  setIsBar,\r\n  daysBetweenComparison,\r\n  setDaysBetweenComparison,\r\n  numberOfBars,\r\n  setNumberOfBars,\r\n  showAbsDiff,\r\n  setShowAbsDiff,\r\n  countryAsTotal,\r\n  setCountryAsTotal,\r\n  setTimeFrameBrush,\r\n  timeFrameBrush,\r\n  dateRange,\r\n  lookBack,\r\n  setLookBack,\r\n  useCum,\r\n  setUseCum,\r\n  variant,\r\n}) => {\r\n  const dateChange = (e) => {\r\n    console.log(\"e :>> \", e);\r\n    setTimeFrameBrush((e || []).map((value) => new Date(value)) || []);\r\n  };\r\n\r\n  return (\r\n    <Col>\r\n      <Row>\r\n        <Col xs={12} lg={5} className=\"pr-lg-0\">\r\n          <InputGroup className=\"mb-3 \" size=\"sm\">\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text>\r\n                Date Range\r\n                <AiOutlineQuestionCircle\r\n                  className=\"pl-1\"\r\n                  data-tip={help.date}\r\n                />\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <DateRangePicker\r\n              maxDate={new Date(dateRange[dateRange.length - 1])}\r\n              minDate={new Date(dateRange[0])}\r\n              calendarIcon={<AiTwotoneCalendar />}\r\n              onChange={dateChange}\r\n              value={timeFrameBrush.length === 0 ? null : timeFrameBrush}\r\n            />\r\n          </InputGroup>\r\n        </Col>\r\n\r\n        <Col xs={12} lg={3} className=\"pr-lg-0 pl-lg-0\">\r\n          <InputGroup className=\"mb-3\" size=\"sm\">\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text htmlFor=\"cumulative\">\r\n                Cumulative\r\n                <AiOutlineQuestionCircle\r\n                  className=\"pl-1\"\r\n                  data-tip={help.cumulative}\r\n                />\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Switch\r\n              id=\"cumulative\"\r\n              className=\"use-cumulative\"\r\n              checked={useCum}\r\n              onChange={(e) => {\r\n                setUseCum(e.target.checked);\r\n              }}\r\n            />\r\n          </InputGroup>\r\n        </Col>\r\n\r\n        <Col xs={12} lg={4} className=\"pl-lg-0\">\r\n          <InputGroup className=\"mb-3 \" size=\"sm\">\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text>\r\n                Look Back\r\n                <AiOutlineQuestionCircle\r\n                  className=\"pl-1\"\r\n                  data-tip={help.lookBack}\r\n                />\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              value={lookBack.toString()}\r\n              disabled={useCum}\r\n              as=\"input\"\r\n              type=\"number\"\r\n              min={0}\r\n              max={200}\r\n              step={1}\r\n              onChange={(e) => {\r\n                const val = e.target.value;\r\n                setLookBack(parseInt(val, 10) || 0);\r\n              }}\r\n            />\r\n          </InputGroup>\r\n        </Col>\r\n      </Row>\r\n      <FilterGroup\r\n        variant={variant}\r\n        buttonText={\"Bar Graph Setting\"}\r\n        groupId={\"bar-graph-setting\"}\r\n        component={\r\n          <BarGraphSettings\r\n            isBar={isBar}\r\n            setIsBar={setIsBar}\r\n            daysBetweenComparison={daysBetweenComparison}\r\n            setDaysBetweenComparison={setDaysBetweenComparison}\r\n            numberOfBars={numberOfBars}\r\n            setNumberOfBars={setNumberOfBars}\r\n            showAbsDiff={showAbsDiff}\r\n            setShowAbsDiff={setShowAbsDiff}\r\n          />\r\n        }\r\n      />\r\n      <FilterGroup\r\n        variant={variant}\r\n        buttonText={\"Line Graph Settings\"}\r\n        groupId={\"line-graph-settings\"}\r\n        component={\r\n          <LineGraphSettings\r\n            countryAsTotal={countryAsTotal}\r\n            setCountryAsTotal={setCountryAsTotal}\r\n          />\r\n        }\r\n      />\r\n    </Col>\r\n  );\r\n};\r\n\r\nconst AdvanceFilters = ({\r\n  baseData,\r\n  dateRange,\r\n  timeFrameBrush,\r\n  setTimeFrameBrush,\r\n  lookBack,\r\n  setLookBack,\r\n  useCum,\r\n  setUseCum,\r\n  miss,\r\n  setMiss,\r\n  miss3,\r\n  setMiss3,\r\n  match,\r\n  setMatch,\r\n  countryAsTotal,\r\n  setCountryAsTotal,\r\n  isBar,\r\n  setIsBar,\r\n  daysBetweenComparison,\r\n  setDaysBetweenComparison,\r\n  numberOfBars,\r\n  setNumberOfBars,\r\n  showAbsDiff,\r\n  setShowAbsDiff,\r\n}) => {\r\n  const variant = \"light\";\r\n  return (\r\n    <FilterGroup\r\n      variant={variant}\r\n      buttonText={\"More Settings\"}\r\n      groupId=\"Advance-settings\"\r\n      component={\r\n        <>\r\n          <Row>\r\n            <FilterGroup\r\n              variant={variant}\r\n              buttonText={\"Adjust Miss Definition\"}\r\n              groupId={\"miss-definitions\"}\r\n              component={\r\n                <MissDefinition\r\n                  baseData={baseData}\r\n                  miss={miss}\r\n                  setMiss={setMiss}\r\n                  miss3={miss3}\r\n                  setMiss3={setMiss3}\r\n                  match={match}\r\n                  setMatch={setMatch}\r\n                />\r\n              }\r\n            />\r\n          </Row>\r\n          <Row>\r\n            <FilterGroup\r\n              variant={variant}\r\n              buttonText={\"Graph and Map Settings\"}\r\n              groupId={\"graph-map-setting\"}\r\n              component={\r\n                <GraphMapSetting\r\n                  variant={variant}\r\n                  setTimeFrameBrush={setTimeFrameBrush}\r\n                  timeFrameBrush={timeFrameBrush}\r\n                  dateRange={dateRange}\r\n                  lookBack={lookBack}\r\n                  setLookBack={setLookBack}\r\n                  useCum={useCum}\r\n                  setUseCum={setUseCum}\r\n                  isBar={isBar}\r\n                  setIsBar={setIsBar}\r\n                  daysBetweenComparison={daysBetweenComparison}\r\n                  setDaysBetweenComparison={setDaysBetweenComparison}\r\n                  numberOfBars={numberOfBars}\r\n                  setNumberOfBars={setNumberOfBars}\r\n                  showAbsDiff={showAbsDiff}\r\n                  setShowAbsDiff={setShowAbsDiff}\r\n                  countryAsTotal={countryAsTotal}\r\n                  setCountryAsTotal={setCountryAsTotal}\r\n                />\r\n              }\r\n            />\r\n          </Row>\r\n        </>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nfunction BasicFilters({\r\n  baseData,\r\n  setIsProcessing,\r\n  isProcessing,\r\n  setCountries,\r\n  primers,\r\n  setPrimers,\r\n  setPType,\r\n}) {\r\n  const history = useHistory();\r\n\r\n  function primerChange(setSelectedPrimers) {\r\n    return (selection) => {\r\n      setIsProcessing(true);\r\n      const toFilter = selection || [];\r\n      if (toFilter.length === 0) {\r\n        setSelectedPrimers(toFilter);\r\n        history.push(`/results/Overview`);\r\n      } else {\r\n        const selection = toFilter.map((val) => val.value);\r\n        setSelectedPrimers(selection);\r\n        history.push(`/results/${selection.join(\"&\")}`);\r\n      }\r\n    };\r\n  }\r\n\r\n  function selectionChange(setSelection) {\r\n    return (selection) => {\r\n      setIsProcessing(true);\r\n      const toFilter = selection || [];\r\n      if (toFilter.length === 0) {\r\n        setSelection(toFilter);\r\n      } else {\r\n        const selection = toFilter.map((val) => {\r\n          if (val.value === val.label) return val.value;\r\n          return val;\r\n        });\r\n        setSelection(selection);\r\n      }\r\n    };\r\n  }\r\n  return (\r\n    <FilterGroup\r\n      isOpen={true}\r\n      variant=\"light\"\r\n      buttonText={\"Basic Filters\"}\r\n      groupId=\"basic-settings\"\r\n      component={\r\n        <>\r\n          <Row className=\"mb-3\">\r\n            <Col xs={12} lg={7} className=\"mb-3\">\r\n              <Row>\r\n                <Col sm={12} lg={3} className=\"mr-0 pr-lg-0\">\r\n                  <InputGroup.Text>\r\n                    Primers\r\n                    <AiOutlineQuestionCircle\r\n                      className=\"pl-1\"\r\n                      data-tip={help.primer}\r\n                    />\r\n                  </InputGroup.Text>\r\n                </Col>\r\n                <Col sm={12} lg={9} className=\"pl-lg-0\">\r\n                  <SelectDropdown\r\n                    value={primers}\r\n                    onChange={primerChange(setPrimers)}\r\n                    options={React.useMemo(() => {\r\n                      return Object.keys(baseData).map((val) => {\r\n                        return { label: val, value: val };\r\n                      });\r\n                    }, [baseData])}\r\n                    placeholder={\"Select Primers to Display\"}\r\n                    isLoading={isProcessing}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n            <Col xs={12} lg={5} className=\"mb-3\">\r\n              <Row>\r\n                <Col sm={12} lg={5} className=\"mr-0 pr-lg-0\">\r\n                  <InputGroup.Text>\r\n                    Primer Type\r\n                    <AiOutlineQuestionCircle\r\n                      className=\"pl-1\"\r\n                      data-tip={help.pType}\r\n                    />\r\n                  </InputGroup.Text>\r\n                </Col>\r\n                <Col sm={12} lg={7} className=\"pl-lg-0\">\r\n                  <SelectDropdown\r\n                    onChange={selectionChange(setPType)}\r\n                    options={React.useMemo(\r\n                      () => [\r\n                        { label: \"fwd\", value: \"fwd\" },\r\n                        { label: \"rev\", value: \"rev\" },\r\n                        { label: \"prb\", value: \"prb\" },\r\n                      ],\r\n                      []\r\n                    )}\r\n                    placeholder={\"Specify Type\"}\r\n                    isLoading={isProcessing}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"mb-3\">\r\n            <Col sm={12} lg={2} className=\"mr-0 pr-lg-0\">\r\n              <InputGroup.Text>\r\n                Counties\r\n                <AiOutlineQuestionCircle\r\n                  className=\"pl-1\"\r\n                  data-tip={help.country}\r\n                />\r\n              </InputGroup.Text>\r\n            </Col>\r\n            <Col sm={12} lg={10} className=\"pl-lg-0\">\r\n              <SelectDropdown\r\n                className=\"country-picker\"\r\n                onChange={selectionChange(setCountries)}\r\n                options={React.useMemo(() => {\r\n                  const unique = new Set();\r\n                  const options = Object.values(baseData).reduce(\r\n                    (options, currVal) => {\r\n                      const countries = currVal.reduce((countries, virus) => {\r\n                        if (unique.has(virus.country_name)) {\r\n                          return countries;\r\n                        }\r\n                        unique.add(virus.country_name);\r\n                        countries.push({\r\n                          label: virus.country_name,\r\n                          value: virus.ISO_A3,\r\n                        });\r\n                        return countries;\r\n                      }, []);\r\n                      options.push(...countries);\r\n                      return options;\r\n                    },\r\n                    []\r\n                  );\r\n                  return options;\r\n                }, [baseData])}\r\n                placeholder={\"Filter Countries\"}\r\n                isLoading={isProcessing}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nconst ItemFilters = ({\r\n  baseData,\r\n  dateRange,\r\n  timeFrameBrush,\r\n  setTimeFrameBrush,\r\n  lookBack,\r\n  setLookBack,\r\n  useCum,\r\n  setUseCum,\r\n  miss,\r\n  setMiss,\r\n  miss3,\r\n  setMiss3,\r\n  match,\r\n  setMatch,\r\n  countryAsTotal,\r\n  setCountryAsTotal,\r\n  setCountries,\r\n  primers,\r\n  setPrimers,\r\n  setPType,\r\n  isProcessing,\r\n  setIsProcessing,\r\n  isBar,\r\n  setIsBar,\r\n  daysBetweenComparison,\r\n  setDaysBetweenComparison,\r\n  numberOfBars,\r\n  setNumberOfBars,\r\n  showAbsDiff,\r\n  setShowAbsDiff,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <BasicFilters\r\n          baseData={baseData}\r\n          isProcessing={isProcessing}\r\n          setIsProcessing={setIsProcessing}\r\n          setCountries={setCountries}\r\n          primers={primers}\r\n          setPrimers={setPrimers}\r\n          setPType={setPType}\r\n        />\r\n      </Row>\r\n      <Row>\r\n        <AdvanceFilters\r\n          baseData={baseData}\r\n          dateRange={dateRange}\r\n          timeFrameBrush={timeFrameBrush}\r\n          setTimeFrameBrush={setTimeFrameBrush}\r\n          lookBack={lookBack}\r\n          setLookBack={setLookBack}\r\n          useCum={useCum}\r\n          setUseCum={setUseCum}\r\n          miss={miss}\r\n          setMiss={setMiss}\r\n          miss3={miss3}\r\n          setMiss3={setMiss3}\r\n          match={match}\r\n          setMatch={setMatch}\r\n          countryAsTotal={countryAsTotal}\r\n          setCountryAsTotal={setCountryAsTotal}\r\n          setPType={setPType}\r\n          isBar={isBar}\r\n          setIsBar={setIsBar}\r\n          daysBetweenComparison={daysBetweenComparison}\r\n          setDaysBetweenComparison={setDaysBetweenComparison}\r\n          numberOfBars={numberOfBars}\r\n          setNumberOfBars={setNumberOfBars}\r\n          showAbsDiff={showAbsDiff}\r\n          setShowAbsDiff={setShowAbsDiff}\r\n        />\r\n      </Row>\r\n      <ReactTooltip html={true}></ReactTooltip>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemFilters;\r\n","// Code by React-table doc team\r\n\r\nimport React from \"react\";\r\nimport { useAsyncDebounce } from \"react-table\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\n// Define a default UI for filtering\r\nexport function GlobalFilter({\r\n  preGlobalFilteredRows,\r\n  globalFilter,\r\n  setGlobalFilter,\r\n  isHelpOn = true,\r\n}) {\r\n  const count = preGlobalFilteredRows.length;\r\n  const [value, setValue] = React.useState(globalFilter);\r\n  const onChange = useAsyncDebounce((value) => {\r\n    setGlobalFilter(value || undefined);\r\n  }, 200);\r\n\r\n  return (\r\n    <div className=\"general-search\">\r\n      <Form.Row>\r\n        <Form.Label column sm={12} lg={2}>\r\n          General Search\r\n        </Form.Label>\r\n        <Col sm={12} lg={10}>\r\n          <Form.Control\r\n            type=\"text\"\r\n            value={value || \"\"}\r\n            onChange={(e) => {\r\n              setValue(e.target.value);\r\n              onChange(e.target.value);\r\n            }}\r\n            placeholder={`Search the ${count} entries`}\r\n          />\r\n        </Col>\r\n      </Form.Row>\r\n      {isHelpOn ? (\r\n        <Form.Row>\r\n          <Form.Label column sm={0} lg={2}></Form.Label>\r\n          <Col sm={12} lg={10}>\r\n            <Form.Text className=\"text-muted\">\r\n              This does not affect plot data. If you want to set filters, set\r\n              the options above.\r\n            </Form.Text>\r\n          </Col>\r\n        </Form.Row>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\n// This is a custom UI for our 'between' or number range\r\n// filter. It uses two number boxes and filters rows to\r\n// ones that have values between the two\r\n// export function NumberRangeFilter({\r\n//   column: { filterValue = [], preFilteredRows, setFilter, id, Header },\r\n// }) {\r\n//   const [min, max] = React.useMemo(() => {\r\n//     let min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\r\n//     let max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\r\n//     preFilteredRows.forEach((row) => {\r\n//       min = Math.min(row.values[id], min);\r\n//       max = Math.max(row.values[id], max);\r\n//     });\r\n//     return [min, max];\r\n//   }, [id, preFilteredRows]);\r\n//   const debounceFilter = useAsyncDebounce((val) => {\r\n//     setFilter((old = []) => [val ? parseInt(val, 10) : undefined, old[1]]);\r\n//   }, 200);\r\n\r\n//   return (\r\n//     <Form className=\"filter\">\r\n//       <Form.Row>\r\n//         <Col>\r\n//           <Form.Control\r\n//             as=\"input\"\r\n//             value={filterValue[0] || \"\"}\r\n//             type=\"number\"\r\n//             onChange={(e) => {\r\n//               const val = e.target.value;\r\n//               debounceFilter(val);\r\n//             }}\r\n//             placeholder={`Min (${min})`}\r\n//             size=\"sm\"\r\n//             min={0}\r\n//             max={200}\r\n//           />\r\n//         </Col>\r\n//         <Col>\r\n//           <Form.Control\r\n//             value={filterValue[1] || \"\"}\r\n//             type=\"number\"\r\n//             onChange={(e) => {\r\n//               const val = e.target.value;\r\n//               setFilter((old = []) => [\r\n//                 old[0],\r\n//                 val ? parseInt(val, 10) : undefined,\r\n//               ]);\r\n//             }}\r\n//             placeholder={`Max (${max})`}\r\n//             size=\"sm\"\r\n//           />\r\n//         </Col>\r\n//       </Form.Row>\r\n//     </Form>\r\n//   );\r\n// }\r\n\r\n// Define a default UI for filtering\r\n// export function CountryColumnFilter({\r\n//   column: { filterValue, preFilteredRows, setFilter },\r\n// }) {\r\n//   //   const count = preFilteredRows.length;\r\n\r\n//   return (\r\n//     <Form.Control\r\n//       className=\"filter\"\r\n//       value={filterValue || \"\"}\r\n//       onChange={(e) => {\r\n//         setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\r\n//       }}\r\n//       placeholder={`Filter Country`}\r\n//     />\r\n//   );\r\n// }\r\n\r\n// // This is a custom filter UI for selecting\r\n// // a unique option from a list\r\n// export function SelectColumnFilter({\r\n//   column: { filterValue, setFilter, preFilteredRows, id, Header },\r\n// }) {\r\n//   // Calculate the options for filtering\r\n//   // using the preFilteredRows\r\n//   const options = React.useMemo(() => {\r\n//     const unique = new Set();\r\n//     preFilteredRows.forEach((row) => {\r\n//       unique.add(row.values[id]);\r\n//     });\r\n//     const options = [...unique.values()].map((val) => {\r\n//       return { value: val, label: val };\r\n//     });\r\n//     return [{ value: \"\", label: \"All\" }, ...options];\r\n//   }, [id, preFilteredRows]);\r\n\r\n//   // Render a multi-select box\r\n//   return (\r\n//     <SelectDropdown\r\n//       onChange={(e) => {\r\n//         const toFilter = e || [];\r\n//         const isAll = toFilter.find((val) => val.value === \"\");\r\n//         if (isAll || toFilter.length === 0) {\r\n//           setFilter(undefined);\r\n//         } else {\r\n//           const selection = toFilter.map((val) => val.value);\r\n//           setFilter(selection);\r\n//         }\r\n//       }}\r\n//       options={options}\r\n//       defaultValue={[]}\r\n//     />\r\n//   );\r\n// }\r\n\r\n// This is a custom filter UI that uses a\r\n// slider to set the filter value between a column's\r\n// min and max values\r\n// function SliderColumnFilter({\r\n//   column: { filterValue, setFilter, preFilteredRows, id },\r\n// }) {\r\n// Calculate the min and max\r\n// using the preFilteredRows\r\n\r\n//   const [min, max] = React.useMemo(() => {\r\n//     let min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\r\n//     let max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\r\n//     preFilteredRows.forEach((row) => {\r\n//       min = Math.min(row.values[id], min);\r\n//       max = Math.max(row.values[id], max);\r\n//     });\r\n//     return [min, max];\r\n//   }, [id, preFilteredRows]);\r\n\r\n//   return (\r\n//     <>\r\n//       <input\r\n//         className=\"filter\"\r\n//         type=\"range\"\r\n//         min={min}\r\n//         max={max}\r\n//         value={filterValue || min}\r\n//         onChange={(e) => {\r\n//           setFilter(parseInt(e.target.value, 10));\r\n//         }}\r\n//       />\r\n//       <button onClick={() => setFilter(undefined)}>Off</button>\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// Define a custom filter filter function!\r\n// function filterGreaterThan(rows, id, filterValue) {\r\n//   return rows.filter((row) => {\r\n//     const rowValue = row.values[id];\r\n//     return rowValue >= filterValue;\r\n//   });\r\n// }\r\n// export function filterContains(rows, id, filterValue) {\r\n//   return rows.filter((row) => {\r\n//     if (filterValue === undefined) {\r\n//       return true;\r\n//     }\r\n//     const rowValue = row.values[id];\r\n//     return filterValue.includes(rowValue);\r\n//   });\r\n// }\r\n\r\n// This is an autoRemove method on the filter function that\r\n// when given the new filter value and returns true, the filter\r\n// will be automatically removed. Normally this is just an undefined\r\n// check, but here, we want to remove the filter if it's not a number\r\n// filterGreaterThan.autoRemove = (val) => typeof val !== \"number\";\r\n\r\n// function App() {\r\n//   const columns = React.useMemo(\r\n//     () => [\r\n//       {\r\n//         Header: \"Name\",\r\n//         columns: [\r\n//           {\r\n//             Header: \"First Name\",\r\n//             accessor: \"firstName\",\r\n//           },\r\n//           {\r\n//             Header: \"Last Name\",\r\n//             accessor: \"lastName\",\r\n//             // Use our custom `fuzzyText` filter on this column\r\n//             filter: \"fuzzyText\",\r\n//           },\r\n//         ],\r\n//       },\r\n//       {\r\n//         Header: \"Info\",\r\n//         columns: [\r\n//           {\r\n//             Header: \"Age\",\r\n//             accessor: \"age\",\r\n//             Filter: SliderColumnFilter,\r\n//             filter: \"equals\",\r\n//           },\r\n//           {\r\n//             Header: \"Visits\",\r\n//             accessor: \"visits\",\r\n//             Filter: NumberRangeColumnFilter,\r\n//             filter: \"between\",\r\n//           },\r\n//           {\r\n//             Header: \"Status\",\r\n//             accessor: \"status\",\r\n//             Filter: SelectColumnFilter,\r\n//             filter: \"includes\",\r\n//           },\r\n//           {\r\n//             Header: \"Profile Progress\",\r\n//             accessor: \"progress\",\r\n//             Filter: SliderColumnFilter,\r\n//             filter: filterGreaterThan,\r\n//           },\r\n//         ],\r\n//       },\r\n//     ],\r\n//     []\r\n//   );\r\n\r\n//   return (\r\n//     <div></div>\r\n//   );\r\n// }\r\n","import React from \"react\";\r\nimport {\r\n  usePagination,\r\n  useTable,\r\n  useGlobalFilter,\r\n  useFlexLayout,\r\n  useResizeColumns,\r\n  useSortBy,\r\n} from \"react-table\";\r\nimport BTable from \"react-bootstrap/Table\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Collapse from \"react-bootstrap/Collapse\";\r\nimport { AiFillCaretDown, AiFillCaretRight } from \"react-icons/ai\";\r\nimport { FaSort, FaSortDown, FaSortUp } from \"react-icons/fa\";\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nimport \"./tableDisplay.css\";\r\n\r\nimport { GlobalFilter } from \"./filter\";\r\n\r\nfunction DataTable({ title, data, columns, isCombined, isCollapsable }) {\r\n  const [showTable, setShowTable] = React.useState(true);\r\n\r\n  if (isCollapsable) {\r\n    return (\r\n      <>\r\n        <Button\r\n          onClick={() => {\r\n            setShowTable(!showTable);\r\n          }}\r\n          className=\"show-table mb-3 mt-3\"\r\n          aria-controls=\"collapse-table\"\r\n          aria-expanded={showTable}\r\n          variant=\"light\"\r\n        >\r\n          {showTable ? <AiFillCaretDown /> : <AiFillCaretRight />}\r\n          {showTable ? `Close Table` : `Show Table`}\r\n        </Button>\r\n        <Collapse in={showTable}>\r\n          <div>\r\n            <TableDisplay\r\n              id=\"collapse-table\"\r\n              title={title}\r\n              data={data}\r\n              columns={columns}\r\n              isCombined={isCombined}\r\n            />\r\n          </div>\r\n        </Collapse>\r\n      </>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <TableDisplay\r\n        id=\"collapse-table\"\r\n        title={title}\r\n        data={data}\r\n        columns={columns}\r\n        isCombined={isCombined}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction TableDisplay({ title, data, columns, isCombined }) {\r\n  const csv_headers = columns.map((header) => {\r\n    return { label: header.Header, key: header.accessor };\r\n  });\r\n  if (!isCombined) {\r\n    csv_headers.push(\r\n      ...[\r\n        {\r\n          label: \"ISO A3\",\r\n          key: \"ISO_A3\",\r\n        },\r\n        {\r\n          label: \"Virus Match Index (Start, End)\",\r\n          key: \"virus_match_idx\",\r\n        },\r\n        {\r\n          label: \"Primer Match Index (Start, End)\",\r\n          key: \"query_match_idx\",\r\n        },\r\n      ]\r\n    );\r\n  }\r\n\r\n  const filterTypes = React.useMemo(\r\n    () => ({\r\n      // Or, override the default text filter to use\r\n      // \"startWith\"\r\n      text: (rows, id, filterValue) => {\r\n        return rows.filter((row) => {\r\n          const rowValue = row.values[id];\r\n          return rowValue !== undefined\r\n            ? String(rowValue)\r\n                .toLowerCase()\r\n                .startsWith(String(filterValue).toLowerCase())\r\n            : true;\r\n        });\r\n      },\r\n    }),\r\n    []\r\n  );\r\n\r\n  const defaultColumn = React.useMemo(\r\n    () => ({\r\n      minWidth: 80,\r\n      width: 160,\r\n      maxWidth: 600,\r\n    }),\r\n    []\r\n  );\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    page,\r\n\r\n    // pagination details\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize },\r\n\r\n    // filtering details\r\n    state,\r\n    // visibleColumns,\r\n    preGlobalFilteredRows,\r\n    setGlobalFilter,\r\n    // filteredRows,\r\n    // rows,\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      initialState: { pageIndex: 0 },\r\n      defaultColumn,\r\n      filterTypes,\r\n    },\r\n    // useFilters,\r\n    useGlobalFilter,\r\n    useSortBy,\r\n    usePagination,\r\n    useFlexLayout,\r\n    useResizeColumns\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"table-title\">{title}</h2>\r\n      <GlobalFilter\r\n        preGlobalFilteredRows={preGlobalFilteredRows}\r\n        globalFilter={state.globalFilter}\r\n        setGlobalFilter={setGlobalFilter}\r\n      />\r\n\r\n      {/* <pre>\r\n        <code>{JSON.stringify(state, null, 2)}</code>\r\n      </pre> */}\r\n      <BTable\r\n        {...getTableProps()}\r\n        variant=\"light\"\r\n        //   size=\"lg\"\r\n        responsive\r\n        striped\r\n        bordered\r\n        hover\r\n      >\r\n        <thead className=\"thead\">\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => {\r\n                return (\r\n                  <th {...column.getHeaderProps()} className=\"table-header\">\r\n                    {column.render(\"Header\")}\r\n                    <span {...column.getSortByToggleProps()}>\r\n                      {column.isSorted ? (\r\n                        column.isSortedDesc ? (\r\n                          <FaSortDown className=\"pl-1\" />\r\n                        ) : (\r\n                          <FaSortUp className=\"pl-1\" />\r\n                        )\r\n                      ) : (\r\n                        <FaSort className=\"pl-1\" />\r\n                      )}\r\n                    </span>\r\n                    {column.canResize && (\r\n                      <div\r\n                        {...column.getResizerProps()}\r\n                        className={`resizer ${\r\n                          column.isResizing ? \"isResizing\" : \"\"\r\n                        }`}\r\n                      />\r\n                    )}\r\n                    {/* {column.canFilter ? (\r\n                      <div>{column.render(\"Filter\")}</div>\r\n                    ) : null} */}\r\n                  </th>\r\n                );\r\n              })}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()} className=\"tbody\">\r\n          {page.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  if (cell.column.id === \"match_diag\") {\r\n                    const display_str = cell.value.split(\" \").map((val) => {\r\n                      return val.split(\"\");\r\n                    });\r\n                    return (\r\n                      <td\r\n                        {...cell.getCellProps()}\r\n                        className=\"table-cell match-diag\"\r\n                      >\r\n                        {display_str.map((val, idx) => {\r\n                          return (\r\n                            <div key={idx}>\r\n                              {val.map((char, idx) => {\r\n                                return (\r\n                                  <span key={idx} className={char}>\r\n                                    {char}\r\n                                  </span>\r\n                                );\r\n                              })}\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </td>\r\n                    );\r\n                  }\r\n                  return (\r\n                    <td\r\n                      {...cell.getCellProps()}\r\n                      className={`table-cell ${\r\n                        cell.column.id === \"country_name\" ||\r\n                        cell.column.id === \"virus_name\"\r\n                          ? \"text-align-start\"\r\n                          : \"\"\r\n                      }`}\r\n                    >\r\n                      {cell.render(\"Cell\")}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n          {!canNextPage ? (\r\n            <tr className=\"end-of-data\">\r\n              <td>{`---------- All Data Displayed ----------`}</td>\r\n            </tr>\r\n          ) : null}\r\n        </tbody>\r\n      </BTable>\r\n      <Row className=\"pagination\">\r\n        <Col className=\"page-controls\" sm={12} md={4}>\r\n          <Button\r\n            variant=\"light\"\r\n            onClick={() => gotoPage(0)}\r\n            disabled={!canPreviousPage}\r\n          >\r\n            {\"<<\"}\r\n          </Button>\r\n          <Button\r\n            variant=\"light\"\r\n            onClick={() => previousPage()}\r\n            disabled={!canPreviousPage}\r\n          >\r\n            {\"<\"}\r\n          </Button>\r\n          <Button\r\n            variant=\"light\"\r\n            onClick={() => nextPage()}\r\n            disabled={!canNextPage}\r\n          >\r\n            {\">\"}\r\n          </Button>\r\n          <Button\r\n            variant=\"light\"\r\n            onClick={() => gotoPage(pageCount - 1)}\r\n            disabled={!canNextPage}\r\n          >\r\n            {\">>\"}\r\n          </Button>\r\n          <p>\r\n            {\" \"}\r\n            Page <strong>{pageIndex + 1} </strong> of{\" \"}\r\n            <strong>{pageOptions.length}</strong>\r\n          </p>\r\n        </Col>\r\n        <Col className=\"manual-page-selection\" sm={12} md={4}>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"page-info\">Go to page:</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              type=\"number\"\r\n              defaultValue={pageIndex + 1}\r\n              onChange={(e) => {\r\n                const page = e.target.value ? Number(e.target.value) - 1 : 0;\r\n                gotoPage(page);\r\n              }}\r\n              aria-label=\"Go To Page\"\r\n              aria-describedby=\"page-info\"\r\n            />\r\n          </InputGroup>\r\n        </Col>\r\n        <Col className=\"results-per-page\" sm={12} md={4}>\r\n          <Form.Control\r\n            value={pageSize}\r\n            onChange={(e) => {\r\n              setPageSize(Number(e.target.value));\r\n            }}\r\n            as=\"select\"\r\n          >\r\n            {[10, 20, 30, 40, 50].map((pageSize) => (\r\n              <option key={pageSize} value={pageSize}>\r\n                Show {pageSize}\r\n              </option>\r\n            ))}\r\n          </Form.Control>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <CSVLink\r\n          data={data}\r\n          headers={csv_headers}\r\n          filename={isCombined ? \"combined_miss.csv\" : \"sensitivity_miss.csv\"}\r\n          className=\"btn btn-dark\"\r\n          target=\"_blank\"\r\n        >\r\n          Download Table\r\n        </CSVLink>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\nexport default DataTable;\r\n","import React from \"react\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\nimport { debounce } from \"../util\";\r\n\r\nconst LineGraph = ({\r\n  title,\r\n  title2,\r\n  data,\r\n  primers,\r\n  dates,\r\n  setTimeFrameBrush,\r\n  timeFrameBrush,\r\n  showModal,\r\n  setModalInfo,\r\n  subtitle = \"\",\r\n  subtitle2 = \"\",\r\n}) => {\r\n  function buildDataSet(data) {\r\n    const datasets = [];\r\n    for (const dataset of data) {\r\n      datasets.push({\r\n        dimensions: [\r\n          \"countries_considered\",\r\n          \"date\",\r\n          \"mutation3_abs\",\r\n          \"mutation3_pct\",\r\n          \"mutation_abs\",\r\n          \"mutation_pct\",\r\n          \"name\",\r\n          \"submission_count\",\r\n        ],\r\n        source: dataset,\r\n      });\r\n    }\r\n    return datasets;\r\n  }\r\n  function getMutationPlot(primers, dataPlot, xIndex, yIndex) {\r\n    const plots = [];\r\n    for (let i = 0; i < primers.length; i++) {\r\n      plots.push({\r\n        name: `${primers[i]}`,\r\n        type: \"line\",\r\n        hoverAnimation: false,\r\n        xAxisIndex: xIndex,\r\n        yAxisIndex: yIndex,\r\n        encode: {\r\n          x: \"date\",\r\n          y: dataPlot,\r\n        },\r\n        datasetIndex: i,\r\n      });\r\n    }\r\n    return plots;\r\n  }\r\n  function getDateIndex(date, dates) {\r\n    if (date === undefined) return undefined;\r\n    const index = dates.findIndex((val) => {\r\n      const dateString = date.toISOString().slice(0, 10);\r\n      return dateString === val;\r\n    });\r\n    return index === -1 ? undefined : index;\r\n  }\r\n  function getStartDate(dates, date, lookBack) {\r\n    const initDate = new Date(dates[0]);\r\n    let startDate = new Date(date);\r\n    startDate.setDate(startDate.getDate() - lookBack);\r\n    if (startDate < initDate) {\r\n      startDate = initDate;\r\n    }\r\n    return startDate.toISOString().slice(0, 10);\r\n  }\r\n\r\n  const startIndex =\r\n    ((getDateIndex(timeFrameBrush[0], dates) || 0) * 100) / dates.length;\r\n  const endIndex =\r\n    ((getDateIndex(timeFrameBrush[1], dates) + 1 || dates.length) * 100) /\r\n    dates.length;\r\n\r\n  const mutationPlot = getMutationPlot(primers, \"mutation_pct\", 0, 0);\r\n  const mutation3Plot = getMutationPlot(primers, \"mutation3_pct\", 1, 1);\r\n  const datasets = buildDataSet(data, primers);\r\n  // console.log(\"data :>> \", data);\r\n  // console.log(\"mutationPlot :>> \", mutationPlot);\r\n  // console.log(\"datasets :>> \", datasets);\r\n\r\n  const option = {\r\n    title: [\r\n      {\r\n        text: title,\r\n        subtext: subtitle,\r\n        left: \"center\",\r\n      },\r\n      {\r\n        text: title2,\r\n        subtext: subtitle2,\r\n        left: \"center\",\r\n        top: \"center\",\r\n      },\r\n    ],\r\n    tooltip: {\r\n      trigger: \"axis\",\r\n      axisPointer: {\r\n        type: \"cross\",\r\n        animation: false,\r\n      },\r\n      backgroundColor: \"rgba(50,50,50, 0.9)\",\r\n      formatter: function (params) {\r\n        let baseDetails = params[0].data;\r\n        let date = baseDetails.date;\r\n        let startDate =\r\n          baseDetails.lookBack === -1\r\n            ? dates[0]\r\n            : getStartDate(dates, date, baseDetails.lookBack);\r\n        let submissionCount = baseDetails.submission_count;\r\n        let countries =\r\n          baseDetails.countries_considered.length === 0\r\n            ? \"all available Countries\"\r\n            : `${baseDetails.countries_considered.length} countries`;\r\n\r\n        let tooltip = `<div>Details from ${startDate} to ${date}<br/>Total Submissions: ${submissionCount} from ${countries}</div><br/>`;\r\n\r\n        for (let i = 0; i < params.length / 2; i++) {\r\n          tooltip += `<div>${params[i].data.name}\r\n            <br/>\r\n            <strong>Abs Mutation:</strong> ${params[i].data.mutation_abs}<br/>\r\n            <strong>Abs Mutation in 3' end:</strong> ${\r\n              params[i].data.mutation3_abs\r\n            }%<br/>\r\n            <strong>Mutation %:</strong> ${params[i].data.mutation_pct.toFixed(\r\n              3\r\n            )}<br/>\r\n            <strong>Mutation % in 3' end:</strong> ${params[\r\n              i\r\n            ].data.mutation3_pct.toFixed(3)}%</div><br/>`;\r\n        }\r\n        return tooltip;\r\n      },\r\n      position: function (pos, params, el, elRect, size) {\r\n        let obj = {};\r\n        obj[[\"top\", \"bottom\"][+(pos[1] < size.viewSize[1] / 2)]] = 10;\r\n        obj[[\"left\", \"right\"][+(pos[0] < size.viewSize[0] / 2)]] = 30;\r\n        return obj;\r\n      },\r\n    },\r\n    legend: {\r\n      data: primers,\r\n      orient: \"vertical\",\r\n      type: \"scroll\",\r\n      top: \"5%\",\r\n      right: 0,\r\n    },\r\n    // toolbox: {\r\n    //   feature: {\r\n    //     dataZoom: {\r\n    //       yAxisIndex: \"none\",\r\n    //     },\r\n    //     restore: {},\r\n    //     saveAsImage: {},\r\n    //   },\r\n    // },\r\n    axisPointer: {\r\n      link: { xAxisIndex: \"all\" },\r\n    },\r\n    dataZoom: [\r\n      {\r\n        type: \"slider\",\r\n        show: true,\r\n        realtime: true,\r\n        start: startIndex,\r\n        end: endIndex,\r\n        xAxisIndex: [0, 1],\r\n        top: \"95%\",\r\n      },\r\n      {\r\n        type: \"inside\",\r\n        realtime: true,\r\n        start: startIndex,\r\n        end: endIndex,\r\n        xAxisIndex: [0, 1],\r\n      },\r\n    ],\r\n    grid: [\r\n      { bottom: \"60%\", right: \"15%\" },\r\n      { top: \"57%\", right: \"15%\" },\r\n    ],\r\n    xAxis: [\r\n      {\r\n        name: \"date\",\r\n        nameLocation: \"middle\",\r\n        nameTextStyle: {\r\n          align: \"center\",\r\n          verticalAlign: \"top\",\r\n          padding: [6, 0, 0, 0],\r\n        },\r\n        gridIndex: 0,\r\n        type: \"category\",\r\n      },\r\n      {\r\n        name: \"date\",\r\n        nameLocation: \"middle\",\r\n        nameTextStyle: {\r\n          align: \"center\",\r\n          verticalAlign: \"top\",\r\n          padding: [6, 0, 0, 0],\r\n        },\r\n\r\n        gridIndex: 1,\r\n        type: \"category\",\r\n      },\r\n    ],\r\n    yAxis: [\r\n      {\r\n        name: \"Total Percentage (%)\",\r\n        gridIndex: 0,\r\n        nameLocation: \"middle\",\r\n        nameGap: 25,\r\n      },\r\n      {\r\n        name: \"Total Percentage (%)\",\r\n        gridIndex: 1,\r\n        nameLocation: \"middle\",\r\n        nameGap: 25,\r\n      },\r\n    ],\r\n    dataset: datasets,\r\n    series: [...mutationPlot, ...mutation3Plot],\r\n  };\r\n\r\n  const seeEvent = (e) => {\r\n    console.log(e);\r\n    setModalInfo((prev) => {\r\n      return {\r\n        ...prev,\r\n        date: e.data.date,\r\n        lookBack: e.data.lookBack,\r\n        primer: e.data.name,\r\n        country: null,\r\n      };\r\n    });\r\n    showModal();\r\n  };\r\n\r\n  function legendChange({ selected }) {\r\n    // TODO (Eb): Figure out how to handle legend selection\r\n    // const primers = [];\r\n    // for (const primer of Object.keys(selected)) {\r\n    //   if (selected[primer]) {\r\n    //     primers.push(primer);\r\n    //   }\r\n    // }\r\n    // setPrimers(primers);\r\n  }\r\n\r\n  const dataZoomChange = debounce((e) => {\r\n    let data = e;\r\n    if (e.batch !== undefined) {\r\n      data = e.batch[0];\r\n    }\r\n    const startIndex = Math.floor((dates.length * data.start) / 100);\r\n    const endIndex = Math.floor((dates.length * data.end) / 100);\r\n    const startStringDate = dates[startIndex] || dates[0];\r\n    const endStringDate = dates[endIndex] || dates[dates.length - 1];\r\n    let startDate = new Date(startStringDate);\r\n    let endDate = new Date(endStringDate);\r\n    startDate.setDate(startDate.getDate());\r\n    endDate.setDate(endDate.getDate());\r\n    setTimeFrameBrush([startDate, endDate]);\r\n  }, 800);\r\n\r\n  let onEvents = {\r\n    click: seeEvent,\r\n    legendselectchanged: legendChange,\r\n    dataZoom: dataZoomChange,\r\n  };\r\n  return (\r\n    <ReactEcharts\r\n      option={option}\r\n      style={{ height: \"475px\", width: \"100%\" }}\r\n      onEvents={onEvents}\r\n      notMerge={true}\r\n    />\r\n  );\r\n};\r\n\r\nexport default LineGraph;\r\n","import React from \"react\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\n\r\nconst BarGraph = ({\r\n  title,\r\n  title2,\r\n  data,\r\n  showAbsDiff,\r\n  subtitle = \"\",\r\n  subtitle2 = \"\",\r\n}) => {\r\n  function getBarLabel(data, idx, toPlot) {\r\n    const fontSize = 9;\r\n    return {\r\n      show: true,\r\n      position: \"insideTop\",\r\n      distance: 5,\r\n      align: \"center\",\r\n      verticalAlign: \"top\",\r\n      rotate: 0,\r\n      formatter: function (params) {\r\n        if (!showAbsDiff) {\r\n          return `${params.data[toPlot]}%`;\r\n        }\r\n        const primer = params.data.name;\r\n        const currVal = data[idx].filter((val) => val.name === primer)[0][\r\n          toPlot\r\n        ];\r\n        const prevVal = data[idx - 1].filter((val) => val.name === primer)[0][\r\n          toPlot\r\n        ];\r\n        const difference = (currVal - prevVal).toFixed(2);\r\n        let label = difference > 0 ? `{p|+` : difference < 0 ? `{n|` : \"{zero|\";\r\n        return `${label}${difference}%}`;\r\n      },\r\n      fontSize: fontSize,\r\n      backgroundColor: \"#232323\",\r\n      textBorderColor: \"transparent\",\r\n      padding: [4, 5, 2, 5],\r\n      rich: {\r\n        p: { color: \"#88ff88\", fontSize: fontSize },\r\n        n: { color: \"#ff8677\", fontSize: fontSize },\r\n        zero: { color: \"#eef\", fontSize: fontSize },\r\n      },\r\n    };\r\n  }\r\n\r\n  function buildDataset(datasets) {\r\n    const data = [];\r\n    for (const dataset of datasets) {\r\n      data.push({\r\n        dimensions: [\r\n          \"countries_considered\",\r\n          \"date\",\r\n          \"mutation3_abs\",\r\n          \"mutation3_pct\",\r\n          \"mutation_abs\",\r\n          \"mutation_pct\",\r\n          \"name\",\r\n          \"submission_count\",\r\n        ],\r\n        source: dataset,\r\n      });\r\n    }\r\n    return data;\r\n  }\r\n\r\n  function buildBarPlot(data, toPlot, xAxisIndex, yAxisIndex) {\r\n    const plots = [];\r\n    for (let i = 1; i < data.length; i++) {\r\n      plots.push({\r\n        name: (data[i][0] || {}).date,\r\n        type: \"bar\",\r\n        barMaxWidth: 40,\r\n        xAxisIndex: xAxisIndex,\r\n        yAxisIndex: yAxisIndex,\r\n        label: getBarLabel(data, i, toPlot),\r\n        encode: {\r\n          x: \"name\",\r\n          y: toPlot,\r\n        },\r\n        datasetIndex: i,\r\n      });\r\n    }\r\n    return plots;\r\n  }\r\n\r\n  const dataset = buildDataset(data);\r\n  const mutation = buildBarPlot(data, \"mutation_pct\", 0, 0);\r\n  const mutation3 = buildBarPlot(data, \"mutation3_pct\", 1, 1);\r\n  // console.log(\"dataset :>> \", dataset);\r\n  // console.log(\"mutation :>> \", mutation);\r\n  // console.log(\"mutation3 :>> \", mutation3);\r\n  const option = {\r\n    title: [\r\n      {\r\n        text: title,\r\n        subtext: subtitle,\r\n        left: \"center\",\r\n      },\r\n      {\r\n        text: title2,\r\n        subtext: subtitle2,\r\n        left: \"center\",\r\n        top: \"52%\",\r\n      },\r\n    ],\r\n    tooltip: {\r\n      trigger: \"axis\",\r\n      formatter: function (params) {\r\n        console.log(\"params :>> \", params);\r\n      },\r\n      axisPointer: {\r\n        type: \"shadow\",\r\n        animation: false,\r\n      },\r\n      position: function (pos, params, el, elRect, size) {\r\n        var obj = { top: 10 };\r\n        obj[[\"left\", \"right\"][+(pos[0] < size.viewSize[0] / 2)]] = 30;\r\n        return obj;\r\n      },\r\n    },\r\n    axisPointer: {\r\n      link: { xAxisIndex: \"all\" },\r\n    },\r\n    grid: [\r\n      { top: \"8%\", bottom: \"65%\" },\r\n      { top: \"57%\", bottom: \"20%\" },\r\n    ],\r\n    xAxis: [\r\n      {\r\n        name: \"primers\",\r\n        gridIndex: 0,\r\n        type: \"category\",\r\n        axisLabel: {\r\n          rotate: 45,\r\n          margin: 15,\r\n        },\r\n      },\r\n      {\r\n        name: \"primers\",\r\n        gridIndex: 1,\r\n        type: \"category\",\r\n        axisLabel: {\r\n          rotate: 45,\r\n          margin: 15,\r\n        },\r\n      },\r\n    ],\r\n    yAxis: [\r\n      {\r\n        name: \"Total Percentage (%)\",\r\n        gridIndex: 0,\r\n        nameLocation: \"middle\",\r\n        nameGap: 50,\r\n      },\r\n      {\r\n        name: \"Total Percentage (%)\",\r\n        gridIndex: 1,\r\n        nameLocation: \"middle\",\r\n        nameGap: 50,\r\n      },\r\n    ],\r\n    dataset: dataset,\r\n    series: [...mutation, ...mutation3],\r\n  };\r\n  const seeEvent = (e) => {\r\n    console.log(e);\r\n  };\r\n  let onEvents = {\r\n    click: seeEvent,\r\n  };\r\n  return (\r\n    <ReactEcharts\r\n      option={option}\r\n      style={{ height: \"600px\", width: \"100%\" }}\r\n      notMerge={true}\r\n      onEvents={onEvents}\r\n    />\r\n  );\r\n};\r\n\r\nexport default BarGraph;\r\n","import React from \"react\";\r\nimport { scaleLinear } from \"d3-scale\";\r\nimport { extent } from \"d3-array\";\r\nimport {\r\n  ZoomableGroup,\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n} from \"react-simple-maps\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nconst geoUrl =\r\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\r\n\r\nconst colorScale = scaleLinear().domain([0, 1]).range([\"#ffedea\", \"#ff5233\"]);\r\n\r\nconst PrimerMap = ({\r\n  title,\r\n  setTooltipContent,\r\n  data,\r\n  lookBack,\r\n  db,\r\n  timeFrameBrush,\r\n  setTimeFrameBrush,\r\n  showModal,\r\n  setModalInfo,\r\n  subtitle = \"\",\r\n}) => {\r\n  const [downloadData, setDownloadData] = React.useState([]);\r\n  const headers = [\r\n    {\r\n      label: \"Country\",\r\n      key: \"country\",\r\n    },\r\n    {\r\n      label: \"ISO A3\",\r\n      key: \"ISO_A3\",\r\n    },\r\n    {\r\n      label: \"Missed %\",\r\n      key: \"missed_pct\",\r\n    },\r\n    {\r\n      label: \"Absolute Misses\",\r\n      key: \"abs_miss\",\r\n    },\r\n    {\r\n      label: \"Submitted Virus\",\r\n      key: \"country_total\",\r\n    },\r\n\r\n    {\r\n      label: \"Start Date\",\r\n      key: \"startDate\",\r\n    },\r\n    {\r\n      label: \"End Date\",\r\n      key: \"endDate\",\r\n    },\r\n  ];\r\n\r\n  function handleClick(countryISO3, endDate, lookBack) {\r\n    const timeFrame = extent(\r\n      data.reduce((dates, data) => {\r\n        if (data.ISO_A3 === countryISO3) {\r\n          dates.push(new Date(data.date));\r\n          return dates;\r\n        } else {\r\n          return dates;\r\n        }\r\n      }, [])\r\n    );\r\n    showModal();\r\n    setModalInfo((prev) => {\r\n      return {\r\n        ...prev,\r\n        primer: null,\r\n        country: countryISO3,\r\n        lookBack: lookBack,\r\n        date: endDate,\r\n      };\r\n    });\r\n  }\r\n\r\n  function downloadDataClick(\r\n    countryMisses,\r\n    countryMissesPct,\r\n    startDate,\r\n    endDate,\r\n    data\r\n  ) {\r\n    return () => {\r\n      const toDownload = [];\r\n      for (const [countryISO, absMiss] of countryMisses) {\r\n        toDownload.push({\r\n          country: data.find((element) => element.ISO_A3 === countryISO)\r\n            .country_name,\r\n          ISO_A3: countryISO,\r\n          country_total: absMiss / (countryMissesPct.get(countryISO) / 100),\r\n          missed_pct: countryMissesPct.get(countryISO),\r\n          abs_miss: absMiss,\r\n          startDate: startDate,\r\n          endDate: endDate,\r\n        });\r\n      }\r\n      console.log(\"fired\", toDownload);\r\n      setDownloadData(toDownload);\r\n    };\r\n  }\r\n\r\n  function getCountryMissCounts(data, lookBack, date) {\r\n    /**\r\n     * @param {Array} data: contains a list of missed virus Objects to be visualized on the map.\r\n     * @returns {Map} Containing the number of misses per country.\r\n     */\r\n    let currData = data;\r\n    if (lookBack >= 0) {\r\n      const endDate = new Date(date);\r\n      const startDate = new Date(date);\r\n      startDate.setDate(startDate.getDate() - lookBack);\r\n      currData = data.filter((val) => {\r\n        const currDate = new Date(val.date);\r\n        return (\r\n          currDate.getTime() <= endDate.getTime() &&\r\n          currDate.getTime() >= startDate.getTime()\r\n        );\r\n      });\r\n    }\r\n    return currData.reduce((count, currData) => {\r\n      count.has(currData.ISO_A3)\r\n        ? count.set(currData.ISO_A3, count.get(currData.ISO_A3) + 1)\r\n        : count.set(currData.ISO_A3, 1);\r\n      return count;\r\n    }, new Map());\r\n  }\r\n\r\n  function getDates(timeFrameBrush, db) {\r\n    if (timeFrameBrush.length === 0) {\r\n      return [Object.keys(db)[0], Object.keys(db)[Object.keys(db).length - 1]];\r\n    } else {\r\n      let startDate = getDateString(timeFrameBrush[0]);\r\n      let endDate = getDateString(timeFrameBrush[1]);\r\n      if (endDate > Object.keys(db)[Object.keys(db).length - 1]) {\r\n        endDate = Object.keys(db)[Object.keys(db).length - 1];\r\n      }\r\n      if (startDate < Object.keys(db)[0]) {\r\n        startDate = Object.keys(db)[0];\r\n      }\r\n      return [startDate, endDate];\r\n    }\r\n  }\r\n\r\n  function getDateString(time) {\r\n    var date = new Date(time);\r\n    return date.toISOString().slice(0, 10);\r\n  }\r\n\r\n  const [startDate, endDate] = getDates(timeFrameBrush, db);\r\n  const countryMisses = getCountryMissCounts(data, lookBack, endDate);\r\n  const countryMissesPct = Array.from(countryMisses.keys()).reduce(\r\n    (accumulated, country) => {\r\n      accumulated.set(\r\n        country,\r\n        (\r\n          (countryMisses.get(country) / (db[endDate][country] || 100)) *\r\n          100\r\n        ).toFixed(2)\r\n      );\r\n      return accumulated;\r\n    },\r\n    new Map()\r\n  );\r\n\r\n  // console.log(\"countryMisses :>> \", countryMisses);\r\n  // console.log(\"startDate, endDate :>> \", startDate, endDate);\r\n  // console.log(\"countryMissesPct :>> \", countryMissesPct);\r\n  const maxPctMiss = Math.max(...Array.from(countryMissesPct.values()));\r\n  // console.log(\"maxPctMiss :>> \", maxPctMiss);\r\n  return (\r\n    <Container>\r\n      <h2 className=\"map-title\">{title}</h2>\r\n      <h3 className=\"map-title map-subtitle\">{subtitle}</h3>\r\n      <ComposableMap data-tip=\"\" projectionConfig={{ scale: 200 }}>\r\n        <ZoomableGroup>\r\n          <Geographies geography={geoUrl}>\r\n            {({ geographies }) =>\r\n              geographies.map((geo) => {\r\n                const missCount = countryMisses.get(geo.properties.ISO_A3) || 0;\r\n                const pctMiss =\r\n                  countryMissesPct.get(geo.properties.ISO_A3) || 0;\r\n                return (\r\n                  <Geography\r\n                    key={geo.rsmKey}\r\n                    geography={geo}\r\n                    onMouseEnter={() => {\r\n                      const { NAME } = geo.properties;\r\n                      setTooltipContent(\r\n                        `${NAME}: <br/> \r\n                          ${\r\n                            db[endDate][geo.properties.ISO_A3] || 0\r\n                          } submissions <br/>\r\n                          ${missCount} Absolute Misses.<br/> \r\n                          ${pctMiss}% Miss <br/>\r\n                          `\r\n                      );\r\n                    }}\r\n                    onMouseLeave={() => {\r\n                      setTooltipContent(\"\");\r\n                    }}\r\n                    onClick={() => {\r\n                      handleClick(geo.properties.ISO_A3, endDate, lookBack);\r\n                    }}\r\n                    style={{\r\n                      default: {\r\n                        fill:\r\n                          parseFloat(pctMiss) !== 0\r\n                            ? colorScale(pctMiss / maxPctMiss)\r\n                            : \"#949494\",\r\n                        outline: \"none\",\r\n                      },\r\n                      hover: {\r\n                        fill: \"#afca9d\",\r\n                        cursor: missCount ? \"pointer\" : \"auto\",\r\n                        outline: \"none\",\r\n                      },\r\n                    }}\r\n                  />\r\n                );\r\n              })\r\n            }\r\n          </Geographies>\r\n        </ZoomableGroup>\r\n      </ComposableMap>\r\n      <CSVLink\r\n        data={downloadData}\r\n        headers={headers}\r\n        filename={\"geo_misses.csv\"}\r\n        className=\"btn btn-dark\"\r\n        target=\"_blank\"\r\n        onClick={downloadDataClick(\r\n          countryMisses,\r\n          countryMissesPct,\r\n          startDate,\r\n          endDate,\r\n          data\r\n        )}\r\n      >\r\n        Download Map Data\r\n      </CSVLink>\r\n    </Container>\r\n  );\r\n};\r\nexport default React.memo(PrimerMap);\r\n","import React from \"react\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nimport PrimerMap from \"./primerMap\";\r\nimport \"./primerMap.css\";\r\n\r\nconst MapWithToolTip = ({\r\n  title,\r\n  data,\r\n  lookBack,\r\n  db,\r\n  timeFrameBrush,\r\n  setTimeFrameBrush,\r\n  showModal,\r\n  setModalInfo,\r\n  subtitle = \"\",\r\n}) => {\r\n  const [tooltipContent, setTooltipContent] = React.useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      <PrimerMap\r\n        title={title}\r\n        subtitle={subtitle}\r\n        setTooltipContent={setTooltipContent}\r\n        data={data}\r\n        lookBack={lookBack}\r\n        db={db}\r\n        timeFrameBrush={timeFrameBrush}\r\n        setTimeFrameBrush={setTimeFrameBrush}\r\n        showModal={showModal}\r\n        setModalInfo={setModalInfo}\r\n      />\r\n      <ReactTooltip html={true}>{tooltipContent}</ReactTooltip>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MapWithToolTip;\r\n","import React from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Collapse from \"react-bootstrap/Collapse\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./resultsPage.css\";\r\nimport ItemFilters from \"../../components/ItemFilter/itemFilters\";\r\nimport DataTable from \"../../components/tableDisplay/tableDisplay\";\r\nimport LineGraph from \"../../components/mutGraphs/lineGraph\";\r\nimport BarGraph from \"../../components/mutGraphs/barGraph\";\r\nimport MapWithToolTip from \"../../components/primerMap/mapWithToolTip\";\r\n\r\nimport worker from \"workerize-loader!./dataFilter\"; // eslint-disable-line import/no-webpack-loader-syntax\r\n\r\nimport { debounce, addName } from \"../../components/util\";\r\n\r\nconst InputData = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <Container>\r\n      <p className=\"no-data\">\r\n        Please make sure that you've uploaded some data first!\r\n      </p>\r\n      <Button onClick={() => history.push(\"/\")}>Upload Data</Button>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst ResultPage = ({ results }) => {\r\n  // Base results from blast\r\n  const result = React.useRef(JSON.parse(results));\r\n  const baseData = React.useRef(result.current[0] || {});\r\n  const instance = React.useRef(worker());\r\n  const baseTableData = React.useRef(makeTableData(baseData.current));\r\n  const baseGraphData = React.useRef(makeBaseGraphData(baseData.current));\r\n\r\n  const dbCountDaily = React.useRef(parseDb(result.current, 1));\r\n  const dbCountCum = React.useRef(parseDb(result.current, 0));\r\n  const dateRange = React.useRef(Object.keys(dbCountCum.current) || []);\r\n\r\n  const { display } = useParams();\r\n  const toDisplay = display.split(\"&\");\r\n\r\n  // Data to display\r\n  const [dbActual, setDbActual] = React.useState([]);\r\n  const [tableDataset, setTableDataset] = React.useState([]);\r\n  const [lineData, setLineData] = React.useState([]);\r\n  const [barData, setBarData] = React.useState([]);\r\n  const [combinedBase, setCombinedBase] = React.useState([]);\r\n  const [combinedName, setCombinedName] = React.useState([]);\r\n  const [lineCombinedData, setLineCombinedData] = React.useState([]);\r\n  const [tableCombined, setTableCombined] = React.useState([]);\r\n\r\n  // Filtering for table and graph data\r\n  const [miss, setMiss] = React.useState([]);\r\n  const [miss3, setMiss3] = React.useState([]);\r\n  const [match, setMatch] = React.useState([]);\r\n  const [timeFrameBrush, setTimeFrameBrush] = React.useState(\r\n    React.useMemo(() => [], [])\r\n  );\r\n  const [countries, setCountries] = React.useState(React.useMemo(() => [], []));\r\n  const [primers, setPrimers] = React.useState(React.useMemo(() => [], []));\r\n  const [pType, setPType] = React.useState([]);\r\n\r\n  // Filtering for graph data\r\n  const [useCum, setUseCum] = React.useState(false);\r\n  const [countryAsTotal, setCountryAsTotal] = React.useState(true);\r\n  const [lookBack, setLookBack] = React.useState(6);\r\n  const [isBar, setIsBar] = React.useState(true);\r\n  const [daysBetweenComparison, setDaysBetweenComparison] = React.useState(\r\n    lookBack\r\n  );\r\n  const [numberOfBars, setNumberOfBars] = React.useState(1);\r\n  const [showAbsDiff, setShowAbsDiff] = React.useState(true);\r\n\r\n  // Detail Modal\r\n  const [showModal, setShowModal] = React.useState(false);\r\n  const [modalInfo, setModalInfo] = React.useState({\r\n    date: null,\r\n    lookBack: null,\r\n    country: null,\r\n    primer: null,\r\n  });\r\n  const closeModalCb = () => setShowModal(false);\r\n  const showModalCb = React.useCallback(() => setShowModal(true), []);\r\n\r\n  // Misc items\r\n  const [isProcessing, setIsProcessing] = React.useState(false);\r\n  const [isProcessingGraphs, setIsProcessingGraphs] = React.useState(false);\r\n  const updateLineData = React.useCallback(\r\n    debounce(\r\n      ({\r\n        primers,\r\n        pType,\r\n        countries,\r\n        miss,\r\n        miss3,\r\n        match,\r\n        useCum,\r\n        countryAsTotal,\r\n        lookBack,\r\n      }) => {\r\n        let start = performance.now();\r\n        instance.current\r\n          .getTotalSubmission({\r\n            dbCum: dbCountCum.current,\r\n            dbDaily: dbCountDaily.current,\r\n            dateRange: dateRange.current,\r\n            countries: countries,\r\n            countryAsTotal: countryAsTotal,\r\n            useCum: useCum,\r\n            lookBack: lookBack,\r\n          })\r\n          .then((totalSubmission) => {\r\n            setDbActual(totalSubmission);\r\n            instance.current\r\n              .getLineGraphData({\r\n                baseData: baseGraphData.current,\r\n                dateRange: dateRange.current,\r\n                primers: primers,\r\n                pType: pType,\r\n                countries: countries,\r\n                miss: miss,\r\n                miss3: miss3,\r\n                match: match,\r\n                totalSubmission: totalSubmission,\r\n                useCum: useCum,\r\n                lookBack: lookBack,\r\n              })\r\n              .then((result) => {\r\n                console.log(\r\n                  `Time taken for line graph data: ${(\r\n                    performance.now() - start\r\n                  ).toFixed(5)} milliseconds`\r\n                );\r\n                setLineData(result);\r\n              });\r\n          });\r\n      },\r\n      500\r\n    ),\r\n    []\r\n  );\r\n  const updateBarData = React.useCallback(\r\n    debounce(\r\n      (lineData, timeFrameBrush, daysBetweenComparison, numberOfBars) => {\r\n        let start = performance.now();\r\n        instance.current\r\n          .makeBarData({\r\n            graphOverview: lineData,\r\n            dates: dateRange.current,\r\n            timeFrameBrush: timeFrameBrush,\r\n            daysBetweenComparison: daysBetweenComparison,\r\n            numberOfBars: numberOfBars,\r\n          })\r\n          .then((result) => {\r\n            setBarData(result);\r\n            console.log(\"barData :>> \", result);\r\n            console.log(\r\n              `Time taken for bar graph data: ${(\r\n                performance.now() - start\r\n              ).toFixed(5)} milliseconds`\r\n            );\r\n            setIsProcessingGraphs(false);\r\n          });\r\n      },\r\n      500\r\n    ),\r\n    []\r\n  );\r\n  const updateTableData = React.useCallback(\r\n    debounce(\r\n      (primers, pType, countries, miss, miss3, match, timeFrameBrush) => {\r\n        let start = performance.now();\r\n        instance.current\r\n          .filterTable({\r\n            baseTableData: baseTableData.current,\r\n            primers: primers,\r\n            pType: pType,\r\n            countries: countries,\r\n            miss: miss,\r\n            miss3: miss3,\r\n            match: match,\r\n            timeFrameBrush: timeFrameBrush,\r\n          })\r\n          .then((data) => {\r\n            setIsProcessing(false);\r\n            setTableDataset(data);\r\n            console.log(\r\n              `Time taken for filtering table data: ${(\r\n                performance.now() - start\r\n              ).toFixed(5)} milliseconds`\r\n            );\r\n          });\r\n      },\r\n      500\r\n    ),\r\n    []\r\n  );\r\n  const updateCombinedData = React.useCallback(\r\n    debounce(\r\n      (primers, pType, countries, miss, miss3, match, timeFrameBrush) => {\r\n        let start = performance.now();\r\n        instance.current\r\n          .filterTable({\r\n            baseTableData: baseTableData.current,\r\n            primers: primers,\r\n            pType: pType,\r\n            countries: countries,\r\n            miss: miss,\r\n            miss3: miss3,\r\n            match: match,\r\n            timeFrameBrush: timeFrameBrush,\r\n          })\r\n          .then((data) => {\r\n            const result = data.reduce((prevVal, currVal) => {\r\n              const temp = prevVal[currVal.primer] || [];\r\n              temp.push(currVal);\r\n              prevVal[currVal.primer] = temp;\r\n              return prevVal;\r\n            }, {});\r\n            instance.current\r\n              .makeIntersection(\r\n                JSON.parse(JSON.stringify(result)),\r\n                primers.length === 0 ? Object.keys(baseData) : primers\r\n              )\r\n              .then((result) => {\r\n                console.log(\r\n                  `Time taken for creating combined data: ${(\r\n                    performance.now() - start\r\n                  ).toFixed(5)} milliseconds`\r\n                );\r\n                setCombinedBase(result[0]);\r\n                setCombinedName(result[1]);\r\n              });\r\n          });\r\n      },\r\n      500\r\n    ),\r\n    []\r\n  );\r\n  const updateCombinedLine = React.useCallback(\r\n    debounce(\r\n      (\r\n        combinedBase,\r\n        combinedName,\r\n        pType,\r\n        countries,\r\n        miss,\r\n        miss3,\r\n        match,\r\n        dbActual,\r\n        useCum,\r\n        lookBack\r\n      ) => {\r\n        let start = performance.now();\r\n\r\n        instance.current\r\n          .getCombinedLineData(\r\n            makeBaseGraphData({ [combinedName]: combinedBase }),\r\n            [combinedName] || [],\r\n            dateRange.current,\r\n            pType,\r\n            countries,\r\n            miss,\r\n            miss3,\r\n            match,\r\n            dbActual,\r\n            useCum,\r\n            lookBack\r\n          )\r\n          .then((result) => {\r\n            setLineCombinedData(result);\r\n            console.log(\r\n              `Time taken for creating combined line data: ${(\r\n                performance.now() - start\r\n              ).toFixed(5)} milliseconds`\r\n            );\r\n          });\r\n      },\r\n      500\r\n    ),\r\n    []\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    setDaysBetweenComparison(lookBack === 0 ? 1 : lookBack);\r\n  }, [lookBack]);\r\n\r\n  const overviewColumns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Primer\",\r\n        accessor: \"primer\",\r\n        disableFilters: true,\r\n      },\r\n      {\r\n        Header: \"Accession ID\",\r\n        accessor: \"accession_id\",\r\n        disableFilters: true,\r\n      },\r\n      {\r\n        Header: \"Virus Name\",\r\n        accessor: \"virus_name\",\r\n        disableFilters: true,\r\n        width: 200,\r\n      },\r\n      {\r\n        Header: \"Diagram\",\r\n        accessor: \"match_diag\",\r\n        disableFilters: true,\r\n        width: 450,\r\n      },\r\n      {\r\n        Header: \"Primer Type\",\r\n        accessor: \"type\",\r\n        disableFilters: true,\r\n        width: 120,\r\n      },\r\n      {\r\n        Header: \"Homology %\",\r\n        accessor: \"match_pct\",\r\n      },\r\n      {\r\n        Header: \"Total Miss\",\r\n        accessor: \"misses\",\r\n      },\r\n      {\r\n        Header: \"Misses In 3' End\",\r\n        accessor: \"misses3\",\r\n      },\r\n      {\r\n        Header: \"Date Collected\",\r\n        accessor: \"date\",\r\n        disableFilters: true,\r\n        width: 140,\r\n        show: false,\r\n      },\r\n      {\r\n        Header: \"Country\",\r\n        accessor: \"country_name\",\r\n        disableFilters: true,\r\n      },\r\n    ],\r\n    []\r\n  );\r\n  const combinedCols = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Primer\",\r\n        accessor: \"primer\",\r\n        disableFilters: true,\r\n      },\r\n      {\r\n        Header: \"Accession ID\",\r\n        accessor: \"accession_id\",\r\n        disableFilters: true,\r\n      },\r\n      {\r\n        Header: \"Virus Name\",\r\n        accessor: \"virus_name\",\r\n        disableFilters: true,\r\n        width: 200,\r\n      },\r\n      {\r\n        Header: \"Date Collected\",\r\n        accessor: \"date\",\r\n        disableFilters: true,\r\n        width: 140,\r\n        show: false,\r\n      },\r\n      {\r\n        Header: \"Country\",\r\n        accessor: \"country_name\",\r\n        disableFilters: true,\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    setIsProcessing(true);\r\n    updateTableData(\r\n      primers,\r\n      pType,\r\n      countries,\r\n      miss,\r\n      miss3,\r\n      match,\r\n      timeFrameBrush\r\n    );\r\n  }, [\r\n    updateTableData,\r\n    primers,\r\n    pType,\r\n    countries,\r\n    miss,\r\n    miss3,\r\n    match,\r\n    timeFrameBrush,\r\n  ]);\r\n\r\n  React.useEffect(() => {\r\n    if (result.current.length !== 0) {\r\n      setIsProcessingGraphs(true);\r\n      updateLineData({\r\n        primers: primers,\r\n        pType: pType,\r\n        countries: countries,\r\n        miss: miss,\r\n        miss3: miss3,\r\n        match: match,\r\n        useCum: useCum,\r\n        countryAsTotal: countryAsTotal,\r\n        lookBack: lookBack,\r\n      });\r\n    }\r\n  }, [\r\n    updateLineData,\r\n    primers,\r\n    pType,\r\n    countries,\r\n    miss,\r\n    miss3,\r\n    match,\r\n    useCum,\r\n    countryAsTotal,\r\n    lookBack,\r\n  ]);\r\n\r\n  React.useEffect(() => {\r\n    if (result.current.length !== 0) {\r\n      updateBarData(\r\n        lineData,\r\n        timeFrameBrush,\r\n        daysBetweenComparison,\r\n        numberOfBars\r\n      );\r\n    }\r\n  }, [\r\n    updateBarData,\r\n    lineData,\r\n    timeFrameBrush,\r\n    daysBetweenComparison,\r\n    numberOfBars,\r\n  ]);\r\n\r\n  const modalData = React.useMemo(\r\n    () =>\r\n      showModal\r\n        ? tableDataset.filter((value) => {\r\n            let isSameDate = true;\r\n            let isWithinFrame = true;\r\n            let isPrimer = true;\r\n            let isCountry = true;\r\n            if (modalInfo[\"date\"] !== null) {\r\n              isSameDate = value.date === modalInfo[0];\r\n            }\r\n            if (\r\n              modalInfo[\"lookBack\"] !== null ||\r\n              modalInfo[\"lookBack\"] !== -1\r\n            ) {\r\n              const selectedDate = new Date(modalInfo[\"date\"]);\r\n              const startDate = new Date(selectedDate);\r\n              startDate.setDate(startDate.getDate() - modalInfo[\"lookBack\"]);\r\n              isWithinFrame =\r\n                value.date >= startDate.toISOString().slice(0, 10) &&\r\n                value.date <= modalInfo[\"date\"];\r\n            }\r\n            if (modalInfo[\"primer\"] !== null) {\r\n              isPrimer = value.primer === modalInfo[\"primer\"];\r\n            }\r\n            if (modalInfo[\"country\"] !== null) {\r\n              isCountry = value.ISO_A3 === modalInfo[\"country\"];\r\n            }\r\n            return (isSameDate || isWithinFrame) && isPrimer && isCountry;\r\n          })\r\n        : [],\r\n    [showModal, tableDataset, modalInfo]\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    if (baseTableData.current.length !== 0) {\r\n      updateCombinedData(primers, pType, countries, miss, miss3, match, []);\r\n    }\r\n  }, [updateCombinedData, primers, pType, countries, miss, miss3, match]);\r\n\r\n  React.useEffect(() => {\r\n    if (combinedBase.length !== 0) {\r\n      updateCombinedLine(\r\n        combinedBase,\r\n        combinedName,\r\n        pType,\r\n        countries,\r\n        miss,\r\n        miss3,\r\n        match,\r\n        dbActual,\r\n        useCum,\r\n        lookBack\r\n      );\r\n    }\r\n  }, [\r\n    updateCombinedLine,\r\n    combinedBase,\r\n    combinedName,\r\n    pType,\r\n    countries,\r\n    miss,\r\n    miss3,\r\n    match,\r\n    dbActual,\r\n    useCum,\r\n    lookBack,\r\n  ]);\r\n  React.useEffect(() => {\r\n    if (combinedBase.length !== 0) {\r\n      instance.current\r\n        .filterTable({\r\n          baseTableData: combinedBase,\r\n          timeFrameBrush: timeFrameBrush,\r\n        })\r\n        .then((result) => {\r\n          setTableCombined(result);\r\n        });\r\n    }\r\n  }, [combinedBase, timeFrameBrush]);\r\n\r\n  if (result.current.length !== 0) {\r\n    const endDate = new Date(\r\n      timeFrameBrush[1] || dateRange.current[dateRange.current.length - 1]\r\n    );\r\n    const startDate = new Date(\r\n      timeFrameBrush[1] || dateRange.current[dateRange.current.length - 1]\r\n    );\r\n    startDate.setDate(startDate.getDate() - lookBack);\r\n    return (\r\n      <div className=\"display-page\">\r\n        <Container>\r\n          <ItemFilters\r\n            baseData={baseData.current}\r\n            dateRange={dateRange.current}\r\n            timeFrameBrush={timeFrameBrush}\r\n            setTimeFrameBrush={setTimeFrameBrush}\r\n            lookBack={lookBack}\r\n            setLookBack={setLookBack}\r\n            useCum={useCum}\r\n            setUseCum={setUseCum}\r\n            miss={miss}\r\n            setMiss={setMiss}\r\n            miss3={miss3}\r\n            setMiss3={setMiss3}\r\n            match={match}\r\n            setMatch={setMatch}\r\n            countryAsTotal={countryAsTotal}\r\n            setCountryAsTotal={setCountryAsTotal}\r\n            setCountries={setCountries}\r\n            setPrimers={setPrimers}\r\n            setPType={setPType}\r\n            isProcessing={isProcessing || isProcessingGraphs}\r\n            setIsProcessing={setIsProcessing}\r\n            isBar={isBar}\r\n            setIsBar={setIsBar}\r\n            daysBetweenComparison={daysBetweenComparison}\r\n            setDaysBetweenComparison={setDaysBetweenComparison}\r\n            numberOfBars={numberOfBars}\r\n            setNumberOfBars={setNumberOfBars}\r\n            showAbsDiff={showAbsDiff}\r\n            setShowAbsDiff={setShowAbsDiff}\r\n          />\r\n          <DataTable\r\n            id=\"collapse-table\"\r\n            title={\"Overview of Missed Viruses\"}\r\n            data={tableDataset}\r\n            columns={overviewColumns}\r\n            isCombined={false}\r\n            isCollapsable={true}\r\n            className=\"mb-5\"\r\n          />\r\n          <Row className=\"mb-5\">\r\n            <Col\r\n              xs={12}\r\n              lg={\r\n                primers.length === 1 ||\r\n                Object.keys(baseData.current).length === 1\r\n                  ? 6\r\n                  : 12\r\n              }\r\n            >\r\n              <LineGraph\r\n                title={\"Genomes with mutation\"}\r\n                title2={\"Genomes with mutation in 3' end\"}\r\n                data={lineData}\r\n                primers={\r\n                  primers.length === 0 ? Object.keys(baseData.current) : primers\r\n                }\r\n                dates={dateRange.current}\r\n                setPrimers={setPrimers}\r\n                timeFrameBrush={timeFrameBrush}\r\n                setTimeFrameBrush={setTimeFrameBrush}\r\n                showModal={showModalCb}\r\n                setModalInfo={setModalInfo}\r\n              />\r\n            </Col>\r\n            {primers.length === 1 ||\r\n            Object.keys(baseData.current).length === 1 ? (\r\n              <Col xs={12} lg={6}>\r\n                <MapWithToolTip\r\n                  title={\"Map of Virus Missed\"}\r\n                  subtitle={\r\n                    !useCum\r\n                      ? `From ${startDate\r\n                          .toISOString()\r\n                          .slice(0, 10)} to ${endDate\r\n                          .toISOString()\r\n                          .slice(0, 10)}`\r\n                      : \"Cumulative\"\r\n                  }\r\n                  data={tableDataset}\r\n                  lookBack={!useCum ? lookBack : -1}\r\n                  db={dbActual}\r\n                  timeFrameBrush={timeFrameBrush}\r\n                  setTimeFrameBrush={setTimeFrameBrush}\r\n                  showModal={showModalCb}\r\n                  setModalInfo={setModalInfo}\r\n                />\r\n              </Col>\r\n            ) : null}\r\n          </Row>\r\n          {isBar ? (\r\n            <BarGraph\r\n              title={\"Genomes with mutation\"}\r\n              title2={\"Percent of genomes with mutation in 3' end\"}\r\n              data={barData}\r\n              showAbsDiff={showAbsDiff}\r\n              className=\"mb-5\"\r\n            />\r\n          ) : null}\r\n          <Collapse in={combinedBase.length !== 0}>\r\n            <div>\r\n              <Row className=\"mb-5\">\r\n                <Col xs={12} lg={6}>\r\n                  <LineGraph\r\n                    title={\"Genomes with mutation (Combined)\"}\r\n                    title2={\"Genomes with mutation in 3' end (Combined)\"}\r\n                    data={lineCombinedData}\r\n                    primers={\r\n                      primers.length === 0\r\n                        ? [Object.keys(baseData.current).join(\", \")]\r\n                        : [primers.join(\", \")]\r\n                    }\r\n                    dates={dateRange.current}\r\n                    setPrimers={setPrimers}\r\n                    timeFrameBrush={timeFrameBrush}\r\n                    setTimeFrameBrush={setTimeFrameBrush}\r\n                    showModal={showModalCb}\r\n                    setModalInfo={setModalInfo}\r\n                  />\r\n                </Col>\r\n                <Col xs={12} lg={6}>\r\n                  <MapWithToolTip\r\n                    title={\"Map of Virus Missed (Combined)\"}\r\n                    subtitle={\r\n                      !useCum\r\n                        ? `From ${startDate\r\n                            .toISOString()\r\n                            .slice(0, 10)} to ${endDate\r\n                            .toISOString()\r\n                            .slice(0, 10)}`\r\n                        : \"Cumulative\"\r\n                    }\r\n                    data={tableCombined}\r\n                    lookBack={!useCum ? lookBack : -1}\r\n                    db={dbActual}\r\n                    timeFrameBrush={timeFrameBrush}\r\n                    setTimeFrameBrush={setTimeFrameBrush}\r\n                    showModal={showModalCb}\r\n                    setModalInfo={setModalInfo}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <DataTable\r\n                title={\"Missed Viruses (Combined)\"}\r\n                data={tableCombined}\r\n                columns={combinedCols}\r\n                isCombined={true}\r\n                isCollapsable={true}\r\n                className=\"mb-5\"\r\n              />\r\n            </div>\r\n          </Collapse>\r\n        </Container>\r\n        <Modal\r\n          show={showModal}\r\n          onHide={closeModalCb}\r\n          dialogClassName=\"modal-90w\"\r\n          aria-labelledby=\"missed-details-modal\"\r\n        >\r\n          <Modal.Header closeButton id=\"missed-details-modal\">\r\n            <Modal.Title>Missed Viruses</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <DataTable\r\n              id=\"detail-table\"\r\n              title={\"\"}\r\n              data={modalData}\r\n              columns={overviewColumns}\r\n              isCombined={false}\r\n              isCollapsable={false}\r\n              className=\"mb-5\"\r\n            />\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={closeModalCb}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <InputData />;\r\n};\r\n\r\nexport default ResultPage;\r\n\r\nfunction parseDb(rawData, database) {\r\n  /**\r\n   * Retrieves that database count from [rawData]\r\n   * @param {Array} rawData: contains the primerDetails, databaseCounts (daily and cumulative), as well as primer filenames on server.\r\n   * @param {Number} database: 0 for cumulative, 1 for daily\r\n   * @returns {Object} The object mapping date -> countries -> submission count\r\n   */\r\n  if (rawData.length !== 0) {\r\n    return JSON.parse(JSON.stringify(rawData[1][database]));\r\n  }\r\n  return {};\r\n}\r\n\r\nfunction makeBaseGraphData(baseData) {\r\n  /**\r\n   * Converts the incoming {primerName: Missed virus} to\r\n   * {primerName: Date: Missed Virus}\r\n   *\r\n   * @param {Object} baseData: contains the primerDetails\r\n   * @returns {Object}: Mapping from {primerName: Date: Missed Virus}\r\n   */\r\n\r\n  const toReturn = {};\r\n  for (const primerName of Object.keys(baseData)) {\r\n    const result = {};\r\n    for (const details of baseData[primerName]) {\r\n      const toAdd = result[details.date] || [];\r\n      toAdd.push(addName(primerName)(details));\r\n      result[details.date] = toAdd;\r\n    }\r\n    toReturn[primerName] = result;\r\n  }\r\n  return toReturn;\r\n}\r\n\r\nfunction makeTableData(primerDetails) {\r\n  /**\r\n   * Converts all the incoming data into a table format for subsequent data structure to be built off\r\n   * @param {Object} primerDetails: contains the primerDetails\r\n   * @returns {Array} Each item in the array corresponds to a single entry that has been missed.\r\n   **/\r\n  let tableData = [];\r\n  if (Object.keys(primerDetails).length !== 0) {\r\n    const primerNames = Object.keys(primerDetails);\r\n    for (const primerName of primerNames) {\r\n      tableData.push(...primerDetails[primerName].map(addName(primerName)));\r\n    }\r\n  }\r\n  return tableData;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport ManualPage from \"./pages/manual/manualPage\";\r\nimport UploadPage from \"./pages/upload/uploadPage\";\r\nimport ResultPage from \"./pages/results/resultsPage\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [results, setResults] = useState(\"[]\");\r\n  const [error, setError] = useState(\"[]\");\r\n  return (\r\n    <Router basename=\"/METHODS/corona/gamma/primer/build\">\r\n      <Link to=\"/\" style={{ textDecoration: \"none\" }}>\r\n        <h1 className=\"title\">Primer Checker</h1>\r\n      </Link>\r\n\r\n      <Switch>\r\n        <Route exact={true} path=\"/\">\r\n          <UploadPage setResults={setResults} setError={setError} />\r\n        </Route>\r\n        <Route exact={true} path=\"/manualUpload\">\r\n          <ManualPage setResults={setResults} />\r\n        </Route>\r\n        <Route exact={true} path=\"/results/:display\">\r\n          <ResultPage results={results} />\r\n        </Route>\r\n        <Route path=\"/results\">\r\n          <ResultPage results={results} />\r\n        </Route>\r\n        <Route path=\"/error\" exact={true}>\r\n          <div>{ReactHtmlParser(error)}</div>\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <div>404: Page not found</div>\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}