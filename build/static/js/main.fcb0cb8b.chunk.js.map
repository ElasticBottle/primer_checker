{"version":3,"sources":["components/util.js","components/dropzone/dropzone.js","components/textArea/textArea.js","components/previewPane/previewPane.js","components/fileDisplay/fileDisplay.js","services/primerCheck.js","pages/upload/uploadPage.js","components/selectDropdown/selectDropdown.js","components/ItemFilter/minMaxFilter.js","components/ItemFilter/itemFilters.js","components/tableDisplay/filter.js","components/tableDisplay/tableDisplay.js","components/mutGraphs/lineGraph.js","components/mutGraphs/barGraph.js","components/primerMap/primerMap.js","pages/results/resultsPage.js","App.js","serviceWorker.js","index.js"],"names":["validateFormat","content","exec","DropZone","selectedFiles","setSelectedFiles","setErrorMessage","filesSelected","e","a","files","target","checkFiles","to_store","file","handleFile","concat","readFile","to_return","console","warn","message","reader","FileReader","log","Promise","resolve","reject","onload","event","result","name","onerror","abort","DOMException","readAsText","Form","Group","controlId","htmlFor","id","Container","className","onDragOver","preventDefault","onDragEnter","onDragLeave","onDrop","dataTransfer","type","onChange","multiple","TextArea","setTextFieldFasta","useState","errorMessage","textAreaValue","setTextAreaValue","inputSample","useEffect","Row","Col","Label","Button","variant","size","onClick","Control","as","placeholder","value","aria-describedby","Text","muted","split","map","i","key","Feedback","PreviewPane","show","handleClose","Modal","onHide","Header","closeButton","Title","Body","newline_matches","matchAll","length","slice","index","formatContent","Footer","FileDisplay","preview","setPreview","previewOpen","setPreviewOpen","removeFile","fileName","prevFiles","filter","fileType","substring","lastIndexOf","lg","md","invalid","openPreview","Math","floor","parseFloat","pow","toFixed","fileSize","to_send","data","axios","post","UploadPage","setResults","showSubmit","setShowSubmit","displayedFiles","setDisplayedFiles","validFiles","setValidFiles","textFieldFasta","fileErrorMessage","setFileErrorMessage","open","setOpen","isLoading","setIsLoading","history","useHistory","openId","filteredFiles","reduce","current","find","Collapse","in","noValidate","Fade","aria-controls","aria-expanded","setTimeout","primerCheckService","then","response","JSON","stringify","push","catch","disabled","Spinner","animation","role","aria-hidden","animatedComponents","makeAnimated","SelectDropdown","options","defaultValue","closeMenuOnSelect","components","isMulti","isSearchable","isClearable","NumberRangeFilter","minVal","maxVal","step","setFilter","React","useMemo","combinedList","Object","values","combined","currVal","min","max","forEach","row","debounceFilter","val","isMin","old","isInteger","parseInt","Switch","checked","ariaControls","ariaExpanded","ItemFilters","setSelectedPrimers","baseData","colNames","timeFrameBrush","setTimeFrameBrush","lookBack","setLookBack","useCum","setUseCum","miss","setMiss","miss3","setMiss3","match","setMatch","countryAsTotal","setCountryAsTotal","setCountries","primers","setPrimers","setPType","isProcessing","setIsProcessing","isBar","setIsBar","daysBetweenComparison","setDaysBetweenComparison","numberOfBars","setNumberOfBars","showAbsDiff","setShowAbsDiff","showDailyGraph","setShowDailyGraph","filterHeader","getLabel","accessor","getFilterName","selectionChange","setSelection","selection","toFilter","label","xs","sm","InputGroup","join","keys","Prepend","toString","unique","Set","countries","virus","has","country_name","add","ISO_A3","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","isHelpOn","count","setValue","useAsyncDebounce","undefined","column","TableDisplay","title","columns","isCombined","csv_headers","header","filterTypes","text","rows","filterValue","rowValue","String","toLowerCase","startsWith","defaultColumn","minWidth","width","maxWidth","useTable","initialState","pageIndex","useGlobalFilter","useSortBy","usePagination","useFlexLayout","useResizeColumns","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageSize","responsive","striped","bordered","hover","headerGroup","getHeaderGroupProps","headers","getHeaderProps","render","getSortByToggleProps","isSorted","isSortedDesc","fromCodePoint","canResize","getResizerProps","isResizing","getRowProps","cells","cell","display_str","getCellProps","idx","char","Number","aria-label","filename","DataTable","isCollapsable","showTable","setShowTable","LineGraph","title2","dates","subtitle","subtitle2","getMutationPlot","dataPlot","xIndex","yIndex","plots","hoverAnimation","xAxisIndex","yAxisIndex","encode","x","y","datasetIndex","getDateIndex","date","findIndex","toISOString","startIndex","endIndex","mutationPlot","mutation3Plot","datasets","dataset","dimensions","source","buildDataSet","option","subtext","left","top","tooltip","trigger","axisPointer","backgroundColor","formatter","params","baseDetails","submissionCount","submission_count","mutation_abs","mutation3_abs","mutation_pct","mutation3_pct","position","pos","el","elRect","obj","viewSize","legend","orient","right","link","dataZoom","realtime","start","end","grid","bottom","xAxis","gridIndex","yAxis","nameLocation","nameGap","series","onEvents","click","legendselectchanged","selected","func","wait","immediate","timeout","context","this","args","arguments","later","apply","callNow","clearTimeout","debounce","batch","startStringDate","endStringDate","startDate","Date","endDate","setDate","getDate","style","height","notMerge","BarGraph","getBarLabel","toPlot","distance","align","verticalAlign","rotate","primer","difference","fontSize","textBorderColor","padding","rich","p","color","n","buildBarPlot","barMaxWidth","buildDataset","mutation","mutation3","colorScale","scaleLinear","domain","range","PrimerMap","setTooltipContent","db","downloadData","setDownloadData","getDateString","time","getDates","countryMisses","currData","currDate","getTime","set","get","Map","getCountryMissCounts","countryMissesPct","Array","from","accumulated","country","maxPctMiss","data-tip","projectionConfig","scale","geography","geographies","geo","missCount","properties","pctMiss","rsmKey","onMouseEnter","NAME","onMouseLeave","countryISO3","timeFrame","extent","nextDay","prevDay","setHours","getHours","handleClick","default","fill","outline","cursor","toDownload","countryISO","absMiss","element","country_total","missed_pct","abs_miss","downloadDataClick","MapWithToolTip","tooltipContent","html","prototype","sameDay","d","getFullYear","getMonth","InputData","ResultPage","results","useRef","parse","baseTableData","primerDetails","tableData","primerNames","primerName","addName","makeTableData","dbCountDaily","parseDb","dbCountCum","dateRange","useParams","display","pType","overviewColumns","disableFilters","combinedCols","dbActual","dbCount","dateWindowCum","now","dateCumCount","total","dateStr","addObject","getRangeDbCount","graphBase","dataFilter","graphOverview","makeOverview","barData","dateDetails","primerMutations","details","makeBarData","combinedBase","names","intersection","itemList","findIntersection","findListIntersection","makeIntersection","graphCombined","tableCombined","isWithinTimeFrame","isPrimer","isPType","isCountry","isMiss","isMiss3","isMatch","includes","misses","misses3","match_pct","rawData","database","list1","list2","intersect","item","obj1","obj2","initialSum","getCountriesTotal","prevVal","isCountryAsTotal","overviewData","minDate","mutationAbs","primersDate","mutation3Abs","databaseTotal","countries_considered","App","basename","to","textDecoration","exact","path","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.fcb0cb8b.chunk.js","sourcesContent":["export const validateFormat = (content) => {\r\n  let format = /^>fwd[\\s\\S]{2}[ACGTacgt]+[\\s\\S]{1,2}>rev[\\s\\S]{1,2}[ACGTacgt]+[\\s\\S]{1,2}>prb[\\s\\S]{1,2}[ACGTacgt]+[\\s\\S]{1,2}$/;\r\n  let correct_format = format.exec(content);\r\n  return correct_format !== null;\r\n};\r\n\r\nexport const getRandomInt = (min, max) => {\r\n  const lower_r = Math.floor(min);\r\n  const upper_r = Math.floor(max);\r\n  return Math.floor(lower_r + Math.random() * (upper_r - lower_r));\r\n};\r\n\r\n// credit: https://davidwalsh.name/function-debounce\r\n// Returns a function, that, as long as it continues to be invoked, will not\r\n// be triggered. The function will be called after it stops being called for\r\n// N milliseconds. If `immediate` is passed, trigger the function on the\r\n// leading edge, instead of the trailing.\r\nexport function debounce(func, wait, immediate) {\r\n  let timeout;\r\n  return function () {\r\n    let context = this,\r\n      args = arguments;\r\n    let later = function () {\r\n      timeout = null;\r\n      if (!immediate) func.apply(context, args);\r\n    };\r\n    let callNow = immediate && !timeout;\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(later, wait);\r\n    if (callNow) func.apply(context, args);\r\n  };\r\n}\r\n","import React from 'react';\r\nimport './dropzone.css';\r\nimport { validateFormat } from '../util';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\n\r\nconst DropZone = ({ selectedFiles, setSelectedFiles, setErrorMessage }) => {\r\n\r\n    const dragOver = (e) => {\r\n        e.preventDefault();\r\n    }\r\n    const dragEnter = (e) => {\r\n        e.preventDefault();\r\n    }\r\n    const dragLeave = (e) => {\r\n        e.preventDefault();\r\n    }\r\n    const fileDrop = (e) => {\r\n        e.preventDefault();\r\n        const data = e.dataTransfer\r\n        const files = data.files;\r\n        checkFiles(files)\r\n    }\r\n\r\n    const filesSelected = async (e) => {\r\n        const files = e.target.files;\r\n        await checkFiles(files)\r\n    }\r\n    const checkFiles = async (files) => {\r\n        let to_store = []\r\n        for (let file of files) {\r\n            to_store = to_store.concat(await handleFile(file))\r\n        }\r\n        setSelectedFiles(selectedFiles.concat(...to_store))\r\n    }\r\n    const handleFile = async (file) => {\r\n        try {\r\n            const to_return = await readFile(file)\r\n            return to_return\r\n        } catch (e) {\r\n            console.warn(e.message)\r\n        }\r\n    }\r\n\r\n    const readFile = (file) => {\r\n        const reader = new FileReader();\r\n        console.log(file)\r\n        return new Promise((resolve, reject) => {\r\n            reader.onload = function (event) {\r\n                if (validateFormat(event.target.result)) {\r\n                    file['invalid'] = false\r\n                    file['content'] = event.target.result\r\n                    file['id'] = file.name\r\n                } else {\r\n                    console.log('file loaded but invalid format');\r\n                    setErrorMessage('File not a recognized format. Please check')\r\n                    file['invalid'] = true\r\n                }\r\n                resolve(file);\r\n            }\r\n            reader.onerror = function () {\r\n                reader.abort()\r\n                reject(new DOMException(\"Problem parsing input file.\"));\r\n            }\r\n\r\n            reader.readAsText(file, \"UTF-8\");\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Form.Group controlId='fasta-sequence'>\r\n            <label htmlFor='fasta-input' id='fasta-input-label'>\r\n                <Container className='drop-container' onDragOver={dragOver}\r\n                    onDragEnter={dragEnter}\r\n                    onDragLeave={dragLeave}\r\n                    onDrop={fileDrop}>\r\n                    <div className=\"drop-message\">\r\n                        <div className=\"upload-icon\"></div>\r\n                        Drag & Drop files here or click to upload\r\n                    </div>\r\n                    <input\r\n                        className=\"file-input\"\r\n                        id=\"fasta-input\"\r\n                        type=\"file\"\r\n                        onChange={filesSelected}\r\n                        multiple\r\n                    />\r\n                </Container>\r\n            </label>\r\n        </Form.Group>\r\n    );\r\n}\r\n\r\nexport default DropZone;","\r\nimport React, { useState, useEffect } from 'react'\r\nimport './textArea.css'\r\nimport Form from 'react-bootstrap/Form'\r\nimport { validateFormat } from '../util'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nconst TextArea = ({ setTextFieldFasta }) => {\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n    const [textAreaValue, setTextAreaValue] = useState('')\r\n    // const [fileAttached, setFileAttached] = useState(false)\r\n    const inputSample = `>fwd\\nGTGAAATGGTCATGTGTGGCGG\\n>rev\\nTATGCTAATAGTGTTTTTAACATTTG\\n>prb\\nCAGGTGGAACCTCATCAGGAGATGC`\r\n\r\n    useEffect(() => {\r\n        if (validateFormat(textAreaValue)) {\r\n            console.log('sequence oKAY!', textAreaValue);\r\n            // const lastMod = Date.now()\r\n            // const tempDate = new Date(lastMod)\r\n            // const file = {\r\n            //     \"content\": textAreaValue,\r\n            //     \"invalid\": false,\r\n            //     \"lastModified\": lastMod,\r\n            //     \"lastModifiedDate\": tempDate,\r\n            //     \"name\": `fasta${lastMod}`,\r\n            //     'size': getRandomInt(80, 90)\r\n            // }\r\n            setTextFieldFasta([{\r\n                \"invalid\": false,\r\n                \"content\": textAreaValue,\r\n                \"id\": \"text_input_fasta\",\r\n            }])\r\n        } else {\r\n            console.log('Nope');\r\n            setTextFieldFasta([])\r\n            setErrorMessage('Sequence not recognized! Please check.')\r\n        }\r\n    }, [textAreaValue, setTextFieldFasta])\r\n\r\n    const handleChange = (e) => {\r\n        const content = e.target.value\r\n        setTextAreaValue(content)\r\n    }\r\n    const enterSample = () => {\r\n        setTextAreaValue(inputSample)\r\n    }\r\n    return (\r\n        <Form.Group controlId='fasta-sequence'>\r\n            <Row className='fasta-input-header'>\r\n                <Col>\r\n                    <Form.Label className='fasta-input-title'>\r\n                        Fasta Sequence\r\n                    </Form.Label>\r\n                </Col>\r\n                <Col className=\"sample-fasta\">\r\n                    <Button variant='secondary' size='sm' onClick={enterSample}>Sample Input</Button>\r\n                </Col>\r\n            </Row>\r\n            <Form.Control\r\n                as='textarea'\r\n                placeholder=\"Input Fasta Seq here.\"\r\n                onChange={handleChange}\r\n                type=\"text\"\r\n                value={textAreaValue}\r\n                className='mx-sm-lg-auto'\r\n                aria-describedby=\"fastaSequenceHelpBlock\"\r\n            />\r\n            <Form.Text id=\"fastaSequenceHelpBlock\" muted>\r\n                Format for the primer sequence should be as follows:{<br />}\r\n                <strong>\r\n                    {inputSample\r\n                        .split('\\n')\r\n                        .map((value, i) => <p key={i}>{value}</p>)}\r\n                </strong>\r\n            </Form.Text>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n                {errorMessage}\r\n            </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n    )\r\n}\r\n\r\nexport default TextArea","import './previewPane.css'\r\nimport React from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\nconst PreviewPane = ({ show, handleClose, content }) => {\r\n    const formatContent = (content) => {\r\n        const regex = /\\s+/g;\r\n        const newline_matches = [...content.matchAll(regex)]\r\n        let result = []\r\n        for (let i = 0; i < newline_matches.length; i++) {\r\n            if (i === 0) {\r\n                result = result.concat(content.slice(0, newline_matches[0].index))\r\n            }\r\n            else {\r\n\r\n                result = result.concat(content.slice(newline_matches[i - 1].index + 1, newline_matches[i].index))\r\n            }\r\n        }\r\n        return result\r\n    }\r\n    return (\r\n        <Modal show={show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Fasta Primer Preview</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>{formatContent(content).map((value, index) => <p key={index}>{value}</p>)}</Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"primary\" onClick={handleClose}>\r\n                    Close\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>)\r\n}\r\n\r\nexport default PreviewPane","import './fileDisplay.css';\r\nimport React, { useState } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport PreviewPane from '../previewPane/previewPane';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst FileDisplay = ({ file, errorMessage, setSelectedFiles }) => {\r\n    const [preview, setPreview] = useState('')\r\n    const [previewOpen, setPreviewOpen] = useState(false)\r\n    const fileSize = (size) => {\r\n        if (size === 0) return '0 Bytes';\r\n        const k = 1024;\r\n        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n        const i = Math.floor(Math.log(size) / Math.log(k));\r\n        return parseFloat((size / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n    }\r\n\r\n    const fileType = (fileName) => {\r\n        const fileType = fileName.substring(fileName.lastIndexOf('.') + 1, fileName.length)\r\n        if (fileType.length === fileName.length) {\r\n            return 'Fasta'\r\n        }\r\n        else {\r\n            return fileType\r\n        }\r\n    }\r\n\r\n    const removeFile = (fileName) => {\r\n        setSelectedFiles(prevFiles => prevFiles.filter(file => file.name !== fileName))\r\n    }\r\n    const openPreview = (file) => {\r\n        setPreview(file.content)\r\n        setPreviewOpen(true)\r\n    }\r\n\r\n    return <Container className=\"file-status-bar\">\r\n        <Row>\r\n            <div className=\"file-type-logo\"></div>\r\n            <div className=\"file-type\">{fileType(file.name)}</div>\r\n            <Col lg={5} md={12} className='file-info'>\r\n                <div className={`file-name ${file.invalid ? 'file-error' : ''}`} onClick={file.invalid ? () => removeFile(file.name) : () => openPreview(file)}>{file.name}</div>\r\n                <div className=\"file-size\">({fileSize(file.size)})</div>\r\n            </Col>\r\n            <Col lg={4} md={8} className='file-error-message'>\r\n                {file.invalid\r\n                    ? <div className='file-error-message-text'>({errorMessage})</div>\r\n                    : null}\r\n            </Col>\r\n            <Col lg={2} md={2} className=\"file-remove\" >\r\n                <Button onClick={() => removeFile(file.name)} variant='danger' size='sm'>Remove</Button>\r\n            </Col>\r\n        </Row>\r\n        <PreviewPane show={previewOpen} handleClose={() => setPreviewOpen(false)} content={preview} />\r\n    </Container >\r\n}\r\n\r\nexport default FileDisplay;","import axios from \"axios\";\r\n\r\n// const baseURL =\r\n//   \"https://mendel2.bii.a-star.edu.sg/METHODS/corona/gamma/cgi-bin/cgi_scripts/primerMVP.py\";\r\nconst baseURL = \"http://localhost:3001\";\r\n\r\nconst checkFile = (file) => {\r\n  return axios.post(`${baseURL}`, file);\r\n};\r\n\r\nconst checkFiles = (files) => {\r\n  const to_send = { data: files };\r\n  // return axios.post(`${baseURL}`, to_send);\r\n  return axios.post(`${baseURL}/check_primers`, to_send);\r\n};\r\n\r\nexport default { checkFile, checkFiles };\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Collapse from \"react-bootstrap/Collapse\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport Fade from \"react-bootstrap/Fade\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport DropZone from \"../../components/dropzone/dropzone\";\r\nimport TextArea from \"../../components/textArea/textArea\";\r\nimport FileDisplay from \"../../components/fileDisplay/fileDisplay\";\r\nimport primerCheckService from \"../..//services/primerCheck\";\r\nimport \"./uploadPage.css\";\r\n\r\nconst UploadPage = ({ setResults }) => {\r\n  const [showSubmit, setShowSubmit] = useState(false);\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n  const [displayedFiles, setDisplayedFiles] = useState([]);\r\n  const [validFiles, setValidFiles] = useState([]);\r\n  const [textFieldFasta, setTextFieldFasta] = useState([]);\r\n  const [fileErrorMessage, setFileErrorMessage] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [open, setOpen] = useState(true);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const openId = \"open-containers\";\r\n\r\n  useEffect(() => {\r\n    const filteredFiles = selectedFiles.reduce((files, current) => {\r\n      const match = files.find((file) => file.name === current.name);\r\n      if (match) {\r\n        return files;\r\n      } else {\r\n        return files.concat(current);\r\n      }\r\n    }, []);\r\n    setDisplayedFiles([...filteredFiles]);\r\n  }, [selectedFiles]);\r\n\r\n  useEffect(() => {\r\n    const filteredFiles = displayedFiles.reduce((files, current) => {\r\n      return current.invalid ? files : files.concat(current);\r\n    }, []);\r\n    setValidFiles(filteredFiles);\r\n  }, [displayedFiles]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      (validFiles.length === displayedFiles.length &&\r\n        validFiles.length !== 0 &&\r\n        textFieldFasta.length === 0) ||\r\n      (textFieldFasta.length !== 0 && validFiles.length === 0)\r\n    ) {\r\n      console.log(validFiles);\r\n      setErrorMessage(\"\");\r\n      return setShowSubmit(true);\r\n    } else if (textFieldFasta.length !== 0 && validFiles.length !== 0) {\r\n      setShowSubmit(false);\r\n      setErrorMessage(\r\n        \"Either upload a single sequence through input or select files to upload! Not Both!\"\r\n      );\r\n    }\r\n    setShowSubmit(false);\r\n  }, [validFiles, displayedFiles, textFieldFasta]);\r\n\r\n  const resetStates = () => {\r\n    setShowSubmit(false);\r\n    setSelectedFiles([]);\r\n    setTextFieldFasta([]);\r\n    setFileErrorMessage(\"\");\r\n    setErrorMessage(\"\");\r\n  };\r\n  const submitForm = () => {\r\n    console.log(validFiles, textFieldFasta);\r\n    setOpen(!open);\r\n    setIsLoading(true);\r\n    setTimeout(() => {\r\n      primerCheckService\r\n        .checkFiles(validFiles.length === 0 ? textFieldFasta : validFiles)\r\n        .then((response) => {\r\n          resetStates();\r\n          setIsLoading(false);\r\n          console.log(\"response is\", response);\r\n          setResults(JSON.stringify(response.data));\r\n          history.push(\"/results/Overview\");\r\n        })\r\n        .catch((e) => console.log(e));\r\n    }, 500);\r\n  };\r\n  return (\r\n    <div>\r\n      <Collapse id={openId} in={open}>\r\n        <div className=\"collapse-container\">\r\n          <Container>\r\n            <Form noValidate>\r\n              <TextArea setTextFieldFasta={setTextFieldFasta} />\r\n              <p className=\"alternative-upload\">OR</p>\r\n              <DropZone\r\n                selectedFiles={selectedFiles}\r\n                setSelectedFiles={setSelectedFiles}\r\n                setErrorMessage={setFileErrorMessage}\r\n              />\r\n            </Form>\r\n            <Container className=\"file-display-container\">\r\n              {displayedFiles.map((file, index) => (\r\n                <FileDisplay\r\n                  file={file}\r\n                  errorMessage={fileErrorMessage}\r\n                  setSelectedFiles={setSelectedFiles}\r\n                  key={index}\r\n                />\r\n              ))}\r\n            </Container>\r\n          </Container>\r\n        </div>\r\n      </Collapse>\r\n      <Container>\r\n        <Row className=\"upload-error-message\">{errorMessage}</Row>\r\n        {showSubmit ? (\r\n          <Fade in={open}>\r\n            <Button\r\n              id={openId}\r\n              aria-controls={openId}\r\n              aria-expanded={open}\r\n              onClick={submitForm}\r\n              disabled={isLoading}\r\n            >\r\n              {isLoading ? (\r\n                <Spinner\r\n                  as=\"span\"\r\n                  className=\"loader\"\r\n                  animation=\"border\"\r\n                  size=\"sm\"\r\n                  role=\"status\"\r\n                  aria-hidden=\"true\"\r\n                />\r\n              ) : null}\r\n              {isLoading ? \"Loading...\" : \"Submit\"}\r\n            </Button>\r\n          </Fade>\r\n        ) : null}\r\n        {isLoading ? (\r\n          <Fade in={!open}>\r\n            <Container className=\"loading-container\">\r\n              <Spinner\r\n                id={openId}\r\n                as=\"span\"\r\n                animation=\"border\"\r\n                role=\"status\"\r\n                variant=\"dark\"\r\n              />\r\n            </Container>\r\n          </Fade>\r\n        ) : null}\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadPage;\r\n","import React from \"react\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\n\r\nconst animatedComponents = makeAnimated();\r\n\r\nfunction SelectDropdown({\r\n  onChange,\r\n  options,\r\n  placeholder,\r\n  // value = [],\r\n  isLoading = false,\r\n  defaultValue = [],\r\n}) {\r\n  /**\r\n   * @param {function} onChange: Takes in Array(Objects) of selected objects, null if nothing is selected\r\n   * @param {Object} Options: Select Options. Should contain a \"value\" and \"label\" key\r\n   * @param {Array} defaultValue: The list of default options\r\n   * @param {bool} isLoading: Indicates if loading animation shows or not\r\n   * @param {string} placeholder: Hint text when there is nothing selected\r\n   * @param {Array} value: list of items that is selected\r\n   */\r\n  return (\r\n    <Select\r\n      closeMenuOnSelect={false}\r\n      components={animatedComponents}\r\n      defaultValue={defaultValue}\r\n      // value={value}\r\n      isMulti\r\n      isSearchable\r\n      isClearable\r\n      isLoading={isLoading}\r\n      placeholder={placeholder}\r\n      onChange={onChange}\r\n      options={options}\r\n    />\r\n  );\r\n}\r\nexport default SelectDropdown;\r\n","import React from \"react\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nfunction NumberRangeFilter({\r\n  data,\r\n  id,\r\n  value,\r\n  minVal,\r\n  maxVal,\r\n  step,\r\n  setFilter,\r\n}) {\r\n  const [min, max] = React.useMemo(() => {\r\n    const primerDetails = Object.values(data);\r\n    const combinedList = primerDetails.reduce((combined, currVal) => {\r\n      combined.push(...currVal);\r\n      return combined;\r\n    }, []);\r\n    let min = combinedList.length ? combinedList[0][id] : 0;\r\n    let max = combinedList.length ? combinedList[0][id] : 0;\r\n    combinedList.forEach((row) => {\r\n      min = Math.min(row[id], min);\r\n      max = Math.max(row[id], max);\r\n    });\r\n    return [min, max];\r\n  }, [data, id]);\r\n\r\n  const debounceFilter = (val, isMin) => {\r\n    isMin\r\n      ? setFilter((old = []) => [val, old[1]])\r\n      : setFilter((old = []) => [old[0], val]);\r\n  };\r\n\r\n  return (\r\n    <Form className=\"filter\">\r\n      <Form.Row>\r\n        <Col>\r\n          <Form.Control\r\n            as=\"input\"\r\n            value={value[0] || \"\"}\r\n            type=\"number\"\r\n            onChange={(e) => {\r\n              const val = step.isInteger\r\n                ? parseInt(e.target.value, 10) || 0\r\n                : parseFloat(e.target.value || 0);\r\n              debounceFilter(val, true);\r\n            }}\r\n            placeholder={`Min (${min})`}\r\n            size=\"sm\"\r\n            min={minVal}\r\n            max={maxVal}\r\n            step={step}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <Form.Control\r\n            value={value[1] || \"\"}\r\n            type=\"number\"\r\n            onChange={(e) => {\r\n              const val = step.isInteger\r\n                ? parseInt(e.target.value, 10) || 0\r\n                : parseFloat(e.target.value || 0);\r\n              debounceFilter(val, false);\r\n            }}\r\n            placeholder={`Max (${max})`}\r\n            size=\"sm\"\r\n            min={minVal}\r\n            max={maxVal}\r\n            step={step}\r\n          />\r\n        </Col>\r\n      </Form.Row>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default NumberRangeFilter;\r\n","import React from \"react\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Collapse from \"react-bootstrap/Collapse\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport DateRangePicker from \"@wojtekmaj/react-daterange-picker\";\r\nimport SelectDropdown from \"../selectDropdown/selectDropdown\";\r\nimport NumberRangeFilter from \"./minMaxFilter\";\r\n\r\nimport \"./itemFilter.css\";\r\n\r\nconst Switch = ({\r\n  id,\r\n  className,\r\n  checked,\r\n  onChange,\r\n  ariaControls = \"\",\r\n  ariaExpanded = \"\",\r\n}) => {\r\n  return (\r\n    <label\r\n      id={id}\r\n      className={`switch ${className}`}\r\n      aria-controls={ariaControls}\r\n      aria-expanded={ariaExpanded}\r\n    >\r\n      <input type=\"checkbox\" checked={checked} onChange={onChange} />\r\n      <span className=\"slider round\"></span>\r\n    </label>\r\n  );\r\n};\r\n\r\nfunction getFilterName(colNames) {\r\n  return (id) => {\r\n    const result = colNames.filter((val) => val.accessor === id);\r\n    return result[0].Header;\r\n  };\r\n}\r\nconst ItemFilters = ({\r\n  baseData,\r\n  colNames,\r\n  timeFrameBrush,\r\n  setTimeFrameBrush,\r\n  lookBack,\r\n  setLookBack,\r\n  useCum,\r\n  setUseCum,\r\n  miss,\r\n  setMiss,\r\n  miss3,\r\n  setMiss3,\r\n  match,\r\n  setMatch,\r\n  countryAsTotal,\r\n  setCountryAsTotal,\r\n  setCountries,\r\n  primers,\r\n  setPrimers,\r\n  setPType,\r\n  isProcessing,\r\n  setIsProcessing,\r\n  isBar,\r\n  setIsBar,\r\n  daysBetweenComparison,\r\n  setDaysBetweenComparison,\r\n  numberOfBars,\r\n  setNumberOfBars,\r\n  showAbsDiff,\r\n  setShowAbsDiff,\r\n  showDailyGraph,\r\n  setShowDailyGraph,\r\n}) => {\r\n  const history = useHistory();\r\n  const filterHeader = {\r\n    primers: \"primer\",\r\n    type: \"type\",\r\n    miss: \"misses\",\r\n    miss3: \"misses3\",\r\n    match: \"match_pct\",\r\n    country: \"country_name\",\r\n    iso: \"ISO_A3\",\r\n  };\r\n  const getLabel = getFilterName(colNames);\r\n\r\n  const dateChange = (e) => {\r\n    console.log(\"e :>> \", e);\r\n    setTimeFrameBrush(e || []);\r\n  };\r\n\r\n  function primerChange(setSelectedPrimers) {\r\n    return (selection) => {\r\n      setIsProcessing(true);\r\n      const toFilter = selection || [];\r\n      if (toFilter.length === 0) {\r\n        setSelectedPrimers(toFilter);\r\n        history.push(`/results/Overview`);\r\n      } else {\r\n        const selection = toFilter.map((val) => val.value);\r\n        setSelectedPrimers(selection);\r\n        history.push(`/results/${selection.join(\"&\")}`);\r\n      }\r\n    };\r\n  }\r\n\r\n  function selectionChange(setSelection) {\r\n    return (selection) => {\r\n      setIsProcessing(true);\r\n      const toFilter = selection || [];\r\n      console.log(selection);\r\n      if (toFilter.length === 0) {\r\n        setSelection(toFilter);\r\n      } else {\r\n        const selection = toFilter.map((val) => {\r\n          if (val.value === val.label) return val.value;\r\n          return val;\r\n        });\r\n        console.log(selection);\r\n        setSelection(selection);\r\n      }\r\n    };\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col xs={12} lg={7} className=\"mb-3\">\r\n          <Row>\r\n            <Col sm={12} lg={2} className=\"mr-0 pr-lg-0\">\r\n              <InputGroup.Text>\r\n                {`${getLabel(filterHeader.primers)}`}\r\n              </InputGroup.Text>\r\n            </Col>\r\n            <Col sm={12} lg={10} className=\"pl-lg-0\">\r\n              <SelectDropdown\r\n                value={primers}\r\n                onChange={primerChange(setPrimers)}\r\n                options={React.useMemo(() => {\r\n                  return Object.keys(baseData).map((val) => {\r\n                    return { label: val, value: val };\r\n                  });\r\n                }, [baseData])}\r\n                placeholder={\"Select Primer to Display\"}\r\n                isLoading={isProcessing}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col xs={12} lg={5} className=\"mb-3\">\r\n          <Row>\r\n            <Col sm={12} lg={4} className=\"mr-0 pr-lg-0\">\r\n              <InputGroup.Text>\r\n                {`${getLabel(filterHeader.type)}`}\r\n              </InputGroup.Text>\r\n            </Col>\r\n            <Col sm={12} lg={8} className=\"pl-lg-0\">\r\n              <SelectDropdown\r\n                onChange={selectionChange(setPType)}\r\n                options={React.useMemo(\r\n                  () => [\r\n                    { label: \"fwd\", value: \"fwd\" },\r\n                    { label: \"rev\", value: \"rev\" },\r\n                    { label: \"prb\", value: \"prb\" },\r\n                  ],\r\n                  []\r\n                )}\r\n                placeholder={\"Specify Type\"}\r\n                isLoading={isProcessing}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col className=\"mb-3 pr-lg-0\" xs={12} lg={4}>\r\n          <InputGroup size=\"sm\">\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text>{`${getLabel(\r\n                filterHeader.miss\r\n              )}`}</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <NumberRangeFilter\r\n              data={baseData}\r\n              minVal={0}\r\n              maxVal={100}\r\n              step={1}\r\n              value={miss}\r\n              setFilter={setMiss}\r\n              id={filterHeader.miss}\r\n            />\r\n          </InputGroup>\r\n        </Col>\r\n        <Col className=\"mb-3 pr-lg-0 pl-lg-0\" xs={12} lg={4}>\r\n          <InputGroup size=\"sm\">\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text>{`${getLabel(\r\n                filterHeader.miss3\r\n              )}`}</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <NumberRangeFilter\r\n              data={baseData}\r\n              minVal={0}\r\n              maxVal={100}\r\n              step={1}\r\n              value={miss3}\r\n              setFilter={setMiss3}\r\n              id={filterHeader.miss3}\r\n            />\r\n          </InputGroup>\r\n        </Col>\r\n        <Col className=\"mb-3 pl-lg-0\" xs={12} lg={4}>\r\n          <InputGroup size=\"sm\">\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text>{`${getLabel(\r\n                filterHeader.match\r\n              )}`}</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <NumberRangeFilter\r\n              data={baseData}\r\n              minVal={0}\r\n              maxVal={100}\r\n              step={0.01}\r\n              value={match}\r\n              setFilter={setMatch}\r\n              id={filterHeader.match}\r\n            />\r\n          </InputGroup>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col xs={12} lg={5} className=\"pr-lg-0\">\r\n          <InputGroup className=\"mb-3 \" size=\"sm\">\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text>Date Range</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <DateRangePicker\r\n              onChange={dateChange}\r\n              value={timeFrameBrush.length === 0 ? null : timeFrameBrush}\r\n            />\r\n          </InputGroup>\r\n        </Col>\r\n\r\n        <Col xs={12} lg={3} className=\"pr-lg-0 pl-lg-0\">\r\n          <InputGroup className=\"mb-3\" size=\"sm\">\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text htmlFor=\"cumulative\">\r\n                Daily Submissions as Total\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Switch\r\n              id=\"cumulative\"\r\n              className=\"use-cumulative\"\r\n              checked={!useCum}\r\n              onChange={(e) => {\r\n                setUseCum(!e.target.checked);\r\n              }}\r\n            />\r\n          </InputGroup>\r\n        </Col>\r\n\r\n        <Col xs={12} lg={4} className=\"pl-lg-0\">\r\n          <InputGroup className=\"mb-3 \" size=\"sm\">\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text>Look Back</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              value={lookBack.toString()}\r\n              disabled={useCum}\r\n              as=\"input\"\r\n              type=\"number\"\r\n              min={0}\r\n              max={200}\r\n              step={1}\r\n              onChange={(e) => {\r\n                const val = e.target.value;\r\n                setLookBack(parseInt(val, 10) || 0);\r\n              }}\r\n            />\r\n          </InputGroup>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col sm={12} lg={8} className=\"mb-3\">\r\n          <Row>\r\n            <Col sm={12} lg={2} className=\"mr-0 pr-lg-0\">\r\n              <InputGroup.Text>{`${getLabel(\r\n                filterHeader.country\r\n              )}`}</InputGroup.Text>\r\n            </Col>\r\n            <Col sm={12} lg={10} className=\"pl-lg-0\">\r\n              <SelectDropdown\r\n                className=\"country-picker\"\r\n                onChange={selectionChange(setCountries)}\r\n                options={React.useMemo(() => {\r\n                  const unique = new Set();\r\n                  const options = Object.values(baseData).reduce(\r\n                    (options, currVal) => {\r\n                      const countries = currVal.reduce((countries, virus) => {\r\n                        if (unique.has(virus.country_name)) {\r\n                          return countries;\r\n                        }\r\n                        unique.add(virus.country_name);\r\n                        countries.push({\r\n                          label: virus.country_name,\r\n                          value: virus.ISO_A3,\r\n                        });\r\n                        return countries;\r\n                      }, []);\r\n                      options.push(...countries);\r\n                      return options;\r\n                    },\r\n                    []\r\n                  );\r\n                  return options;\r\n                }, [baseData])}\r\n                placeholder={\"Filter Countries\"}\r\n                isLoading={isProcessing}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n\r\n        <Col sm={12} lg={4}>\r\n          <InputGroup className=\"mb-3\" size=\"sm\">\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text htmlFor=\"country\">\r\n                Selected Countries as Total\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Switch\r\n              id=\"country\"\r\n              className=\"use-country\"\r\n              checked={countryAsTotal}\r\n              onChange={(e) => {\r\n                setCountryAsTotal(e.target.checked);\r\n              }}\r\n            />\r\n          </InputGroup>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col sm={12} lg={2.5}>\r\n          <InputGroup className=\"mb-3\" size=\"sm\">\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text>Show Bar Graph</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Switch\r\n              type=\"checkbox\"\r\n              checked={isBar}\r\n              onChange={() => setIsBar(!isBar)}\r\n              aria-controls=\"use-bars\"\r\n              aria-expanded={isBar}\r\n            />\r\n          </InputGroup>\r\n        </Col>\r\n        <Col sm={12} lg={9.5}>\r\n          <Collapse in={isBar}>\r\n            <div id=\"use-bars\">\r\n              <Row>\r\n                <Col sm={12} lg={4}>\r\n                  <InputGroup className=\"mb-3\" size=\"sm\">\r\n                    <InputGroup.Prepend>\r\n                      <InputGroup.Text>Show Absolute Diff</InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <Switch\r\n                      type=\"checkbox\"\r\n                      checked={showAbsDiff}\r\n                      onChange={() => setShowAbsDiff(!showAbsDiff)}\r\n                    />\r\n                  </InputGroup>\r\n                </Col>\r\n                <Col sm={12} lg={4}>\r\n                  <InputGroup className=\"mb-3\" size=\"sm\">\r\n                    <InputGroup.Prepend>\r\n                      <InputGroup.Text>Days between Comparison</InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <Form.Control\r\n                      value={daysBetweenComparison.toString()}\r\n                      disabled={!isBar}\r\n                      as=\"input\"\r\n                      type=\"number\"\r\n                      min={1}\r\n                      max={200}\r\n                      step={1}\r\n                      onChange={(e) => {\r\n                        const val = e.target.value;\r\n                        setDaysBetweenComparison(parseInt(val, 10) || 0);\r\n                      }}\r\n                    />\r\n                  </InputGroup>\r\n                </Col>\r\n                <Col sm={12} lg={4}>\r\n                  <InputGroup className=\"mb-3\" size=\"sm\">\r\n                    <InputGroup.Prepend>\r\n                      <InputGroup.Text>Number of bars</InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <Form.Control\r\n                      value={numberOfBars.toString()}\r\n                      disabled={!isBar}\r\n                      as=\"input\"\r\n                      type=\"number\"\r\n                      min={1}\r\n                      max={20}\r\n                      step={1}\r\n                      onChange={(e) => {\r\n                        const val = e.target.value;\r\n                        setNumberOfBars(parseInt(val, 10) || 0);\r\n                      }}\r\n                    />\r\n                  </InputGroup>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </Collapse>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col sm={12} lg={4}>\r\n          <InputGroup className=\"mb-3\" size=\"sm\">\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text>Use Daily Count for Map</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Switch\r\n              type=\"checkbox\"\r\n              checked={showDailyGraph}\r\n              onChange={() => setShowDailyGraph(!showDailyGraph)}\r\n            />\r\n          </InputGroup>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemFilters;\r\n","// Code by React-table doc team\r\n\r\nimport React from \"react\";\r\nimport { useAsyncDebounce } from \"react-table\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\n// Define a default UI for filtering\r\nexport function GlobalFilter({\r\n  preGlobalFilteredRows,\r\n  globalFilter,\r\n  setGlobalFilter,\r\n  isHelpOn = true,\r\n}) {\r\n  const count = preGlobalFilteredRows.length;\r\n  const [value, setValue] = React.useState(globalFilter);\r\n  const onChange = useAsyncDebounce((value) => {\r\n    setGlobalFilter(value || undefined);\r\n  }, 200);\r\n\r\n  return (\r\n    <div className=\"general-search\">\r\n      <Form.Row>\r\n        <Form.Label column sm={12} lg={2}>\r\n          General Search\r\n        </Form.Label>\r\n        <Col sm={12} lg={10}>\r\n          <Form.Control\r\n            type=\"text\"\r\n            value={value || \"\"}\r\n            onChange={(e) => {\r\n              setValue(e.target.value);\r\n              onChange(e.target.value);\r\n            }}\r\n            placeholder={`Search the ${count} entries`}\r\n          />\r\n        </Col>\r\n      </Form.Row>\r\n      {isHelpOn ? (\r\n        <Form.Row>\r\n          <Form.Label column sm={0} lg={2}></Form.Label>\r\n          <Col sm={12} lg={10}>\r\n            <Form.Text className=\"text-muted\">\r\n              This does not affect plot data. If you want to set filters, set\r\n              the options above.\r\n            </Form.Text>\r\n          </Col>\r\n        </Form.Row>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\n// This is a custom UI for our 'between' or number range\r\n// filter. It uses two number boxes and filters rows to\r\n// ones that have values between the two\r\n// export function NumberRangeFilter({\r\n//   column: { filterValue = [], preFilteredRows, setFilter, id, Header },\r\n// }) {\r\n//   const [min, max] = React.useMemo(() => {\r\n//     let min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\r\n//     let max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\r\n//     preFilteredRows.forEach((row) => {\r\n//       min = Math.min(row.values[id], min);\r\n//       max = Math.max(row.values[id], max);\r\n//     });\r\n//     return [min, max];\r\n//   }, [id, preFilteredRows]);\r\n//   const debounceFilter = useAsyncDebounce((val) => {\r\n//     setFilter((old = []) => [val ? parseInt(val, 10) : undefined, old[1]]);\r\n//   }, 200);\r\n\r\n//   return (\r\n//     <Form className=\"filter\">\r\n//       <Form.Row>\r\n//         <Col>\r\n//           <Form.Control\r\n//             as=\"input\"\r\n//             value={filterValue[0] || \"\"}\r\n//             type=\"number\"\r\n//             onChange={(e) => {\r\n//               const val = e.target.value;\r\n//               debounceFilter(val);\r\n//             }}\r\n//             placeholder={`Min (${min})`}\r\n//             size=\"sm\"\r\n//             min={0}\r\n//             max={200}\r\n//           />\r\n//         </Col>\r\n//         <Col>\r\n//           <Form.Control\r\n//             value={filterValue[1] || \"\"}\r\n//             type=\"number\"\r\n//             onChange={(e) => {\r\n//               const val = e.target.value;\r\n//               setFilter((old = []) => [\r\n//                 old[0],\r\n//                 val ? parseInt(val, 10) : undefined,\r\n//               ]);\r\n//             }}\r\n//             placeholder={`Max (${max})`}\r\n//             size=\"sm\"\r\n//           />\r\n//         </Col>\r\n//       </Form.Row>\r\n//     </Form>\r\n//   );\r\n// }\r\n\r\n// Define a default UI for filtering\r\n// export function CountryColumnFilter({\r\n//   column: { filterValue, preFilteredRows, setFilter },\r\n// }) {\r\n//   //   const count = preFilteredRows.length;\r\n\r\n//   return (\r\n//     <Form.Control\r\n//       className=\"filter\"\r\n//       value={filterValue || \"\"}\r\n//       onChange={(e) => {\r\n//         setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\r\n//       }}\r\n//       placeholder={`Filter Country`}\r\n//     />\r\n//   );\r\n// }\r\n\r\n// // This is a custom filter UI for selecting\r\n// // a unique option from a list\r\n// export function SelectColumnFilter({\r\n//   column: { filterValue, setFilter, preFilteredRows, id, Header },\r\n// }) {\r\n//   // Calculate the options for filtering\r\n//   // using the preFilteredRows\r\n//   const options = React.useMemo(() => {\r\n//     const unique = new Set();\r\n//     preFilteredRows.forEach((row) => {\r\n//       unique.add(row.values[id]);\r\n//     });\r\n//     const options = [...unique.values()].map((val) => {\r\n//       return { value: val, label: val };\r\n//     });\r\n//     return [{ value: \"\", label: \"All\" }, ...options];\r\n//   }, [id, preFilteredRows]);\r\n\r\n//   // Render a multi-select box\r\n//   return (\r\n//     <SelectDropdown\r\n//       onChange={(e) => {\r\n//         const toFilter = e || [];\r\n//         const isAll = toFilter.find((val) => val.value === \"\");\r\n//         if (isAll || toFilter.length === 0) {\r\n//           setFilter(undefined);\r\n//         } else {\r\n//           const selection = toFilter.map((val) => val.value);\r\n//           setFilter(selection);\r\n//         }\r\n//       }}\r\n//       options={options}\r\n//       defaultValue={[]}\r\n//     />\r\n//   );\r\n// }\r\n\r\n// This is a custom filter UI that uses a\r\n// slider to set the filter value between a column's\r\n// min and max values\r\n// function SliderColumnFilter({\r\n//   column: { filterValue, setFilter, preFilteredRows, id },\r\n// }) {\r\n// Calculate the min and max\r\n// using the preFilteredRows\r\n\r\n//   const [min, max] = React.useMemo(() => {\r\n//     let min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\r\n//     let max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\r\n//     preFilteredRows.forEach((row) => {\r\n//       min = Math.min(row.values[id], min);\r\n//       max = Math.max(row.values[id], max);\r\n//     });\r\n//     return [min, max];\r\n//   }, [id, preFilteredRows]);\r\n\r\n//   return (\r\n//     <>\r\n//       <input\r\n//         className=\"filter\"\r\n//         type=\"range\"\r\n//         min={min}\r\n//         max={max}\r\n//         value={filterValue || min}\r\n//         onChange={(e) => {\r\n//           setFilter(parseInt(e.target.value, 10));\r\n//         }}\r\n//       />\r\n//       <button onClick={() => setFilter(undefined)}>Off</button>\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// Define a custom filter filter function!\r\n// function filterGreaterThan(rows, id, filterValue) {\r\n//   return rows.filter((row) => {\r\n//     const rowValue = row.values[id];\r\n//     return rowValue >= filterValue;\r\n//   });\r\n// }\r\n// export function filterContains(rows, id, filterValue) {\r\n//   return rows.filter((row) => {\r\n//     if (filterValue === undefined) {\r\n//       return true;\r\n//     }\r\n//     const rowValue = row.values[id];\r\n//     return filterValue.includes(rowValue);\r\n//   });\r\n// }\r\n\r\n// This is an autoRemove method on the filter function that\r\n// when given the new filter value and returns true, the filter\r\n// will be automatically removed. Normally this is just an undefined\r\n// check, but here, we want to remove the filter if it's not a number\r\n// filterGreaterThan.autoRemove = (val) => typeof val !== \"number\";\r\n\r\n// function App() {\r\n//   const columns = React.useMemo(\r\n//     () => [\r\n//       {\r\n//         Header: \"Name\",\r\n//         columns: [\r\n//           {\r\n//             Header: \"First Name\",\r\n//             accessor: \"firstName\",\r\n//           },\r\n//           {\r\n//             Header: \"Last Name\",\r\n//             accessor: \"lastName\",\r\n//             // Use our custom `fuzzyText` filter on this column\r\n//             filter: \"fuzzyText\",\r\n//           },\r\n//         ],\r\n//       },\r\n//       {\r\n//         Header: \"Info\",\r\n//         columns: [\r\n//           {\r\n//             Header: \"Age\",\r\n//             accessor: \"age\",\r\n//             Filter: SliderColumnFilter,\r\n//             filter: \"equals\",\r\n//           },\r\n//           {\r\n//             Header: \"Visits\",\r\n//             accessor: \"visits\",\r\n//             Filter: NumberRangeColumnFilter,\r\n//             filter: \"between\",\r\n//           },\r\n//           {\r\n//             Header: \"Status\",\r\n//             accessor: \"status\",\r\n//             Filter: SelectColumnFilter,\r\n//             filter: \"includes\",\r\n//           },\r\n//           {\r\n//             Header: \"Profile Progress\",\r\n//             accessor: \"progress\",\r\n//             Filter: SliderColumnFilter,\r\n//             filter: filterGreaterThan,\r\n//           },\r\n//         ],\r\n//       },\r\n//     ],\r\n//     []\r\n//   );\r\n\r\n//   return (\r\n//     <div></div>\r\n//   );\r\n// }\r\n","import React from \"react\";\r\nimport {\r\n  usePagination,\r\n  useTable,\r\n  useGlobalFilter,\r\n  useFlexLayout,\r\n  useResizeColumns,\r\n  useSortBy,\r\n} from \"react-table\";\r\nimport BTable from \"react-bootstrap/Table\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Collapse from \"react-bootstrap/Collapse\";\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nimport \"./tableDisplay.css\";\r\n\r\nimport { GlobalFilter } from \"./filter\";\r\n\r\nfunction DataTable({ title, data, columns, isCombined, isCollapsable }) {\r\n  const [showTable, setShowTable] = React.useState(true);\r\n\r\n  if (isCollapsable) {\r\n    return (\r\n      <>\r\n        <Button\r\n          onClick={() => {\r\n            setShowTable(!showTable);\r\n          }}\r\n          className=\"show-table mb-3 mt-3\"\r\n          aria-controls=\"collapse-table\"\r\n          aria-expanded={showTable}\r\n          variant=\"light\"\r\n        >\r\n          {showTable\r\n            ? `${String.fromCodePoint(parseInt(\"25BC\", 16))} Close Table`\r\n            : `> Show Table`}\r\n        </Button>\r\n        <Collapse in={showTable}>\r\n          <div>\r\n            <TableDisplay\r\n              id=\"collapse-table\"\r\n              title={title}\r\n              data={data}\r\n              columns={columns}\r\n              isCombined={isCombined}\r\n            />\r\n          </div>\r\n        </Collapse>\r\n      </>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <TableDisplay\r\n        id=\"collapse-table\"\r\n        title={title}\r\n        data={data}\r\n        columns={columns}\r\n        isCombined={isCombined}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction TableDisplay({ title, data, columns, isCombined }) {\r\n  const csv_headers = columns.map((header) => {\r\n    return { label: header.Header, key: header.accessor };\r\n  });\r\n  if (!isCombined) {\r\n    csv_headers.push(\r\n      ...[\r\n        {\r\n          label: \"ISO A3\",\r\n          key: \"ISO_A3\",\r\n        },\r\n        {\r\n          label: \"Virus Match Index (Start, End)\",\r\n          key: \"virus_match_idx\",\r\n        },\r\n        {\r\n          label: \"Primer Match Index (Start, End)\",\r\n          key: \"query_match_idx\",\r\n        },\r\n      ]\r\n    );\r\n  }\r\n\r\n  const filterTypes = React.useMemo(\r\n    () => ({\r\n      // Or, override the default text filter to use\r\n      // \"startWith\"\r\n      text: (rows, id, filterValue) => {\r\n        return rows.filter((row) => {\r\n          const rowValue = row.values[id];\r\n          return rowValue !== undefined\r\n            ? String(rowValue)\r\n                .toLowerCase()\r\n                .startsWith(String(filterValue).toLowerCase())\r\n            : true;\r\n        });\r\n      },\r\n    }),\r\n    []\r\n  );\r\n\r\n  const defaultColumn = React.useMemo(\r\n    () => ({\r\n      minWidth: 80,\r\n      width: 160,\r\n      maxWidth: 600,\r\n    }),\r\n    []\r\n  );\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    page,\r\n\r\n    // pagination details\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize },\r\n\r\n    // filtering details\r\n    state,\r\n    // visibleColumns,\r\n    preGlobalFilteredRows,\r\n    setGlobalFilter,\r\n    // filteredRows,\r\n    // rows,\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      initialState: { pageIndex: 0 },\r\n      defaultColumn,\r\n      filterTypes,\r\n    },\r\n    // useFilters,\r\n    useGlobalFilter,\r\n    useSortBy,\r\n    usePagination,\r\n    useFlexLayout,\r\n    useResizeColumns\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"table-title\">{title}</h2>\r\n      <GlobalFilter\r\n        preGlobalFilteredRows={preGlobalFilteredRows}\r\n        globalFilter={state.globalFilter}\r\n        setGlobalFilter={setGlobalFilter}\r\n      />\r\n\r\n      {/* <pre>\r\n        <code>{JSON.stringify(state, null, 2)}</code>\r\n      </pre> */}\r\n      <BTable\r\n        {...getTableProps()}\r\n        variant=\"light\"\r\n        //   size=\"lg\"\r\n        responsive\r\n        striped\r\n        bordered\r\n        hover\r\n      >\r\n        <thead className=\"thead\">\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => {\r\n                return (\r\n                  <th {...column.getHeaderProps()} className=\"table-header\">\r\n                    {column.render(\"Header\")}\r\n                    <span {...column.getSortByToggleProps()}>\r\n                      {column.isSorted\r\n                        ? column.isSortedDesc\r\n                          ? ` ${String.fromCodePoint(parseInt(\"25BC\", 16))}`\r\n                          : ` ${String.fromCodePoint(parseInt(\"25B2\", 16))}`\r\n                        : ` ${String.fromCodePoint(\r\n                            parseInt(\"25BC\", 16)\r\n                          )}${String.fromCodePoint(parseInt(\"25B2\", 16))}`}\r\n                    </span>\r\n                    {column.canResize && (\r\n                      <div\r\n                        {...column.getResizerProps()}\r\n                        className={`resizer ${\r\n                          column.isResizing ? \"isResizing\" : \"\"\r\n                        }`}\r\n                      />\r\n                    )}\r\n                    {/* {column.canFilter ? (\r\n                      <div>{column.render(\"Filter\")}</div>\r\n                    ) : null} */}\r\n                  </th>\r\n                );\r\n              })}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()} className=\"tbody\">\r\n          {page.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  if (cell.column.id === \"match_diag\") {\r\n                    const display_str = cell.value.split(\" \").map((val) => {\r\n                      return val.split(\"\");\r\n                    });\r\n                    return (\r\n                      <td\r\n                        {...cell.getCellProps()}\r\n                        className=\"table-cell match-diag\"\r\n                      >\r\n                        {display_str.map((val, idx) => {\r\n                          return (\r\n                            <div key={idx}>\r\n                              {val.map((char, idx) => {\r\n                                return (\r\n                                  <span key={idx} className={char}>\r\n                                    {char}\r\n                                  </span>\r\n                                );\r\n                              })}\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </td>\r\n                    );\r\n                  }\r\n                  return (\r\n                    <td\r\n                      {...cell.getCellProps()}\r\n                      className={`table-cell ${\r\n                        cell.column.id === \"country_name\" ||\r\n                        cell.column.id === \"virus_name\"\r\n                          ? \"text-align-start\"\r\n                          : \"\"\r\n                      }`}\r\n                    >\r\n                      {cell.render(\"Cell\")}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n          {!canNextPage ? (\r\n            <tr className=\"end-of-data\">\r\n              <td>{`---------- All Data Displayed ----------`}</td>\r\n            </tr>\r\n          ) : null}\r\n        </tbody>\r\n      </BTable>\r\n      <Row className=\"pagination\">\r\n        <Col className=\"page-controls\" sm={12} md={4}>\r\n          <Button\r\n            variant=\"light\"\r\n            onClick={() => gotoPage(0)}\r\n            disabled={!canPreviousPage}\r\n          >\r\n            {\"<<\"}\r\n          </Button>\r\n          <Button\r\n            variant=\"light\"\r\n            onClick={() => previousPage()}\r\n            disabled={!canPreviousPage}\r\n          >\r\n            {\"<\"}\r\n          </Button>\r\n          <Button\r\n            variant=\"light\"\r\n            onClick={() => nextPage()}\r\n            disabled={!canNextPage}\r\n          >\r\n            {\">\"}\r\n          </Button>\r\n          <Button\r\n            variant=\"light\"\r\n            onClick={() => gotoPage(pageCount - 1)}\r\n            disabled={!canNextPage}\r\n          >\r\n            {\">>\"}\r\n          </Button>\r\n          <p>\r\n            {\" \"}\r\n            Page <strong>{pageIndex + 1} </strong> of{\" \"}\r\n            <strong>{pageOptions.length}</strong>\r\n          </p>\r\n        </Col>\r\n        <Col className=\"manual-page-selection\" sm={12} md={4}>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"page-info\">Go to page:</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              type=\"number\"\r\n              defaultValue={pageIndex + 1}\r\n              onChange={(e) => {\r\n                const page = e.target.value ? Number(e.target.value) - 1 : 0;\r\n                gotoPage(page);\r\n              }}\r\n              aria-label=\"Go To Page\"\r\n              aria-describedby=\"page-info\"\r\n            />\r\n          </InputGroup>\r\n        </Col>\r\n        <Col className=\"results-per-page\" sm={12} md={4}>\r\n          <Form.Control\r\n            value={pageSize}\r\n            onChange={(e) => {\r\n              setPageSize(Number(e.target.value));\r\n            }}\r\n            as=\"select\"\r\n          >\r\n            {[10, 20, 30, 40, 50].map((pageSize) => (\r\n              <option key={pageSize} value={pageSize}>\r\n                Show {pageSize}\r\n              </option>\r\n            ))}\r\n          </Form.Control>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <CSVLink\r\n          data={data}\r\n          headers={csv_headers}\r\n          filename={isCombined ? \"combined_miss.csv\" : \"sensitivity_miss.csv\"}\r\n          className=\"btn btn-dark\"\r\n          target=\"_blank\"\r\n        >\r\n          Download Table\r\n        </CSVLink>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\nexport default DataTable;\r\n","import React from \"react\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\nimport { debounce } from \"../util\";\r\n\r\nconst LineGraph = ({\r\n  title,\r\n  title2,\r\n  data,\r\n  primers,\r\n  dates,\r\n  setPrimers,\r\n  setTimeFrameBrush,\r\n  timeFrameBrush,\r\n  subtitle = \"\",\r\n  subtitle2 = \"\",\r\n}) => {\r\n  function buildDataSet(data) {\r\n    const datasets = [];\r\n    for (const dataset of data) {\r\n      datasets.push({\r\n        dimensions: [\r\n          \"countries_considered\",\r\n          \"date\",\r\n          \"mutation3_abs\",\r\n          \"mutation3_pct\",\r\n          \"mutation_abs\",\r\n          \"mutation_pct\",\r\n          \"name\",\r\n          \"submission_count\",\r\n        ],\r\n        source: dataset,\r\n      });\r\n    }\r\n    return datasets;\r\n  }\r\n  function getMutationPlot(primers, dataPlot, xIndex, yIndex) {\r\n    const plots = [];\r\n    for (let i = 0; i < primers.length; i++) {\r\n      plots.push({\r\n        name: `${primers[i]}`,\r\n        type: \"line\",\r\n        hoverAnimation: false,\r\n        xAxisIndex: xIndex,\r\n        yAxisIndex: yIndex,\r\n        encode: {\r\n          x: \"date\",\r\n          y: dataPlot,\r\n        },\r\n        datasetIndex: i,\r\n      });\r\n    }\r\n    return plots;\r\n  }\r\n  function getDateIndex(date, dates) {\r\n    if (date === undefined) return undefined;\r\n    const index = dates.findIndex((val) => {\r\n      const dateString = date.toISOString().slice(0, 10);\r\n      return dateString === val;\r\n    });\r\n    return index;\r\n  }\r\n\r\n  const startIndex =\r\n    ((getDateIndex(timeFrameBrush[0], dates) || 0) * 100) / dates.length;\r\n  const endIndex =\r\n    ((getDateIndex(timeFrameBrush[1], dates) || dates.length) * 100) /\r\n    dates.length;\r\n\r\n  const mutationPlot = getMutationPlot(primers, \"mutation_pct\", 0, 0);\r\n  const mutation3Plot = getMutationPlot(primers, \"mutation3_pct\", 1, 1);\r\n  const datasets = buildDataSet(data, primers);\r\n  // console.log(\"data :>> \", data);\r\n  // console.log(\"mutationPlot :>> \", mutationPlot);\r\n  // console.log(\"datasets :>> \", datasets);\r\n\r\n  const option = {\r\n    title: [\r\n      {\r\n        text: title,\r\n        subtext: subtitle,\r\n        left: \"center\",\r\n      },\r\n      {\r\n        text: title2,\r\n        subtext: subtitle2,\r\n        left: \"center\",\r\n        top: \"center\",\r\n      },\r\n    ],\r\n    tooltip: {\r\n      trigger: \"axis\",\r\n      axisPointer: {\r\n        type: \"cross\",\r\n        animation: false,\r\n      },\r\n      backgroundColor: \"rgba(50,50,50, 0.9)\",\r\n      formatter: function (params) {\r\n        let baseDetails = params[0].data;\r\n        let date = baseDetails.date;\r\n        let submissionCount = baseDetails.submission_count;\r\n\r\n        let tooltip = `<div>Details for ${date}<br/>Total Submissions: ${submissionCount}</div><br/>`;\r\n        for (let i = 0; i < primers.length; i++) {\r\n          tooltip += `<div>params[i].data.name}\r\n            <br/>\r\n            <strong>Abs Mutation:</strong> ${params[i].data.mutation_abs}<br/>\r\n            <strong>Abs Mutation in 3' end:</strong> ${params[i].data.mutation3_abs}<br/>\r\n            <strong>Mutation %:</strong> ${params[i].data.mutation_pct}<br/>\r\n            <strong>Mutation % in 3' end:</strong> ${params[i].data.mutation3_pct}</div><br/>`;\r\n        }\r\n        return tooltip;\r\n      },\r\n      position: function (pos, params, el, elRect, size) {\r\n        var obj = { top: 10 };\r\n        obj[[\"left\", \"right\"][+(pos[0] < size.viewSize[0] / 2)]] = 30;\r\n        return obj;\r\n      },\r\n    },\r\n    legend: {\r\n      data: primers,\r\n      orient: \"vertical\",\r\n      type: \"scroll\",\r\n      top: \"5%\",\r\n      right: 0,\r\n    },\r\n    // toolbox: {\r\n    //   feature: {\r\n    //     dataZoom: {\r\n    //       yAxisIndex: \"none\",\r\n    //     },\r\n    //     restore: {},\r\n    //     saveAsImage: {},\r\n    //   },\r\n    // },\r\n    axisPointer: {\r\n      link: { xAxisIndex: \"all\" },\r\n    },\r\n    dataZoom: [\r\n      {\r\n        type: \"slider\",\r\n        show: true,\r\n        realtime: true,\r\n        start: startIndex,\r\n        end: endIndex,\r\n        xAxisIndex: [0, 1],\r\n        top: \"92%\",\r\n      },\r\n      {\r\n        type: \"inside\",\r\n        realtime: true,\r\n        start: startIndex,\r\n        end: endIndex,\r\n        xAxisIndex: [0, 1],\r\n      },\r\n    ],\r\n    grid: [\r\n      { bottom: \"60%\", right: \"15%\" },\r\n      { top: \"57%\", right: \"15%\" },\r\n    ],\r\n    xAxis: [\r\n      {\r\n        name: \"date\",\r\n        gridIndex: 0,\r\n        type: \"category\",\r\n      },\r\n      {\r\n        name: \"date\",\r\n        gridIndex: 1,\r\n        type: \"category\",\r\n      },\r\n    ],\r\n    yAxis: [\r\n      {\r\n        name: \"Total Percentage (%)\",\r\n        gridIndex: 0,\r\n        nameLocation: \"middle\",\r\n        nameGap: 25,\r\n      },\r\n      {\r\n        name: \"Total Percentage (%)\",\r\n        gridIndex: 1,\r\n        nameLocation: \"middle\",\r\n        nameGap: 25,\r\n      },\r\n    ],\r\n    dataset: datasets,\r\n    series: [...mutationPlot, ...mutation3Plot],\r\n  };\r\n\r\n  const seeEvent = (e) => {\r\n    console.log(e);\r\n  };\r\n\r\n  function legendChange({ selected }) {\r\n    // TODO (Eb): Figure out how to handle legend selection\r\n    // const primers = [];\r\n    // for (const primer of Object.keys(selected)) {\r\n    //   if (selected[primer]) {\r\n    //     primers.push(primer);\r\n    //   }\r\n    // }\r\n    // setPrimers(primers);\r\n  }\r\n\r\n  const dataZoomChange = debounce((e) => {\r\n    let data = e;\r\n    if (e.batch !== undefined) {\r\n      data = e.batch[0];\r\n    }\r\n\r\n    const startIndex = Math.floor((dates.length * data.start) / 100);\r\n    const endIndex = Math.floor((dates.length * data.end) / 100);\r\n    const startStringDate = dates[startIndex] || dates[0];\r\n    const endStringDate = dates[endIndex] || dates[dates.length - 1];\r\n    let startDate = new Date(startStringDate);\r\n    let endDate = new Date(endStringDate);\r\n    startDate.setDate(startDate.getDate());\r\n    endDate.setDate(endDate.getDate());\r\n    console.log(\"startDate endDate :>> \", startDate, endDate);\r\n    setTimeFrameBrush([startDate, endDate]);\r\n  }, 800);\r\n\r\n  let onEvents = {\r\n    click: seeEvent,\r\n    legendselectchanged: legendChange,\r\n    dataZoom: dataZoomChange,\r\n  };\r\n  return (\r\n    <ReactEcharts\r\n      option={option}\r\n      style={{ height: \"475px\", width: \"100%\" }}\r\n      onEvents={onEvents}\r\n      notMerge={true}\r\n    />\r\n  );\r\n};\r\n\r\nexport default LineGraph;\r\n","import React from \"react\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\n\r\nconst BarGraph = ({\r\n  title,\r\n  title2,\r\n  data,\r\n  showAbsDiff,\r\n  subtitle = \"\",\r\n  subtitle2 = \"\",\r\n}) => {\r\n  function getBarLabel(data, idx, toPlot) {\r\n    const fontSize = 9;\r\n    return {\r\n      show: true,\r\n      position: \"insideTop\",\r\n      distance: 10,\r\n      align: \"center\",\r\n      verticalAlign: \"top\",\r\n      rotate: 0,\r\n      formatter: function (params) {\r\n        if (!showAbsDiff) {\r\n          return `${params.data[toPlot]}%`;\r\n        }\r\n        const primer = params.data.name;\r\n        const currVal = data[idx].filter((val) => val.name === primer)[0][\r\n          toPlot\r\n        ];\r\n        const prevVal = data[idx - 1].filter((val) => val.name === primer)[0][\r\n          toPlot\r\n        ];\r\n        const difference = currVal - prevVal;\r\n        let label = difference > 0 ? `{p|+` : `{n|`;\r\n        return `${label}${difference.toFixed(2)}%}`;\r\n      },\r\n      fontSize: fontSize,\r\n      backgroundColor: \"#232323\",\r\n      textBorderColor: \"transparent\",\r\n      padding: [4, 5, 2, 5],\r\n      rich: {\r\n        p: { color: \"#88ff88\", fontSize: fontSize },\r\n        n: { color: \"#ff8677\", fontSize: fontSize },\r\n      },\r\n    };\r\n  }\r\n\r\n  function buildDataset(datasets) {\r\n    const data = [];\r\n    for (const dataset of datasets) {\r\n      data.push({\r\n        dimensions: [\r\n          \"countries_considered\",\r\n          \"date\",\r\n          \"mutation3_abs\",\r\n          \"mutation3_pct\",\r\n          \"mutation_abs\",\r\n          \"mutation_pct\",\r\n          \"name\",\r\n          \"submission_count\",\r\n        ],\r\n        source: dataset,\r\n      });\r\n    }\r\n    return data;\r\n  }\r\n\r\n  function buildBarPlot(data, toPlot, xAxisIndex, yAxisIndex) {\r\n    const plots = [];\r\n    for (let i = 1; i < data.length; i++) {\r\n      plots.push({\r\n        name: data[i][0].date,\r\n        type: \"bar\",\r\n        barMaxWidth: 40,\r\n        xAxisIndex: xAxisIndex,\r\n        yAxisIndex: yAxisIndex,\r\n        label: getBarLabel(data, i, toPlot),\r\n        encode: {\r\n          x: \"name\",\r\n          y: toPlot,\r\n        },\r\n        datasetIndex: i,\r\n      });\r\n    }\r\n    return plots;\r\n  }\r\n\r\n  const dataset = buildDataset(data);\r\n  const mutation = buildBarPlot(data, \"mutation_pct\", 0, 0);\r\n  const mutation3 = buildBarPlot(data, \"mutation3_pct\", 1, 1);\r\n  console.log(\"dataset :>> \", dataset);\r\n  console.log(\"mutation :>> \", mutation);\r\n  console.log(\"mutation3 :>> \", mutation3);\r\n  const option = {\r\n    title: [\r\n      {\r\n        text: title,\r\n        subtext: subtitle,\r\n        left: \"center\",\r\n      },\r\n      {\r\n        text: title2,\r\n        subtext: subtitle2,\r\n        left: \"center\",\r\n        top: \"middle\",\r\n      },\r\n    ],\r\n    tooltip: {\r\n      trigger: \"axis\",\r\n      axisPointer: {\r\n        type: \"shadow\",\r\n        animation: false,\r\n      },\r\n      position: function (pos, params, el, elRect, size) {\r\n        var obj = { top: 10 };\r\n        obj[[\"left\", \"right\"][+(pos[0] < size.viewSize[0] / 2)]] = 30;\r\n        return obj;\r\n      },\r\n    },\r\n    axisPointer: {\r\n      link: { xAxisIndex: \"all\" },\r\n    },\r\n    grid: [{ bottom: \"60%\" }, { top: \"57%\" }],\r\n    xAxis: [\r\n      {\r\n        name: \"primers\",\r\n        gridIndex: 0,\r\n        type: \"category\",\r\n      },\r\n      {\r\n        name: \"primers\",\r\n        gridIndex: 1,\r\n        type: \"category\",\r\n      },\r\n    ],\r\n    yAxis: [\r\n      {\r\n        name: \"Total Percentage (%)\",\r\n        gridIndex: 0,\r\n        nameLocation: \"middle\",\r\n        nameGap: 50,\r\n      },\r\n      {\r\n        name: \"Total Percentage (%)\",\r\n        gridIndex: 1,\r\n        nameLocation: \"middle\",\r\n        nameGap: 50,\r\n      },\r\n    ],\r\n    dataset: dataset,\r\n    series: [...mutation, ...mutation3],\r\n  };\r\n  const seeEvent = (e) => {\r\n    console.log(e);\r\n  };\r\n  let onEvents = {\r\n    click: seeEvent,\r\n  };\r\n  return (\r\n    <ReactEcharts\r\n      option={option}\r\n      style={{ height: \"500px\", width: \"100%\" }}\r\n      notMerge={true}\r\n      onEvents={onEvents}\r\n    />\r\n  );\r\n};\r\n\r\nexport default BarGraph;\r\n","import React from \"react\";\r\nimport { scaleLinear } from \"d3-scale\";\r\nimport { extent } from \"d3-array\";\r\nimport {\r\n  ZoomableGroup,\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n} from \"react-simple-maps\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nimport \"./primerMap.css\";\r\n\r\nconst MapWithToolTip = ({\r\n  title,\r\n  data,\r\n  lookBack,\r\n  db,\r\n  timeFrameBrush,\r\n  setTimeFrameBrush,\r\n}) => {\r\n  const [tooltipContent, setTooltipContent] = React.useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      <PrimerMap\r\n        title={title}\r\n        setTooltipContent={setTooltipContent}\r\n        data={data}\r\n        lookBack={lookBack}\r\n        db={db}\r\n        timeFrameBrush={timeFrameBrush}\r\n        setTimeFrameBrush={setTimeFrameBrush}\r\n      />\r\n      <ReactTooltip html={true}>{tooltipContent}</ReactTooltip>\r\n    </>\r\n  );\r\n};\r\nconst geoUrl =\r\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\r\n\r\nconst colorScale = scaleLinear().domain([0, 1]).range([\"#ffedea\", \"#ff5233\"]);\r\n\r\nconst PrimerMap = ({\r\n  title,\r\n  setTooltipContent,\r\n  data,\r\n  lookBack,\r\n  db,\r\n  timeFrameBrush,\r\n  setTimeFrameBrush,\r\n}) => {\r\n  const [downloadData, setDownloadData] = React.useState([]);\r\n  const headers = [\r\n    {\r\n      label: \"Country\",\r\n      key: \"country\",\r\n    },\r\n    {\r\n      label: \"ISO A3\",\r\n      key: \"ISO_A3\",\r\n    },\r\n    {\r\n      label: \"Missed %\",\r\n      key: \"missed_pct\",\r\n    },\r\n    {\r\n      label: \"Absolute Misses\",\r\n      key: \"abs_miss\",\r\n    },\r\n    {\r\n      label: \"Submitted Virus\",\r\n      key: \"country_total\",\r\n    },\r\n\r\n    {\r\n      label: \"Start Date\",\r\n      key: \"startDate\",\r\n    },\r\n    {\r\n      label: \"End Date\",\r\n      key: \"endDate\",\r\n    },\r\n  ];\r\n\r\n  function handleClick(countryISO3, data, lookBack) {\r\n    if (lookBack === -1) {\r\n      const timeFrame = extent(\r\n        data.reduce((dates, data) => {\r\n          if (data.ISO_A3 === countryISO3) {\r\n            dates.push(new Date(data.date));\r\n            return dates;\r\n          } else {\r\n            return dates;\r\n          }\r\n        }, [])\r\n      );\r\n      if (timeFrame[0] === undefined) {\r\n        return;\r\n      }\r\n\r\n      // If on a single day, expand the time frame +- 1 day\r\n      if (timeFrame[0] === timeFrame[1]) {\r\n        const nextDay = new Date(timeFrame[1]);\r\n        const prevDay = new Date(timeFrame[1]);\r\n        nextDay.setHours(nextDay.getHours() + 23);\r\n        prevDay.setHours(prevDay.getHours() - 23);\r\n        setTimeFrameBrush([prevDay, nextDay]);\r\n      } else {\r\n        setTimeFrameBrush(timeFrame);\r\n      }\r\n    }\r\n  }\r\n\r\n  function downloadDataClick(\r\n    countryMisses,\r\n    countryMissesPct,\r\n    startDate,\r\n    endDate,\r\n    data\r\n  ) {\r\n    return () => {\r\n      const toDownload = [];\r\n      for (const [countryISO, absMiss] of countryMisses) {\r\n        toDownload.push({\r\n          country: data.find((element) => element.ISO_A3 === countryISO)\r\n            .country_name,\r\n          ISO_A3: countryISO,\r\n          country_total: absMiss / (countryMissesPct.get(countryISO) / 100),\r\n          missed_pct: countryMissesPct.get(countryISO),\r\n          abs_miss: absMiss,\r\n          startDate: startDate,\r\n          endDate: endDate,\r\n        });\r\n      }\r\n      console.log(\"fired\", toDownload);\r\n      setDownloadData(toDownload);\r\n    };\r\n  }\r\n\r\n  function getCountryMissCounts(data, lookBack, date) {\r\n    /**\r\n     * @param {Array} data: contains a list of missed virus Objects to be visualized on the map.\r\n     * @returns {Map} Containing the number of misses per country.\r\n     */\r\n    let currData = data;\r\n    if (lookBack > 0) {\r\n      const endDate = new Date(date);\r\n      const startDate = new Date(date);\r\n      startDate.setDate(startDate.getDate() - lookBack);\r\n      currData = data.filter((val) => {\r\n        const currDate = new Date(val.date);\r\n        return (\r\n          currDate.getTime() <= endDate.getTime() &&\r\n          currDate.getTime() >= startDate.getTime()\r\n        );\r\n      });\r\n    }\r\n    return currData.reduce((count, currData) => {\r\n      count.has(currData.ISO_A3)\r\n        ? count.set(currData.ISO_A3, count.get(currData.ISO_A3) + 1)\r\n        : count.set(currData.ISO_A3, 1);\r\n      return count;\r\n    }, new Map());\r\n  }\r\n\r\n  function getDates(timeFrameBrush, db) {\r\n    return timeFrameBrush.length === 0\r\n      ? [Object.keys(db)[0], Object.keys(db)[Object.keys(db).length - 1]]\r\n      : [getDateString(timeFrameBrush[0]), getDateString(timeFrameBrush[1])];\r\n  }\r\n\r\n  function getDateString(time) {\r\n    var date = new Date(time);\r\n    return date.toISOString().slice(0, 10);\r\n  }\r\n\r\n  const [startDate, endDate] = getDates(timeFrameBrush, db);\r\n  const countryMisses = getCountryMissCounts(data, lookBack, endDate);\r\n  const countryMissesPct = Array.from(countryMisses.keys()).reduce(\r\n    (accumulated, country) => {\r\n      accumulated.set(\r\n        country,\r\n        (\r\n          (countryMisses.get(country) / (db[endDate][country] || 100)) *\r\n          100\r\n        ).toFixed(2)\r\n      );\r\n      return accumulated;\r\n    },\r\n    new Map()\r\n  );\r\n\r\n  console.log(\"countryMisses :>> \", countryMisses);\r\n  console.log(\"startDate, endDate :>> \", startDate, endDate);\r\n  console.log(\"countryMissesPct :>> \", countryMissesPct);\r\n  const maxPctMiss = Math.max(...Array.from(countryMissesPct.values()));\r\n  console.log(\"maxPctMiss :>> \", maxPctMiss);\r\n  return (\r\n    <Container>\r\n      <h2 className=\"map-title\">{title}</h2>\r\n      <ComposableMap data-tip=\"\" projectionConfig={{ scale: 200 }}>\r\n        <ZoomableGroup>\r\n          <Geographies geography={geoUrl}>\r\n            {({ geographies }) =>\r\n              geographies.map((geo) => {\r\n                const missCount = countryMisses.get(geo.properties.ISO_A3) || 0;\r\n                const pctMiss =\r\n                  countryMissesPct.get(geo.properties.ISO_A3) || 0;\r\n                return (\r\n                  <Geography\r\n                    key={geo.rsmKey}\r\n                    geography={geo}\r\n                    onMouseEnter={() => {\r\n                      const { NAME } = geo.properties;\r\n                      setTooltipContent(\r\n                        `${NAME}: <br/> \r\n                        ${\r\n                          db[endDate][geo.properties.ISO_A3] || 0\r\n                        } submissions <br/>\r\n                        ${missCount} Absolute Misses.<br/> \r\n                        ${pctMiss}% Miss <br/>\r\n                        `\r\n                      );\r\n                    }}\r\n                    onMouseLeave={() => {\r\n                      setTooltipContent(\"\");\r\n                    }}\r\n                    onClick={() => {\r\n                      handleClick(geo.properties.ISO_A3, data, lookBack);\r\n                    }}\r\n                    style={{\r\n                      default: {\r\n                        fill:\r\n                          parseFloat(pctMiss) !== 0\r\n                            ? colorScale(pctMiss / maxPctMiss)\r\n                            : \"#949494\",\r\n                        outline: \"none\",\r\n                      },\r\n                      hover: {\r\n                        fill: \"#afca9d\",\r\n                        cursor: missCount ? \"pointer\" : \"auto\",\r\n                        outline: \"none\",\r\n                      },\r\n                    }}\r\n                  />\r\n                );\r\n              })\r\n            }\r\n          </Geographies>\r\n        </ZoomableGroup>\r\n      </ComposableMap>\r\n      <CSVLink\r\n        data={downloadData}\r\n        headers={headers}\r\n        filename={\"geo_misses.csv\"}\r\n        className=\"btn btn-dark\"\r\n        target=\"_blank\"\r\n        onClick={downloadDataClick(\r\n          countryMisses,\r\n          countryMissesPct,\r\n          startDate,\r\n          endDate,\r\n          data\r\n        )}\r\n      >\r\n        Download Map Data\r\n      </CSVLink>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MapWithToolTip;\r\n","import React from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Collapse from \"react-bootstrap/Collapse\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./resultsPage.css\";\r\nimport ItemFilters from \"../../components/ItemFilter/itemFilters\";\r\nimport DataTable from \"../../components/tableDisplay/tableDisplay\";\r\nimport LineGraph from \"../../components/mutGraphs/lineGraph\";\r\nimport BarGraph from \"../../components/mutGraphs/barGraph\";\r\nimport MapWithToolTip from \"../../components/primerMap/primerMap\";\r\n\r\nDate.prototype.sameDay = function (d) {\r\n  return (\r\n    this.getFullYear() === d.getFullYear() &&\r\n    this.getDate() === d.getDate() &&\r\n    this.getMonth() === d.getMonth()\r\n  );\r\n};\r\n\r\nconst InputData = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <Container>\r\n      <p className=\"no-data\">\r\n        Please make sure that you've uploaded some data first!\r\n      </p>\r\n      <Button onClick={() => history.push(\"/\")}>Upload Data</Button>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst ResultPage = ({ results }) => {\r\n  // Base results from blast\r\n  const result = React.useRef(JSON.parse(results));\r\n  console.log(\"result\", result);\r\n  const baseData = React.useRef(result.current[0] || {});\r\n  const baseTableData = React.useRef(makeTableData(baseData.current));\r\n  const dbCountDaily = React.useRef(parseDb(result.current, 1));\r\n  const dbCountCum = React.useRef(parseDb(result.current, 0));\r\n  const dateRange = React.useRef(Object.keys(dbCountCum.current) || []);\r\n\r\n  const { display } = useParams();\r\n  const toDisplay = display.split(\"&\");\r\n\r\n  // Filtering for table and graph data\r\n  const [miss, setMiss] = React.useState([]);\r\n  const [miss3, setMiss3] = React.useState([]);\r\n  const [match, setMatch] = React.useState([]);\r\n  const [timeFrameBrush, setTimeFrameBrush] = React.useState(\r\n    React.useMemo(() => [], [])\r\n  );\r\n  const [countries, setCountries] = React.useState(React.useMemo(() => [], []));\r\n  const [primers, setPrimers] = React.useState(React.useMemo(() => [], []));\r\n  const [pType, setPType] = React.useState([]);\r\n\r\n  // Filtering for graph data\r\n  const [useCum, setUseCum] = React.useState(false);\r\n  const [countryAsTotal, setCountryAsTotal] = React.useState(false);\r\n  const [lookBack, setLookBack] = React.useState(6);\r\n  const [isBar, setIsBar] = React.useState(false);\r\n  const [daysBetweenComparison, setDaysBetweenComparison] = React.useState(\r\n    lookBack\r\n  );\r\n  const [numberOfBars, setNumberOfBars] = React.useState(1);\r\n  const [showAbsDiff, setShowAbsDiff] = React.useState(false);\r\n\r\n  // Map Items\r\n  const [showDailyGraph, setShowDailyGraph] = React.useState(false);\r\n  // Misc items\r\n  const [isProcessing, setIsProcessing] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    setTimeout(() => setIsProcessing(false), 500);\r\n  }, [isProcessing]);\r\n\r\n  const overviewColumns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Primer\",\r\n        accessor: \"primer\",\r\n        disableFilters: true,\r\n      },\r\n      {\r\n        Header: \"Accession ID\",\r\n        accessor: \"accession_id\",\r\n        disableFilters: true,\r\n      },\r\n      {\r\n        Header: \"Virus Name\",\r\n        accessor: \"virus_name\",\r\n        disableFilters: true,\r\n        width: 200,\r\n      },\r\n      {\r\n        Header: \"Diagram\",\r\n        accessor: \"match_diag\",\r\n        disableFilters: true,\r\n        width: 450,\r\n      },\r\n      {\r\n        Header: \"Primer Type\",\r\n        accessor: \"type\",\r\n        disableFilters: true,\r\n        width: 120,\r\n      },\r\n      {\r\n        Header: \"Homology %\",\r\n        accessor: \"match_pct\",\r\n      },\r\n      {\r\n        Header: \"Total Miss\",\r\n        accessor: \"misses\",\r\n      },\r\n      {\r\n        Header: \"Misses In 3' End\",\r\n        accessor: \"misses3\",\r\n      },\r\n      {\r\n        Header: \"Date Collected\",\r\n        accessor: \"date\",\r\n        disableFilters: true,\r\n        width: 140,\r\n        show: false,\r\n      },\r\n      {\r\n        Header: \"Country\",\r\n        accessor: \"country_name\",\r\n        disableFilters: true,\r\n      },\r\n    ],\r\n    []\r\n  );\r\n  const combinedCols = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Primer\",\r\n        accessor: \"primer\",\r\n        disableFilters: true,\r\n      },\r\n      {\r\n        Header: \"Accession ID\",\r\n        accessor: \"accession_id\",\r\n        disableFilters: true,\r\n      },\r\n      {\r\n        Header: \"Virus Name\",\r\n        accessor: \"virus_name\",\r\n        disableFilters: true,\r\n        width: 200,\r\n      },\r\n      {\r\n        Header: \"Date Collected\",\r\n        accessor: \"date\",\r\n        disableFilters: true,\r\n        width: 140,\r\n        show: false,\r\n      },\r\n      {\r\n        Header: \"Country\",\r\n        accessor: \"country_name\",\r\n        disableFilters: true,\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const dbActual = React.useMemo(\r\n    () =>\r\n      useCum\r\n        ? dbCountCum.current\r\n        : getRangeDbCount(dbCountDaily.current, lookBack, dateRange.current),\r\n    [useCum, lookBack]\r\n  );\r\n  console.log(\"dbActual  :>> \", dbActual);\r\n  const graphBase = React.useMemo(\r\n    () =>\r\n      baseTableData.current.filter(\r\n        dataFilter({\r\n          primers: primers,\r\n          pType: pType,\r\n          countries: countries,\r\n          miss: miss,\r\n          miss3: miss3,\r\n          match: match,\r\n        })\r\n      ),\r\n    [primers, pType, countries, miss, miss3, match]\r\n  );\r\n  const tableData = React.useMemo(\r\n    () => graphBase.filter(dataFilter({ timeFrameBrush: timeFrameBrush })),\r\n    [graphBase, timeFrameBrush]\r\n  );\r\n\r\n  const graphOverview = React.useMemo(\r\n    () =>\r\n      makeOverview(\r\n        graphBase,\r\n        primers.length === 0 ? Object.keys(baseData.current) : primers,\r\n        dbActual,\r\n        dateRange.current,\r\n        useCum,\r\n        lookBack,\r\n        countryAsTotal,\r\n        countries\r\n      ),\r\n    [graphBase, primers, dbActual, useCum, lookBack, countryAsTotal, countries]\r\n  );\r\n\r\n  const barData = React.useMemo(\r\n    () =>\r\n      isBar\r\n        ? makeBarData(\r\n            graphOverview,\r\n            dateRange.current,\r\n            timeFrameBrush,\r\n            daysBetweenComparison,\r\n            numberOfBars\r\n          )\r\n        : {},\r\n    [graphOverview, numberOfBars, daysBetweenComparison, timeFrameBrush, isBar]\r\n  );\r\n\r\n  const combinedBase = React.useMemo(\r\n    () => makeIntersection(JSON.parse(JSON.stringify(graphBase))),\r\n    [graphBase]\r\n  );\r\n  const graphCombined = React.useMemo(\r\n    () =>\r\n      makeOverview(\r\n        combinedBase,\r\n        primers.length === 0\r\n          ? [Object.keys(baseData.current).join(\", \")]\r\n          : [primers.join(\", \")],\r\n        dbActual,\r\n        dateRange.current,\r\n        useCum,\r\n        lookBack,\r\n        countryAsTotal,\r\n        countries\r\n      ),\r\n    [\r\n      combinedBase,\r\n      primers,\r\n      dbActual,\r\n      useCum,\r\n      lookBack,\r\n      countryAsTotal,\r\n      countries,\r\n    ]\r\n  );\r\n  const tableCombined = React.useMemo(\r\n    () => combinedBase.filter(dataFilter({ timeFrameBrush: timeFrameBrush })),\r\n    [combinedBase, timeFrameBrush]\r\n  );\r\n\r\n  if (result.current.length !== 0) {\r\n    // console.log(\"baseTableData :>> \", baseTableData);\r\n    // console.log(\"graphBase :>> \", graphBase);\r\n    // console.log(\"tableData :>> \", tableData);\r\n    console.log(\"graphOverview :>> \", graphOverview);\r\n    console.log(\"barData :>> \", barData);\r\n    // console.log(\"tableCombined :>> \", tableCombined);\r\n\r\n    return (\r\n      <div className=\"display-page\">\r\n        <Container>\r\n          <ItemFilters\r\n            baseData={baseData.current}\r\n            colNames={overviewColumns}\r\n            timeFrameBrush={timeFrameBrush}\r\n            setTimeFrameBrush={setTimeFrameBrush}\r\n            lookBack={lookBack}\r\n            setLookBack={setLookBack}\r\n            useCum={useCum}\r\n            setUseCum={setUseCum}\r\n            miss={miss}\r\n            setMiss={setMiss}\r\n            miss3={miss3}\r\n            setMiss3={setMiss3}\r\n            match={match}\r\n            setMatch={setMatch}\r\n            countryAsTotal={countryAsTotal}\r\n            setCountryAsTotal={setCountryAsTotal}\r\n            setCountries={setCountries}\r\n            setPrimers={setPrimers}\r\n            setPType={setPType}\r\n            isProcessing={isProcessing}\r\n            setIsProcessing={setIsProcessing}\r\n            isBar={isBar}\r\n            setIsBar={setIsBar}\r\n            daysBetweenComparison={daysBetweenComparison}\r\n            setDaysBetweenComparison={setDaysBetweenComparison}\r\n            numberOfBars={numberOfBars}\r\n            setNumberOfBars={setNumberOfBars}\r\n            showAbsDiff={showAbsDiff}\r\n            setShowAbsDiff={setShowAbsDiff}\r\n            showDailyGraph={showDailyGraph}\r\n            setShowDailyGraph={setShowDailyGraph}\r\n          />\r\n          <DataTable\r\n            id=\"collapse-table\"\r\n            title={\"Overview of Missed Viruses\"}\r\n            data={tableData}\r\n            columns={overviewColumns}\r\n            isCombined={false}\r\n            isCollapsable={true}\r\n            className=\"mb-5\"\r\n          />\r\n          <Row className=\"mb-5\">\r\n            <Col xs={12} lg={primers.length === 1 ? 6 : 12}>\r\n              <LineGraph\r\n                title={\"Genomes with mutation\"}\r\n                title2={\"Genomes with mutation in 3' end\"}\r\n                data={graphOverview}\r\n                primers={\r\n                  primers.length === 0 ? Object.keys(baseData.current) : primers\r\n                }\r\n                dates={dateRange.current}\r\n                setPrimers={setPrimers}\r\n                timeFrameBrush={timeFrameBrush}\r\n                setTimeFrameBrush={setTimeFrameBrush}\r\n              />\r\n            </Col>\r\n            {primers.length === 1 ? (\r\n              <Col xs={12} lg={6}>\r\n                <MapWithToolTip\r\n                  title={\"Map of Virus Mutations\"}\r\n                  data={tableData}\r\n                  lookBack={showDailyGraph ? lookBack : -1}\r\n                  db={\r\n                    showDailyGraph ? dbCountDaily.current : dbCountCum.current\r\n                  }\r\n                  timeFrameBrush={timeFrameBrush}\r\n                  setTimeFrameBrush={setTimeFrameBrush}\r\n                />\r\n              </Col>\r\n            ) : null}\r\n          </Row>\r\n          {isBar ? (\r\n            <BarGraph\r\n              title={\"Genomes with mutation\"}\r\n              title2={\"Percent of genomes with mutation in 3' end\"}\r\n              data={barData}\r\n              showAbsDiff={showAbsDiff}\r\n              className=\"mb-5\"\r\n            />\r\n          ) : null}\r\n          <Collapse in={combinedBase.length !== 0}>\r\n            <div>\r\n              <Row className=\"mb-5\">\r\n                <Col xs={12} lg={6}>\r\n                  <LineGraph\r\n                    title={\"Genomes with mutation (Combined)\"}\r\n                    title2={\"Genomes with mutation in 3' end (Combined)\"}\r\n                    data={graphCombined}\r\n                    primers={\r\n                      primers.length === 0\r\n                        ? [Object.keys(baseData.current).join(\", \")]\r\n                        : [primers.join(\", \")]\r\n                    }\r\n                    dates={dateRange.current}\r\n                    setPrimers={setPrimers}\r\n                    timeFrameBrush={timeFrameBrush}\r\n                    setTimeFrameBrush={setTimeFrameBrush}\r\n                  />\r\n                </Col>\r\n                <Col xs={12} lg={6}>\r\n                  <MapWithToolTip\r\n                    title={\"Map of Virus Mutations (Combined)\"}\r\n                    data={tableCombined}\r\n                    lookBack={showDailyGraph ? lookBack : -1}\r\n                    db={\r\n                      showDailyGraph ? dbCountDaily.current : dbCountCum.current\r\n                    }\r\n                    timeFrameBrush={timeFrameBrush}\r\n                    setTimeFrameBrush={setTimeFrameBrush}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <DataTable\r\n                title={\"Missed Viruses (Combined)\"}\r\n                data={tableCombined}\r\n                columns={combinedCols}\r\n                isCombined={true}\r\n                isCollapsable={true}\r\n                className=\"mb-5\"\r\n              />\r\n            </div>\r\n          </Collapse>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <InputData />;\r\n};\r\n\r\nexport default ResultPage;\r\n\r\nconst dataFilter = ({\r\n  timeFrameBrush = [],\r\n  primers = [],\r\n  pType = [],\r\n  countries = [],\r\n  miss = [],\r\n  miss3 = [],\r\n  match = [],\r\n}) => {\r\n  /**\r\n   * A filter for gisaid table data in records orientation (list of objects where column names are mapped to their value for that row)\r\n   * @param {Array} timeFrameBrush: the min and max timeFrame for the sequence\r\n   * @param {Array} primers: specific name for a particular primer\r\n   * @param {Array} pType: the primer type, one of [\"fwd\", \"rev\", \"prb\"]\r\n   * @param {Array} countries: the list of country that the seq must be from\r\n   * @param {Array} miss:  the min and max misses for the sequence\r\n   * @param {Array} miss3: the min and max misses in 3' end\r\n   * @param {Array} match: the min and max homolog %\r\n   * @returns {function} A function that takes a value and filter for parameters above\r\n   */\r\n  return (value) => {\r\n    let isWithinTimeFrame = true;\r\n    let isPrimer = true;\r\n    let isPType = true;\r\n    let isCountry = true;\r\n    let isMiss = true;\r\n    let isMiss3 = true;\r\n    let isMatch = true;\r\n\r\n    if (timeFrameBrush.length !== 0) {\r\n      const currDate = new Date(value.date);\r\n      const [startDate, endDate] = timeFrameBrush;\r\n      isWithinTimeFrame =\r\n        currDate.getTime() >= new Date(startDate).getTime() &&\r\n        currDate.getTime() <= new Date(endDate).getTime();\r\n    }\r\n    if (primers.length !== 0) {\r\n      isPrimer = primers.includes(value.primer);\r\n    }\r\n    if (pType.length !== 0) {\r\n      isPType = pType.includes(value.type);\r\n    }\r\n    if (countries.length !== 0) {\r\n      isCountry = countries\r\n        .map((val) => val.label)\r\n        .includes(value.country_name);\r\n    }\r\n    if (miss.length !== 0) {\r\n      console.log(\"miss :>> \", miss);\r\n      isMiss =\r\n        value.misses >= (miss[0] || 0) && value.misses <= (miss[1] || 100);\r\n    }\r\n    if (miss3.length !== 0) {\r\n      isMiss3 =\r\n        value.misses3 >= (miss3[0] || 0) && value.misses3 <= (miss3[1] || 100);\r\n    }\r\n    if (match.length !== 0) {\r\n      isMatch =\r\n        value.match_pct >= (match[0] || 0) &&\r\n        value.match_pct <= (match[1] || 100);\r\n    }\r\n    return (\r\n      isWithinTimeFrame &&\r\n      isPrimer &&\r\n      isPType &&\r\n      isCountry &&\r\n      isMiss &&\r\n      isMiss3 &&\r\n      isMatch\r\n    );\r\n  };\r\n};\r\n\r\nfunction parseDb(rawData, database) {\r\n  /**\r\n   * Retrieves that database count from [rawData]\r\n   * @param {Array} rawData: contains the primerDetails, databaseCounts (daily and cumulative), as well as primer filenames on server.\r\n   * @param {Number} database: 0 for cumulative, 1 for daily\r\n   * @returns {Object} The object mapping date -> countries -> submission count\r\n   */\r\n  if (rawData.length !== 0) {\r\n    return JSON.parse(JSON.stringify(rawData[1][database]));\r\n  }\r\n  return {};\r\n}\r\n\r\nfunction addName(primer) {\r\n  /**\r\n   * An annealing function that takes an object and adds [primer] to it with key under \"primer\"\r\n   * @param {string} primer: value to be added\r\n   * @returns {function} a function that takes in [value] and returns it after adding [primer] to it.\r\n   */\r\n  return (value) => {\r\n    value.primer = primer;\r\n    return value;\r\n  };\r\n}\r\n\r\nfunction makeTableData(primerDetails) {\r\n  /**\r\n   * Converts all the incoming data into a table format for subsequent data structure to be built off\r\n   * @param {Array} primerDetails: contains the primerDetails\r\n   * @returns {Array} Each item in the array corresponds to a single entry that has been missed.\r\n   **/\r\n  let tableData = [];\r\n  if (Object.keys(primerDetails).length !== 0) {\r\n    const primerNames = Object.keys(primerDetails);\r\n    for (const primerName of primerNames) {\r\n      tableData.push(...primerDetails[primerName].map(addName(primerName)));\r\n    }\r\n  }\r\n  return tableData;\r\n}\r\n\r\nfunction makeIntersection(tableData) {\r\n  /**\r\n   * Creates data for intersecting values if any\r\n   * @param {Array} tableData: contains the info on the primers to display\r\n   * @returns {Array}: List of virus that is missed by all primers\r\n   */\r\n  const names = new Set();\r\n  const primerDetails = tableData.reduce((primerDetails, primer) => {\r\n    if (names.has(primer.primer)) {\r\n      const details = primerDetails[primer.primer];\r\n      details.push(primer);\r\n      primerDetails[primer.primer] = details;\r\n      return primerDetails;\r\n    } else {\r\n      names.add(primer.primer);\r\n      primerDetails[primer.primer] = [primer];\r\n      return primerDetails;\r\n    }\r\n  }, {});\r\n  let intersection = [];\r\n  if (names.size === 1) {\r\n    return [];\r\n  } else if (names.size > 1) {\r\n    const primerNames = Object.keys(primerDetails);\r\n\r\n    intersection = findListIntersection(Object.values(primerDetails));\r\n    intersection = intersection.map(addName(primerNames.join(\", \")));\r\n  }\r\n  return intersection;\r\n}\r\n\r\nfunction findIntersection(list1, list2, key, intersect = true) {\r\n  /**\r\n   * Finds the intersection between two list\r\n   * @param {Bool} intersect: finds the intersection of [list1] and [list2] if true\r\n   *  otherwise, finds items in [list1] and not in [list2]\r\n   */\r\n\r\n  if (key) {\r\n    let result = list1.filter(\r\n      ((set) => (item) => {\r\n        return intersect === set.has(item[key]);\r\n      })(new Set(list2.map((item) => item[key])))\r\n    );\r\n    return result;\r\n  } else {\r\n    const result = list1.filter(\r\n      ((set) => (item) => {\r\n        return intersect === set.has(item);\r\n      })(new Set(list2.map((item) => item)))\r\n    );\r\n    return result;\r\n  }\r\n}\r\n\r\nfunction findListIntersection(itemList, key = \"accession_id\") {\r\n  /**\r\n   * Finds the intersecting items within each list\r\n   * @param   {Array}  itemList: Contains lists which contain info to find intersection of.\r\n   * @param   {string} keys: Optional choice to specify if items in lists are objects\r\n   * @returns {Array} An array containing items which are common across all list.\r\n   */\r\n  // List only contains one list, so we return it\r\n  let intersection = itemList[0];\r\n  for (let i = 1; i < itemList.length; i++) {\r\n    intersection = findIntersection(intersection, itemList[i], key);\r\n  }\r\n  return intersection;\r\n}\r\n\r\nfunction addObject(obj1, obj2, initialSum = 0) {\r\n  /**\r\n   * Adds the item in obj2 into obj1\r\n   * @param {Object} obj1: the obj in which items will be added too.\r\n   * @param {Object} obj2: The Object from which are retrieved to be added.\r\n   * @param {Any} initialSum: the value to be added when Obj2 contains an item Obj1 does not.\r\n   * @returns {Object} An object containing Obj1 + Obj2\r\n   */\r\n  for (let key of Object.keys(obj2)) {\r\n    obj1[key] = (obj1[key] || initialSum) + obj2[key];\r\n  }\r\n  return obj1;\r\n}\r\n\r\nfunction getRangeDbCount(dbCount, lookBack, dates) {\r\n  /**\r\n   * Calculates a rolling window for database\r\n   * @param {Object} dbCount: Contains the virus numbers in date -> country -> count order\r\n   * @param {Number} lookBack: the lookBack period. Only has effect if [useCum] is false\r\n   */\r\n  // TODO: Optimise maybe, remove repeated calculation each sliding window\r\n  const dateWindowCum = {};\r\n  for (const date of dates) {\r\n    const now = new Date(date);\r\n    const start = new Date(date);\r\n    start.setDate(start.getDate() - lookBack);\r\n    let dateCumCount = { total: 0 };\r\n    for (let d = start; d <= now; d.setDate(d.getDate() + 1)) {\r\n      const dateStr = d.toISOString().slice(0, 10);\r\n      dateCumCount = addObject(dateCumCount, dbCount[dateStr] || {});\r\n    }\r\n    dateWindowCum[date] = dateCumCount;\r\n  }\r\n\r\n  return dateWindowCum;\r\n}\r\n\r\nfunction getCountriesTotal(dbCount, countries, date) {\r\n  /**\r\n   * Retrieve the total number of submissions by [countries] on [date]\r\n   * @param {Object} dbCount: Maps date -> Object [country alpha 3 -> submission count]\r\n   * @param {Array} countries: list of countries\r\n   * @param {string} date: the date to obtain submission count for\r\n   * @returns {Number} the total number of submissions by [countries] on [date]\r\n   */\r\n  if (countries.length === 0) {\r\n    return dbCount[date].total;\r\n  }\r\n  const total = countries.reduce((prevVal, country) => {\r\n    prevVal += dbCount[date][country.value] || 0;\r\n    return prevVal;\r\n  }, 0);\r\n  return total;\r\n}\r\n\r\nfunction makeOverview(\r\n  primerDetails,\r\n  primerNames,\r\n  dbCount,\r\n  dates,\r\n  useCum,\r\n  lookBack,\r\n  isCountryAsTotal,\r\n  countries = []\r\n) {\r\n  /**\r\n   * Creates  data points used to plat overview graph\r\n   * @param {Array} primerDetails: Contains the list of filtered missed virus\r\n   * @param {Array} primerNames: Contains the list primer names\r\n   * @param {Object} dbCount: Contains the virus numbers in date -> country -> count order\r\n   * @param {bool} useCum: if the dbCount represents cumulated or daily values\r\n   * @param {Number} lookBack: the lookBack period. Only has effect if [useCum] is false\r\n   * @param {Array} countries: List of countries who should form the new total\r\n   * @returns {Array} List of Map containing \"date\", \"name\", \"mutation_pct\", \"mutation3_pct\", \"mutation_abs\", \"mutation3_abs\", \"submission_count\", and  \"countries_considered\"\r\n   */\r\n  const overviewData = [];\r\n  if (primerDetails.length === 0) return overviewData;\r\n  for (const primerName of primerNames) {\r\n    overviewData.push(\r\n      dates.map((date) => {\r\n        const currDate = new Date(date);\r\n        const minDate = new Date(date);\r\n        minDate.setDate(minDate.getDate() - lookBack);\r\n        const mutationAbs = primerDetails.filter((value) => {\r\n          const primersDate = new Date(value.date);\r\n          return useCum\r\n            ? primersDate.getTime() <= currDate.getTime() &&\r\n                value.primer === primerName\r\n            : primersDate.getTime() <= currDate.getTime() &&\r\n                primersDate.getTime() >= minDate.getTime() &&\r\n                value.primer === primerName;\r\n        }).length;\r\n        const mutation3Abs = primerDetails.filter((value) => {\r\n          const primersDate = new Date(value.date);\r\n          return useCum\r\n            ? primersDate.getTime() <= currDate.getTime() &&\r\n                value.primer === primerName &&\r\n                value.misses3 !== 0\r\n            : primersDate.getTime() <= currDate.getTime() &&\r\n                primersDate.getTime() >= minDate.getTime() &&\r\n                value.primer === primerName &&\r\n                value.misses3 !== 0;\r\n        }).length;\r\n\r\n        const databaseTotal = isCountryAsTotal\r\n          ? getCountriesTotal(dbCount, countries, date)\r\n          : dbCount[date].total;\r\n\r\n        // console.log(\"date :>> \", date);\r\n        // console.log(\"mutationAbs :>> \", mutationAbs);\r\n        // console.log(\"primerName :>> \", primerName);\r\n        // console.log(\"databaseTotal :>> \", databaseTotal);\r\n        // console.log(\r\n        //   \"((mutationAbs / databaseTotal) * 100).toFixed(3) :>> \",\r\n        //   ((mutationAbs / databaseTotal) * 100).toFixed(3)\r\n        // );\r\n        return {\r\n          date: date,\r\n          name: primerName,\r\n          mutation_pct: ((mutationAbs / databaseTotal) * 100).toFixed(3),\r\n          mutation3_pct: ((mutation3Abs / databaseTotal) * 100).toFixed(3),\r\n          mutation_abs: mutationAbs,\r\n          mutation3_abs: mutation3Abs,\r\n          submission_count: databaseTotal,\r\n          countries_considered: countries,\r\n        };\r\n      })\r\n    );\r\n  }\r\n  return overviewData;\r\n}\r\n\r\nfunction makeBarData(\r\n  graphOverview,\r\n  dates,\r\n  timeFrameBrush,\r\n  daysBetweenComparison,\r\n  numberOfBars\r\n) {\r\n  /**\r\n   * Makes the bar data to be used for display\r\n   * @param {Array} graphBase: List of List of Map containing \"date\", \"name\", \"mutation_pct\", \"mutation3_pct\", \"mutation_abs\", \"mutation3_abs\", \"submission_count\", and  \"countries_considered\". Each list correspond to a primer in primerNames of the same index\r\n   * @param {Array} primerNames: Contains the list primer names\r\n   * @param {Object} dbCount: Contains the virus numbers in date -> country -> count order\r\n   * @param {Array} timeFrameBrush: Contains the minimum and maximum date of interest\r\n   * @returns {Array} Contains a List of List. Each list corresponds to a particular primer\r\n   */\r\n  const dateDetails = [];\r\n\r\n  const now = timeFrameBrush[1] || new Date(dates[dates.length - 1]);\r\n  const start = new Date(now);\r\n  start.setDate(start.getDate() - daysBetweenComparison * numberOfBars);\r\n\r\n  while (start.getTime() < new Date(dates[0])) {\r\n    start.setDate(start.getDate() + daysBetweenComparison);\r\n  }\r\n\r\n  for (\r\n    let d = start;\r\n    d <= now;\r\n    d.setDate(d.getDate() + daysBetweenComparison)\r\n  ) {\r\n    const primerMutations = [];\r\n    for (let i = 0; i < graphOverview.length; i++) {\r\n      const details = graphOverview[i].filter((val) =>\r\n        new Date(val.date).sameDay(d)\r\n      );\r\n      primerMutations.push(...details);\r\n    }\r\n    dateDetails.push(primerMutations);\r\n  }\r\n\r\n  return dateDetails;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport UploadPage from \"./pages/upload/uploadPage\";\r\nimport ResultPage from \"./pages/results/resultsPage\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [results, setResults] = useState(\"[]\");\r\n  return (\r\n    <Router basename=\"/METHODS/corona/gamma/primer/build\">\r\n      <Link to=\"/\" style={{ textDecoration: \"none\" }}>\r\n        <h1 className=\"title\">Primer Checker</h1>\r\n      </Link>\r\n\r\n      <Switch>\r\n        <Route exact={true} path=\"/\">\r\n          <UploadPage setResults={setResults} />\r\n        </Route>\r\n        <Route exact={true} path=\"/results/:display\">\r\n          <ResultPage results={results} />\r\n        </Route>\r\n        <Route path=\"/results\">\r\n          <ResultPage results={results} />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <div>404: Page not found</div>\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}